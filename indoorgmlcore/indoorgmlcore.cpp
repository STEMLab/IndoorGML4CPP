////////////////////////////////////////////////////////////////////////
//
// indoorgmlcore.cpp
//
// This file was generated by XMLSpy 2021r2sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////


#include "StdAfx.h"
#include <string.h>
#include "indoorgmlcore.h"
#include <algorithm>




#import "msxml6.dll" implementation_only no_auto_exclude


// turn off warning: "this" used in base initializer list
#pragma warning(disable:4355)


namespace indoorgmlcore
{


MSXML2::IXMLDOMNodePtr TypeBase::GetElementNth(const altova::MemberInfo* member, unsigned index)
{
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		if (index-- == 0)
			return *it;
	}
	return 0;
}

MSXML2::IXMLDOMNodePtr TypeBase::GetElementLast(const altova::MemberInfo* member)
{
	MSXML2::IXMLDOMNodePtr p;
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		p = *it;
	}
	return p;
}

unsigned TypeBase::CountElement(const altova::MemberInfo* member)
{
	unsigned count = 0;
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		++count;
	}
	return count;
}

void TypeBase::RemoveElement(const altova::MemberInfo* member)
{
	MsxmlTreeOperations::RemoveElements(m_node, member);
}


int TypeBase::GetEnumerationIndex( const string_type sValue, const unsigned enumOffset, const unsigned enumCount)
{
	unsigned enumIndex = enumOffset;

	while( enumIndex < (enumOffset + enumCount) )
	{
		const FacetInfo* facet = GetTableEntry(facets, enumIndex);

		if( facet->StringValue == sValue)
			return enumIndex - enumOffset;
		enumIndex++;
	}
	return -1; //Invalid
}

string_type TypeBase::GetEnumerationValue( const int index, const unsigned enumOffset, const unsigned enumCount)
{
	unsigned enumIndex = enumOffset + index;

	if( enumIndex >= enumOffset && enumIndex < (enumOffset + enumCount) )
	{
		const FacetInfo* facet = GetTableEntry(facets, enumIndex);
		return facet->StringValue;
	}
	else
		throw altova::ConversionException( _T("Enumeration index out of range.") );
}

void ElementType::DeclareNamespace( const string_type prefix, const string_type namespaceURI )
{
	if ( namespaceURI.empty() )
		throw new altova::InvalidOperationException( _T( "DeclareNamespace requires non-empty namespaceURI." ) );
	string_type localName = _T( "xmlns" );
	if ( !prefix.empty() )
		localName = localName + _T( ":" ) + prefix;

	MsxmlTreeOperations::SetAttribute(m_node, localName.c_str(), string_type(_T("http://www.w3.org/2000/xmlns/")), namespaceURI);
}


namespace gco
{	

CAbstractObject_Type::CAbstractObject_Type(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, uuid(*this)	// "@uuid"
{
}

CAbstractObject_Type::CAbstractObject_Type(CAbstractObject_Type const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, uuid(*this)	// "@uuid"
{
}

void CAbstractObject_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractObject_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CAngle_PropertyType::CAngle_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Angle(*this)	// "Angle"
{
}

CAngle_PropertyType::CAngle_PropertyType(CAngle_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Angle(*this)	// "Angle"
{
}

void CAngle_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Angle_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CBinary_PropertyType::CBinary_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Binary(*this)	// "Binary"
{
}

CBinary_PropertyType::CBinary_PropertyType(CBinary_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Binary(*this)	// "Binary"
{
}

void CBinary_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Binary_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CBinary_Type::CBinary_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, src(*this)	// "@src"
{
}

CBinary_Type::CBinary_Type(CBinary_Type const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, src(*this)	// "@src"
{
}

void CBinary_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Binary_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CBoolean_PropertyType::CBoolean_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Boolean(*this)	// "Boolean"
{
}

CBoolean_PropertyType::CBoolean_PropertyType(CBoolean_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Boolean(*this)	// "Boolean"
{
}

void CBoolean_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Boolean_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CCharacterString_PropertyType::CCharacterString_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, CharacterString(*this)	// "CharacterString"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
, CI_RoleCode(*this)	// "CI_RoleCode"
, Country(*this)	// "Country"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
, LanguageCode(*this)	// "LanguageCode"
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
{
}

CCharacterString_PropertyType::CCharacterString_PropertyType(CCharacterString_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, CharacterString(*this)	// "CharacterString"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
, CI_RoleCode(*this)	// "CI_RoleCode"
, Country(*this)	// "Country"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
, LanguageCode(*this)	// "LanguageCode"
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
{
}

void CCharacterString_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CharacterString_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CCodeListValue_Type::CCodeListValue_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, codeList(*this)	// "@codeList"
, codeListValue(*this)	// "@codeListValue"
, codeSpace(*this)	// "@codeSpace"
{
}

CCodeListValue_Type::CCodeListValue_Type(CCodeListValue_Type const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, codeList(*this)	// "@codeList"
, codeListValue(*this)	// "@codeListValue"
, codeSpace(*this)	// "@codeSpace"
{
}

void CCodeListValue_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CodeListValue_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CDateTime_PropertyType::CDateTime_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, DateTime(*this)	// "DateTime"
{
}

CDateTime_PropertyType::CDateTime_PropertyType(CDateTime_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, DateTime(*this)	// "DateTime"
{
}

void CDateTime_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DateTime_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CDate_PropertyType::CDate_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Date(*this)	// "Date"
, DateTime(*this)	// "DateTime"
{
}

CDate_PropertyType::CDate_PropertyType(CDate_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Date(*this)	// "Date"
, DateTime(*this)	// "DateTime"
{
}

void CDate_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Date_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CDate_Type::CDate_Type(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CDate_Type::CDate_Type(CDate_Type const& other)
: TypeBase(other.GetNode())
{
}


CDecimal_PropertyType::CDecimal_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Decimal(*this)	// "Decimal"
{
}

CDecimal_PropertyType::CDecimal_PropertyType(CDecimal_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Decimal(*this)	// "Decimal"
{
}

void CDecimal_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Decimal_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CDistance_PropertyType::CDistance_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Distance(*this)	// "Distance"
{
}

CDistance_PropertyType::CDistance_PropertyType(CDistance_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Distance(*this)	// "Distance"
{
}

void CDistance_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Distance_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CGenericName_PropertyType::CGenericName_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, LocalName(*this)	// "LocalName"
, ScopedName(*this)	// "ScopedName"
{
}

CGenericName_PropertyType::CGenericName_PropertyType(CGenericName_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, LocalName(*this)	// "LocalName"
, ScopedName(*this)	// "ScopedName"
{
}

void CGenericName_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GenericName_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CInteger_PropertyType::CInteger_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Integer(*this)	// "Integer"
{
}

CInteger_PropertyType::CInteger_PropertyType(CInteger_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Integer(*this)	// "Integer"
{
}

void CInteger_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Integer_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CLength_PropertyType::CLength_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Length(*this)	// "Length"
, Distance(*this)	// "Distance"
{
}

CLength_PropertyType::CLength_PropertyType(CLength_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Length(*this)	// "Length"
, Distance(*this)	// "Distance"
{
}

void CLength_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Length_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CLocalName_PropertyType::CLocalName_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, LocalName(*this)	// "LocalName"
{
}

CLocalName_PropertyType::CLocalName_PropertyType(CLocalName_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, LocalName(*this)	// "LocalName"
{
}

void CLocalName_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LocalName_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CMeasure_PropertyType::CMeasure_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Measure(*this)	// "Measure"
, Angle(*this)	// "Angle"
, Distance(*this)	// "Distance"
, Length(*this)	// "Length"
, Scale(*this)	// "Scale"
{
}

CMeasure_PropertyType::CMeasure_PropertyType(CMeasure_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Measure(*this)	// "Measure"
, Angle(*this)	// "Angle"
, Distance(*this)	// "Distance"
, Length(*this)	// "Length"
, Scale(*this)	// "Scale"
{
}

void CMeasure_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Measure_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CMemberName_PropertyType::CMemberName_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MemberName(*this)	// "MemberName"
{
}

CMemberName_PropertyType::CMemberName_PropertyType(CMemberName_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MemberName(*this)	// "MemberName"
{
}

void CMemberName_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MemberName_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CMemberName_Type::CMemberName_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, aName(*this)	// "aName"
, attributeType(*this)	// "attributeType"
{
}

CMemberName_Type::CMemberName_Type(CMemberName_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, aName(*this)	// "aName"
, attributeType(*this)	// "attributeType"
{
}

void CMemberName_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MemberName_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CMultiplicityRange_PropertyType::CMultiplicityRange_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MultiplicityRange(*this)	// "MultiplicityRange"
{
}

CMultiplicityRange_PropertyType::CMultiplicityRange_PropertyType(CMultiplicityRange_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MultiplicityRange(*this)	// "MultiplicityRange"
{
}

void CMultiplicityRange_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiplicityRange_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CMultiplicityRange_Type::CMultiplicityRange_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, lower(*this)	// "lower"
, upper(*this)	// "upper"
{
}

CMultiplicityRange_Type::CMultiplicityRange_Type(CMultiplicityRange_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, lower(*this)	// "lower"
, upper(*this)	// "upper"
{
}

void CMultiplicityRange_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiplicityRange_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CMultiplicity_PropertyType::CMultiplicity_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Multiplicity(*this)	// "Multiplicity"
{
}

CMultiplicity_PropertyType::CMultiplicity_PropertyType(CMultiplicity_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Multiplicity(*this)	// "Multiplicity"
{
}

void CMultiplicity_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Multiplicity_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CMultiplicity_Type::CMultiplicity_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, range(*this)	// "range"
{
}

CMultiplicity_Type::CMultiplicity_Type(CMultiplicity_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, range(*this)	// "range"
{
}

void CMultiplicity_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Multiplicity_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CNumber_PropertyType::CNumber_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Real(*this)	// "Real"
, Decimal(*this)	// "Decimal"
, Integer(*this)	// "Integer"
{
}

CNumber_PropertyType::CNumber_PropertyType(CNumber_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Real(*this)	// "Real"
, Decimal(*this)	// "Decimal"
, Integer(*this)	// "Integer"
{
}

void CNumber_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Number_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CObjectReference_PropertyType::CObjectReference_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
{
}

CObjectReference_PropertyType::CObjectReference_PropertyType(CObjectReference_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
{
}

void CObjectReference_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ObjectReference_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CReal_PropertyType::CReal_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Real(*this)	// "Real"
{
}

CReal_PropertyType::CReal_PropertyType(CReal_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Real(*this)	// "Real"
{
}

void CReal_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Real_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CRecordType_PropertyType::CRecordType_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, RecordType(*this)	// "RecordType"
{
}

CRecordType_PropertyType::CRecordType_PropertyType(CRecordType_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, RecordType(*this)	// "RecordType"
{
}

void CRecordType_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RecordType_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CRecordType_Type::CRecordType_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
{
}

CRecordType_Type::CRecordType_Type(CRecordType_Type const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
{
}

void CRecordType_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RecordType_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CRecord_PropertyType::CRecord_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Record(*this)	// "Record"
{
}

CRecord_PropertyType::CRecord_PropertyType(CRecord_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Record(*this)	// "Record"
{
}

void CRecord_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Record_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CScale_PropertyType::CScale_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Scale(*this)	// "Scale"
{
}

CScale_PropertyType::CScale_PropertyType(CScale_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Scale(*this)	// "Scale"
{
}

void CScale_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Scale_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CScopedName_PropertyType::CScopedName_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, ScopedName(*this)	// "ScopedName"
{
}

CScopedName_PropertyType::CScopedName_PropertyType(CScopedName_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, ScopedName(*this)	// "ScopedName"
{
}

void CScopedName_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ScopedName_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CTypeName_PropertyType::CTypeName_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, TypeName2(*this)	// "TypeName"
{
}

CTypeName_PropertyType::CTypeName_PropertyType(CTypeName_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, TypeName2(*this)	// "TypeName"
{
}

void CTypeName_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TypeName_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CTypeName_Type::CTypeName_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, aName(*this)	// "aName"
{
}

CTypeName_Type::CTypeName_Type(CTypeName_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, aName(*this)	// "aName"
{
}

void CTypeName_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TypeName_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CUnitOfMeasure_PropertyType::CUnitOfMeasure_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUnitOfMeasure_PropertyType::CUnitOfMeasure_PropertyType(CUnitOfMeasure_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUnitOfMeasure_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnitOfMeasure_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUnlimitedInteger_PropertyType::CUnlimitedInteger_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, UnlimitedInteger(*this)	// "UnlimitedInteger"
{
}

CUnlimitedInteger_PropertyType::CUnlimitedInteger_PropertyType(CUnlimitedInteger_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, UnlimitedInteger(*this)	// "UnlimitedInteger"
{
}

void CUnlimitedInteger_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnlimitedInteger_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUnlimitedInteger_Type::CUnlimitedInteger_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CnonNegativeIntegerType(node)
, isInfinite(*this)	// "@isInfinite"
{
}

CUnlimitedInteger_Type::CUnlimitedInteger_Type(CUnlimitedInteger_Type const& other)
: ::indoorgmlcore::xs::CnonNegativeIntegerType(other.GetNode())
, isInfinite(*this)	// "@isInfinite"
{
}

void CUnlimitedInteger_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnlimitedInteger_Type"), _T("http://www.isotc211.org/2005/gco"));
}

CUomAngle_PropertyType::CUomAngle_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomAngle_PropertyType::CUomAngle_PropertyType(CUomAngle_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomAngle_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomAngle_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomArea_PropertyType::CUomArea_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomArea_PropertyType::CUomArea_PropertyType(CUomArea_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomArea_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomArea_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomLength_PropertyType::CUomLength_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomLength_PropertyType::CUomLength_PropertyType(CUomLength_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomLength_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomLength_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomScale_PropertyType::CUomScale_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomScale_PropertyType::CUomScale_PropertyType(CUomScale_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomScale_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomScale_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomTime_PropertyType::CUomTime_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomTime_PropertyType::CUomTime_PropertyType(CUomTime_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomTime_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomTime_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomVelocity_PropertyType::CUomVelocity_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomVelocity_PropertyType::CUomVelocity_PropertyType(CUomVelocity_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomVelocity_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomVelocity_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CUomVolume_PropertyType::CUomVolume_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

CUomVolume_PropertyType::CUomVolume_PropertyType(CUomVolume_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, UnitDefinition(*this)	// "UnitDefinition"
, BaseUnit(*this)	// "BaseUnit"
, ConventionalUnit(*this)	// "ConventionalUnit"
, DerivedUnit(*this)	// "DerivedUnit"
{
}

void CUomVolume_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UomVolume_PropertyType"), _T("http://www.isotc211.org/2005/gco"));
}

CDate_TypeType::CDate_TypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CDate_TypeType::CDate_TypeType(CDate_TypeType const& other)
: ElementType(other.GetNode())
{
}

void CDate_TypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Date_Type"), _T("http://www.isotc211.org/2005/gco"));
}

} // namespace gco


namespace gmd
{	

CAbstractDQ_Completeness_Type::CAbstractDQ_Completeness_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(node)
{
}

CAbstractDQ_Completeness_Type::CAbstractDQ_Completeness_Type(CAbstractDQ_Completeness_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(other.GetNode())
{
}

void CAbstractDQ_Completeness_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_Completeness_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_Element_Type::CAbstractDQ_Element_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, nameOfMeasure(*this)	// "nameOfMeasure"
, measureIdentification(*this)	// "measureIdentification"
, measureDescription(*this)	// "measureDescription"
, evaluationMethodType(*this)	// "evaluationMethodType"
, evaluationMethodDescription(*this)	// "evaluationMethodDescription"
, evaluationProcedure(*this)	// "evaluationProcedure"
, dateTime(*this)	// "dateTime"
, result(*this)	// "result"
{
}

CAbstractDQ_Element_Type::CAbstractDQ_Element_Type(CAbstractDQ_Element_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, nameOfMeasure(*this)	// "nameOfMeasure"
, measureIdentification(*this)	// "measureIdentification"
, measureDescription(*this)	// "measureDescription"
, evaluationMethodType(*this)	// "evaluationMethodType"
, evaluationMethodDescription(*this)	// "evaluationMethodDescription"
, evaluationProcedure(*this)	// "evaluationProcedure"
, dateTime(*this)	// "dateTime"
, result(*this)	// "result"
{
}

void CAbstractDQ_Element_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_Element_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_LogicalConsistency_Type::CAbstractDQ_LogicalConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(node)
{
}

CAbstractDQ_LogicalConsistency_Type::CAbstractDQ_LogicalConsistency_Type(CAbstractDQ_LogicalConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(other.GetNode())
{
}

void CAbstractDQ_LogicalConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_LogicalConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_PositionalAccuracy_Type::CAbstractDQ_PositionalAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(node)
{
}

CAbstractDQ_PositionalAccuracy_Type::CAbstractDQ_PositionalAccuracy_Type(CAbstractDQ_PositionalAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(other.GetNode())
{
}

void CAbstractDQ_PositionalAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_PositionalAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_Result_Type::CAbstractDQ_Result_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
{
}

CAbstractDQ_Result_Type::CAbstractDQ_Result_Type(CAbstractDQ_Result_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
{
}

void CAbstractDQ_Result_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_Result_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_TemporalAccuracy_Type::CAbstractDQ_TemporalAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(node)
{
}

CAbstractDQ_TemporalAccuracy_Type::CAbstractDQ_TemporalAccuracy_Type(CAbstractDQ_TemporalAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(other.GetNode())
{
}

void CAbstractDQ_TemporalAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_TemporalAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDQ_ThematicAccuracy_Type::CAbstractDQ_ThematicAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(node)
{
}

CAbstractDQ_ThematicAccuracy_Type::CAbstractDQ_ThematicAccuracy_Type(CAbstractDQ_ThematicAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Element_Type(other.GetNode())
{
}

void CAbstractDQ_ThematicAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDQ_ThematicAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractDS_Aggregate_Type::CAbstractDS_Aggregate_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, composedOf(*this)	// "composedOf"
, seriesMetadata(*this)	// "seriesMetadata"
, subset(*this)	// "subset"
, superset(*this)	// "superset"
{
}

CAbstractDS_Aggregate_Type::CAbstractDS_Aggregate_Type(CAbstractDS_Aggregate_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, composedOf(*this)	// "composedOf"
, seriesMetadata(*this)	// "seriesMetadata"
, subset(*this)	// "subset"
, superset(*this)	// "superset"
{
}

void CAbstractDS_Aggregate_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDS_Aggregate_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractEX_GeographicExtent_Type::CAbstractEX_GeographicExtent_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, extentTypeCode(*this)	// "extentTypeCode"
{
}

CAbstractEX_GeographicExtent_Type::CAbstractEX_GeographicExtent_Type(CAbstractEX_GeographicExtent_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, extentTypeCode(*this)	// "extentTypeCode"
{
}

void CAbstractEX_GeographicExtent_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractEX_GeographicExtent_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractMD_ContentInformation_Type::CAbstractMD_ContentInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
{
}

CAbstractMD_ContentInformation_Type::CAbstractMD_ContentInformation_Type(CAbstractMD_ContentInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
{
}

void CAbstractMD_ContentInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMD_ContentInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractMD_Identification_Type::CAbstractMD_Identification_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, citation(*this)	// "citation"
, abstract(*this)	// "abstract"
, purpose(*this)	// "purpose"
, credit(*this)	// "credit"
, status(*this)	// "status"
, pointOfContact(*this)	// "pointOfContact"
, resourceMaintenance(*this)	// "resourceMaintenance"
, graphicOverview(*this)	// "graphicOverview"
, resourceFormat(*this)	// "resourceFormat"
, descriptiveKeywords(*this)	// "descriptiveKeywords"
, resourceSpecificUsage(*this)	// "resourceSpecificUsage"
, resourceConstraints(*this)	// "resourceConstraints"
, aggregationInfo(*this)	// "aggregationInfo"
{
}

CAbstractMD_Identification_Type::CAbstractMD_Identification_Type(CAbstractMD_Identification_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, citation(*this)	// "citation"
, abstract(*this)	// "abstract"
, purpose(*this)	// "purpose"
, credit(*this)	// "credit"
, status(*this)	// "status"
, pointOfContact(*this)	// "pointOfContact"
, resourceMaintenance(*this)	// "resourceMaintenance"
, graphicOverview(*this)	// "graphicOverview"
, resourceFormat(*this)	// "resourceFormat"
, descriptiveKeywords(*this)	// "descriptiveKeywords"
, resourceSpecificUsage(*this)	// "resourceSpecificUsage"
, resourceConstraints(*this)	// "resourceConstraints"
, aggregationInfo(*this)	// "aggregationInfo"
{
}

void CAbstractMD_Identification_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMD_Identification_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractMD_SpatialRepresentation_Type::CAbstractMD_SpatialRepresentation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
{
}

CAbstractMD_SpatialRepresentation_Type::CAbstractMD_SpatialRepresentation_Type(CAbstractMD_SpatialRepresentation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
{
}

void CAbstractMD_SpatialRepresentation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMD_SpatialRepresentation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CAbstractRS_ReferenceSystem_Type::CAbstractRS_ReferenceSystem_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, domainOfValidity(*this)	// "domainOfValidity"
{
}

CAbstractRS_ReferenceSystem_Type::CAbstractRS_ReferenceSystem_Type(CAbstractRS_ReferenceSystem_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, domainOfValidity(*this)	// "domainOfValidity"
{
}

void CAbstractRS_ReferenceSystem_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractRS_ReferenceSystem_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Address_PropertyType::CCI_Address_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Address(*this)	// "CI_Address"
{
}

CCI_Address_PropertyType::CCI_Address_PropertyType(CCI_Address_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Address(*this)	// "CI_Address"
{
}

void CCI_Address_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Address_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Address_Type::CCI_Address_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, deliveryPoint(*this)	// "deliveryPoint"
, city(*this)	// "city"
, administrativeArea(*this)	// "administrativeArea"
, postalCode(*this)	// "postalCode"
, country(*this)	// "country"
, electronicMailAddress(*this)	// "electronicMailAddress"
{
}

CCI_Address_Type::CCI_Address_Type(CCI_Address_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, deliveryPoint(*this)	// "deliveryPoint"
, city(*this)	// "city"
, administrativeArea(*this)	// "administrativeArea"
, postalCode(*this)	// "postalCode"
, country(*this)	// "country"
, electronicMailAddress(*this)	// "electronicMailAddress"
{
}

void CCI_Address_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Address_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Citation_PropertyType::CCI_Citation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Citation(*this)	// "CI_Citation"
{
}

CCI_Citation_PropertyType::CCI_Citation_PropertyType(CCI_Citation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Citation(*this)	// "CI_Citation"
{
}

void CCI_Citation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Citation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Citation_Type::CCI_Citation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, title(*this)	// "title"
, alternateTitle(*this)	// "alternateTitle"
, date(*this)	// "date"
, edition(*this)	// "edition"
, editionDate(*this)	// "editionDate"
, identifier(*this)	// "identifier"
, citedResponsibleParty(*this)	// "citedResponsibleParty"
, presentationForm(*this)	// "presentationForm"
, series(*this)	// "series"
, otherCitationDetails(*this)	// "otherCitationDetails"
, collectiveTitle(*this)	// "collectiveTitle"
, ISBN(*this)	// "ISBN"
, ISSN(*this)	// "ISSN"
{
}

CCI_Citation_Type::CCI_Citation_Type(CCI_Citation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, title(*this)	// "title"
, alternateTitle(*this)	// "alternateTitle"
, date(*this)	// "date"
, edition(*this)	// "edition"
, editionDate(*this)	// "editionDate"
, identifier(*this)	// "identifier"
, citedResponsibleParty(*this)	// "citedResponsibleParty"
, presentationForm(*this)	// "presentationForm"
, series(*this)	// "series"
, otherCitationDetails(*this)	// "otherCitationDetails"
, collectiveTitle(*this)	// "collectiveTitle"
, ISBN(*this)	// "ISBN"
, ISSN(*this)	// "ISSN"
{
}

void CCI_Citation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Citation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Contact_PropertyType::CCI_Contact_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Contact(*this)	// "CI_Contact"
{
}

CCI_Contact_PropertyType::CCI_Contact_PropertyType(CCI_Contact_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Contact(*this)	// "CI_Contact"
{
}

void CCI_Contact_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Contact_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Contact_Type::CCI_Contact_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, phone(*this)	// "phone"
, address(*this)	// "address"
, onlineResource(*this)	// "onlineResource"
, hoursOfService(*this)	// "hoursOfService"
, contactInstructions(*this)	// "contactInstructions"
{
}

CCI_Contact_Type::CCI_Contact_Type(CCI_Contact_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, phone(*this)	// "phone"
, address(*this)	// "address"
, onlineResource(*this)	// "onlineResource"
, hoursOfService(*this)	// "hoursOfService"
, contactInstructions(*this)	// "contactInstructions"
{
}

void CCI_Contact_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Contact_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_DateTypeCode_PropertyType::CCI_DateTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
{
}

CCI_DateTypeCode_PropertyType::CCI_DateTypeCode_PropertyType(CCI_DateTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
{
}

void CCI_DateTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_DateTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Date_PropertyType::CCI_Date_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Date(*this)	// "CI_Date"
{
}

CCI_Date_PropertyType::CCI_Date_PropertyType(CCI_Date_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Date(*this)	// "CI_Date"
{
}

void CCI_Date_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Date_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Date_Type::CCI_Date_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, date(*this)	// "date"
, dateType(*this)	// "dateType"
{
}

CCI_Date_Type::CCI_Date_Type(CCI_Date_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, date(*this)	// "date"
, dateType(*this)	// "dateType"
{
}

void CCI_Date_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Date_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_OnLineFunctionCode_PropertyType::CCI_OnLineFunctionCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
{
}

CCI_OnLineFunctionCode_PropertyType::CCI_OnLineFunctionCode_PropertyType(CCI_OnLineFunctionCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
{
}

void CCI_OnLineFunctionCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_OnLineFunctionCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_OnlineResource_PropertyType::CCI_OnlineResource_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_OnlineResource(*this)	// "CI_OnlineResource"
{
}

CCI_OnlineResource_PropertyType::CCI_OnlineResource_PropertyType(CCI_OnlineResource_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_OnlineResource(*this)	// "CI_OnlineResource"
{
}

void CCI_OnlineResource_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_OnlineResource_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_OnlineResource_Type::CCI_OnlineResource_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, linkage(*this)	// "linkage"
, protocol(*this)	// "protocol"
, applicationProfile(*this)	// "applicationProfile"
, name(*this)	// "name"
, description(*this)	// "description"
, function(*this)	// "function"
{
}

CCI_OnlineResource_Type::CCI_OnlineResource_Type(CCI_OnlineResource_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, linkage(*this)	// "linkage"
, protocol(*this)	// "protocol"
, applicationProfile(*this)	// "applicationProfile"
, name(*this)	// "name"
, description(*this)	// "description"
, function(*this)	// "function"
{
}

void CCI_OnlineResource_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_OnlineResource_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_PresentationFormCode_PropertyType::CCI_PresentationFormCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
{
}

CCI_PresentationFormCode_PropertyType::CCI_PresentationFormCode_PropertyType(CCI_PresentationFormCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
{
}

void CCI_PresentationFormCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_PresentationFormCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_ResponsibleParty_PropertyType::CCI_ResponsibleParty_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_ResponsibleParty(*this)	// "CI_ResponsibleParty"
{
}

CCI_ResponsibleParty_PropertyType::CCI_ResponsibleParty_PropertyType(CCI_ResponsibleParty_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_ResponsibleParty(*this)	// "CI_ResponsibleParty"
{
}

void CCI_ResponsibleParty_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_ResponsibleParty_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_ResponsibleParty_Type::CCI_ResponsibleParty_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, individualName(*this)	// "individualName"
, organisationName(*this)	// "organisationName"
, positionName(*this)	// "positionName"
, contactInfo(*this)	// "contactInfo"
, role(*this)	// "role"
{
}

CCI_ResponsibleParty_Type::CCI_ResponsibleParty_Type(CCI_ResponsibleParty_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, individualName(*this)	// "individualName"
, organisationName(*this)	// "organisationName"
, positionName(*this)	// "positionName"
, contactInfo(*this)	// "contactInfo"
, role(*this)	// "role"
{
}

void CCI_ResponsibleParty_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_ResponsibleParty_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_RoleCode_PropertyType::CCI_RoleCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, CI_RoleCode(*this)	// "CI_RoleCode"
{
}

CCI_RoleCode_PropertyType::CCI_RoleCode_PropertyType(CCI_RoleCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, CI_RoleCode(*this)	// "CI_RoleCode"
{
}

void CCI_RoleCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_RoleCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Series_PropertyType::CCI_Series_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Series(*this)	// "CI_Series"
{
}

CCI_Series_PropertyType::CCI_Series_PropertyType(CCI_Series_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Series(*this)	// "CI_Series"
{
}

void CCI_Series_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Series_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Series_Type::CCI_Series_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, issueIdentification(*this)	// "issueIdentification"
, page(*this)	// "page"
{
}

CCI_Series_Type::CCI_Series_Type(CCI_Series_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, issueIdentification(*this)	// "issueIdentification"
, page(*this)	// "page"
{
}

void CCI_Series_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Series_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Telephone_PropertyType::CCI_Telephone_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Telephone(*this)	// "CI_Telephone"
{
}

CCI_Telephone_PropertyType::CCI_Telephone_PropertyType(CCI_Telephone_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CI_Telephone(*this)	// "CI_Telephone"
{
}

void CCI_Telephone_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Telephone_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CCI_Telephone_Type::CCI_Telephone_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, voice(*this)	// "voice"
, facsimile(*this)	// "facsimile"
{
}

CCI_Telephone_Type::CCI_Telephone_Type(CCI_Telephone_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, voice(*this)	// "voice"
, facsimile(*this)	// "facsimile"
{
}

void CCI_Telephone_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CI_Telephone_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CCountry_PropertyType::CCountry_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Country(*this)	// "Country"
{
}

CCountry_PropertyType::CCountry_PropertyType(CCountry_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Country(*this)	// "Country"
{
}

void CCountry_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Country_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_AbsoluteExternalPositionalAccuracy_PropertyType::CDQ_AbsoluteExternalPositionalAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
{
}

CDQ_AbsoluteExternalPositionalAccuracy_PropertyType::CDQ_AbsoluteExternalPositionalAccuracy_PropertyType(CDQ_AbsoluteExternalPositionalAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
{
}

void CDQ_AbsoluteExternalPositionalAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_AbsoluteExternalPositionalAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_AbsoluteExternalPositionalAccuracy_Type::CDQ_AbsoluteExternalPositionalAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(node)
{
}

CDQ_AbsoluteExternalPositionalAccuracy_Type::CDQ_AbsoluteExternalPositionalAccuracy_Type(CDQ_AbsoluteExternalPositionalAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(other.GetNode())
{
}

void CDQ_AbsoluteExternalPositionalAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_AbsoluteExternalPositionalAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_AccuracyOfATimeMeasurement_PropertyType::CDQ_AccuracyOfATimeMeasurement_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
{
}

CDQ_AccuracyOfATimeMeasurement_PropertyType::CDQ_AccuracyOfATimeMeasurement_PropertyType(CDQ_AccuracyOfATimeMeasurement_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
{
}

void CDQ_AccuracyOfATimeMeasurement_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_AccuracyOfATimeMeasurement_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_AccuracyOfATimeMeasurement_Type::CDQ_AccuracyOfATimeMeasurement_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(node)
{
}

CDQ_AccuracyOfATimeMeasurement_Type::CDQ_AccuracyOfATimeMeasurement_Type(CDQ_AccuracyOfATimeMeasurement_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(other.GetNode())
{
}

void CDQ_AccuracyOfATimeMeasurement_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_AccuracyOfATimeMeasurement_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_CompletenessCommission_PropertyType::CDQ_CompletenessCommission_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
{
}

CDQ_CompletenessCommission_PropertyType::CDQ_CompletenessCommission_PropertyType(CDQ_CompletenessCommission_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
{
}

void CDQ_CompletenessCommission_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_CompletenessCommission_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_CompletenessCommission_Type::CDQ_CompletenessCommission_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Completeness_Type(node)
{
}

CDQ_CompletenessCommission_Type::CDQ_CompletenessCommission_Type(CDQ_CompletenessCommission_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Completeness_Type(other.GetNode())
{
}

void CDQ_CompletenessCommission_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_CompletenessCommission_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_CompletenessOmission_PropertyType::CDQ_CompletenessOmission_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
{
}

CDQ_CompletenessOmission_PropertyType::CDQ_CompletenessOmission_PropertyType(CDQ_CompletenessOmission_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
{
}

void CDQ_CompletenessOmission_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_CompletenessOmission_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_CompletenessOmission_Type::CDQ_CompletenessOmission_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Completeness_Type(node)
{
}

CDQ_CompletenessOmission_Type::CDQ_CompletenessOmission_Type(CDQ_CompletenessOmission_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Completeness_Type(other.GetNode())
{
}

void CDQ_CompletenessOmission_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_CompletenessOmission_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_Completeness_PropertyType::CDQ_Completeness_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
{
}

CDQ_Completeness_PropertyType::CDQ_Completeness_PropertyType(CDQ_Completeness_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
{
}

void CDQ_Completeness_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_Completeness_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ConceptualConsistency_PropertyType::CDQ_ConceptualConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
{
}

CDQ_ConceptualConsistency_PropertyType::CDQ_ConceptualConsistency_PropertyType(CDQ_ConceptualConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
{
}

void CDQ_ConceptualConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ConceptualConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ConceptualConsistency_Type::CDQ_ConceptualConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(node)
{
}

CDQ_ConceptualConsistency_Type::CDQ_ConceptualConsistency_Type(CDQ_ConceptualConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(other.GetNode())
{
}

void CDQ_ConceptualConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ConceptualConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ConformanceResult_PropertyType::CDQ_ConformanceResult_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
{
}

CDQ_ConformanceResult_PropertyType::CDQ_ConformanceResult_PropertyType(CDQ_ConformanceResult_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
{
}

void CDQ_ConformanceResult_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ConformanceResult_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ConformanceResult_Type::CDQ_ConformanceResult_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Result_Type(node)
, specification(*this)	// "specification"
, explanation(*this)	// "explanation"
, pass(*this)	// "pass"
{
}

CDQ_ConformanceResult_Type::CDQ_ConformanceResult_Type(CDQ_ConformanceResult_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Result_Type(other.GetNode())
, specification(*this)	// "specification"
, explanation(*this)	// "explanation"
, pass(*this)	// "pass"
{
}

void CDQ_ConformanceResult_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ConformanceResult_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_DataQuality_PropertyType::CDQ_DataQuality_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_DataQuality(*this)	// "DQ_DataQuality"
{
}

CDQ_DataQuality_PropertyType::CDQ_DataQuality_PropertyType(CDQ_DataQuality_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_DataQuality(*this)	// "DQ_DataQuality"
{
}

void CDQ_DataQuality_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_DataQuality_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_DataQuality_Type::CDQ_DataQuality_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, scope(*this)	// "scope"
, report(*this)	// "report"
, lineage(*this)	// "lineage"
{
}

CDQ_DataQuality_Type::CDQ_DataQuality_Type(CDQ_DataQuality_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, scope(*this)	// "scope"
, report(*this)	// "report"
, lineage(*this)	// "lineage"
{
}

void CDQ_DataQuality_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_DataQuality_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_DomainConsistency_PropertyType::CDQ_DomainConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
{
}

CDQ_DomainConsistency_PropertyType::CDQ_DomainConsistency_PropertyType(CDQ_DomainConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
{
}

void CDQ_DomainConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_DomainConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_DomainConsistency_Type::CDQ_DomainConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(node)
{
}

CDQ_DomainConsistency_Type::CDQ_DomainConsistency_Type(CDQ_DomainConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(other.GetNode())
{
}

void CDQ_DomainConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_DomainConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_Element_PropertyType::CDQ_Element_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

CDQ_Element_PropertyType::CDQ_Element_PropertyType(CDQ_Element_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

void CDQ_Element_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_Element_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_EvaluationMethodTypeCode_PropertyType::CDQ_EvaluationMethodTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
{
}

CDQ_EvaluationMethodTypeCode_PropertyType::CDQ_EvaluationMethodTypeCode_PropertyType(CDQ_EvaluationMethodTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
{
}

void CDQ_EvaluationMethodTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_EvaluationMethodTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_FormatConsistency_PropertyType::CDQ_FormatConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
{
}

CDQ_FormatConsistency_PropertyType::CDQ_FormatConsistency_PropertyType(CDQ_FormatConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
{
}

void CDQ_FormatConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_FormatConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_FormatConsistency_Type::CDQ_FormatConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(node)
{
}

CDQ_FormatConsistency_Type::CDQ_FormatConsistency_Type(CDQ_FormatConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(other.GetNode())
{
}

void CDQ_FormatConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_FormatConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_GriddedDataPositionalAccuracy_PropertyType::CDQ_GriddedDataPositionalAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
{
}

CDQ_GriddedDataPositionalAccuracy_PropertyType::CDQ_GriddedDataPositionalAccuracy_PropertyType(CDQ_GriddedDataPositionalAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
{
}

void CDQ_GriddedDataPositionalAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_GriddedDataPositionalAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_GriddedDataPositionalAccuracy_Type::CDQ_GriddedDataPositionalAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(node)
{
}

CDQ_GriddedDataPositionalAccuracy_Type::CDQ_GriddedDataPositionalAccuracy_Type(CDQ_GriddedDataPositionalAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(other.GetNode())
{
}

void CDQ_GriddedDataPositionalAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_GriddedDataPositionalAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_LogicalConsistency_PropertyType::CDQ_LogicalConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

CDQ_LogicalConsistency_PropertyType::CDQ_LogicalConsistency_PropertyType(CDQ_LogicalConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

void CDQ_LogicalConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_LogicalConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_NonQuantitativeAttributeAccuracy_PropertyType::CDQ_NonQuantitativeAttributeAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
{
}

CDQ_NonQuantitativeAttributeAccuracy_PropertyType::CDQ_NonQuantitativeAttributeAccuracy_PropertyType(CDQ_NonQuantitativeAttributeAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
{
}

void CDQ_NonQuantitativeAttributeAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_NonQuantitativeAttributeAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_NonQuantitativeAttributeAccuracy_Type::CDQ_NonQuantitativeAttributeAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(node)
{
}

CDQ_NonQuantitativeAttributeAccuracy_Type::CDQ_NonQuantitativeAttributeAccuracy_Type(CDQ_NonQuantitativeAttributeAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(other.GetNode())
{
}

void CDQ_NonQuantitativeAttributeAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_NonQuantitativeAttributeAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_PositionalAccuracy_PropertyType::CDQ_PositionalAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}

CDQ_PositionalAccuracy_PropertyType::CDQ_PositionalAccuracy_PropertyType(CDQ_PositionalAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}

void CDQ_PositionalAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_PositionalAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_QuantitativeAttributeAccuracy_PropertyType::CDQ_QuantitativeAttributeAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
{
}

CDQ_QuantitativeAttributeAccuracy_PropertyType::CDQ_QuantitativeAttributeAccuracy_PropertyType(CDQ_QuantitativeAttributeAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
{
}

void CDQ_QuantitativeAttributeAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_QuantitativeAttributeAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_QuantitativeAttributeAccuracy_Type::CDQ_QuantitativeAttributeAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(node)
{
}

CDQ_QuantitativeAttributeAccuracy_Type::CDQ_QuantitativeAttributeAccuracy_Type(CDQ_QuantitativeAttributeAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(other.GetNode())
{
}

void CDQ_QuantitativeAttributeAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_QuantitativeAttributeAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_QuantitativeResult_PropertyType::CDQ_QuantitativeResult_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
{
}

CDQ_QuantitativeResult_PropertyType::CDQ_QuantitativeResult_PropertyType(CDQ_QuantitativeResult_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
{
}

void CDQ_QuantitativeResult_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_QuantitativeResult_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_QuantitativeResult_Type::CDQ_QuantitativeResult_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_Result_Type(node)
, valueType(*this)	// "valueType"
, valueUnit(*this)	// "valueUnit"
, errorStatistic(*this)	// "errorStatistic"
, value2(*this)	// "value"
{
}

CDQ_QuantitativeResult_Type::CDQ_QuantitativeResult_Type(CDQ_QuantitativeResult_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_Result_Type(other.GetNode())
, valueType(*this)	// "valueType"
, valueUnit(*this)	// "valueUnit"
, errorStatistic(*this)	// "errorStatistic"
, value2(*this)	// "value"
{
}

void CDQ_QuantitativeResult_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_QuantitativeResult_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_RelativeInternalPositionalAccuracy_PropertyType::CDQ_RelativeInternalPositionalAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}

CDQ_RelativeInternalPositionalAccuracy_PropertyType::CDQ_RelativeInternalPositionalAccuracy_PropertyType(CDQ_RelativeInternalPositionalAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}

void CDQ_RelativeInternalPositionalAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_RelativeInternalPositionalAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_RelativeInternalPositionalAccuracy_Type::CDQ_RelativeInternalPositionalAccuracy_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(node)
{
}

CDQ_RelativeInternalPositionalAccuracy_Type::CDQ_RelativeInternalPositionalAccuracy_Type(CDQ_RelativeInternalPositionalAccuracy_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_PositionalAccuracy_Type(other.GetNode())
{
}

void CDQ_RelativeInternalPositionalAccuracy_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_RelativeInternalPositionalAccuracy_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_Result_PropertyType::CDQ_Result_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
{
}

CDQ_Result_PropertyType::CDQ_Result_PropertyType(CDQ_Result_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
{
}

void CDQ_Result_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_Result_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_Scope_PropertyType::CDQ_Scope_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_Scope(*this)	// "DQ_Scope"
{
}

CDQ_Scope_PropertyType::CDQ_Scope_PropertyType(CDQ_Scope_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_Scope(*this)	// "DQ_Scope"
{
}

void CDQ_Scope_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_Scope_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_Scope_Type::CDQ_Scope_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, level(*this)	// "level"
, extent(*this)	// "extent"
, levelDescription(*this)	// "levelDescription"
{
}

CDQ_Scope_Type::CDQ_Scope_Type(CDQ_Scope_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, level(*this)	// "level"
, extent(*this)	// "extent"
, levelDescription(*this)	// "levelDescription"
{
}

void CDQ_Scope_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_Scope_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TemporalAccuracy_PropertyType::CDQ_TemporalAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
{
}

CDQ_TemporalAccuracy_PropertyType::CDQ_TemporalAccuracy_PropertyType(CDQ_TemporalAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
{
}

void CDQ_TemporalAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TemporalAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TemporalConsistency_PropertyType::CDQ_TemporalConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
{
}

CDQ_TemporalConsistency_PropertyType::CDQ_TemporalConsistency_PropertyType(CDQ_TemporalConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
{
}

void CDQ_TemporalConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TemporalConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TemporalConsistency_Type::CDQ_TemporalConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(node)
{
}

CDQ_TemporalConsistency_Type::CDQ_TemporalConsistency_Type(CDQ_TemporalConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(other.GetNode())
{
}

void CDQ_TemporalConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TemporalConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TemporalValidity_PropertyType::CDQ_TemporalValidity_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
{
}

CDQ_TemporalValidity_PropertyType::CDQ_TemporalValidity_PropertyType(CDQ_TemporalValidity_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
{
}

void CDQ_TemporalValidity_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TemporalValidity_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TemporalValidity_Type::CDQ_TemporalValidity_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(node)
{
}

CDQ_TemporalValidity_Type::CDQ_TemporalValidity_Type(CDQ_TemporalValidity_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_TemporalAccuracy_Type(other.GetNode())
{
}

void CDQ_TemporalValidity_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TemporalValidity_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ThematicAccuracy_PropertyType::CDQ_ThematicAccuracy_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
{
}

CDQ_ThematicAccuracy_PropertyType::CDQ_ThematicAccuracy_PropertyType(CDQ_ThematicAccuracy_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
{
}

void CDQ_ThematicAccuracy_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ThematicAccuracy_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ThematicClassificationCorrectness_PropertyType::CDQ_ThematicClassificationCorrectness_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
{
}

CDQ_ThematicClassificationCorrectness_PropertyType::CDQ_ThematicClassificationCorrectness_PropertyType(CDQ_ThematicClassificationCorrectness_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
{
}

void CDQ_ThematicClassificationCorrectness_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ThematicClassificationCorrectness_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_ThematicClassificationCorrectness_Type::CDQ_ThematicClassificationCorrectness_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(node)
{
}

CDQ_ThematicClassificationCorrectness_Type::CDQ_ThematicClassificationCorrectness_Type(CDQ_ThematicClassificationCorrectness_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_ThematicAccuracy_Type(other.GetNode())
{
}

void CDQ_ThematicClassificationCorrectness_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_ThematicClassificationCorrectness_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TopologicalConsistency_PropertyType::CDQ_TopologicalConsistency_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

CDQ_TopologicalConsistency_PropertyType::CDQ_TopologicalConsistency_PropertyType(CDQ_TopologicalConsistency_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
{
}

void CDQ_TopologicalConsistency_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TopologicalConsistency_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDQ_TopologicalConsistency_Type::CDQ_TopologicalConsistency_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(node)
{
}

CDQ_TopologicalConsistency_Type::CDQ_TopologicalConsistency_Type(CDQ_TopologicalConsistency_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDQ_LogicalConsistency_Type(other.GetNode())
{
}

void CDQ_TopologicalConsistency_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DQ_TopologicalConsistency_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Aggregate_PropertyType::CDS_Aggregate_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Initiative(*this)	// "DS_Initiative"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
, DS_Series(*this)	// "DS_Series"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

CDS_Aggregate_PropertyType::CDS_Aggregate_PropertyType(CDS_Aggregate_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Initiative(*this)	// "DS_Initiative"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
, DS_Series(*this)	// "DS_Series"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

void CDS_Aggregate_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Aggregate_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_AssociationTypeCode_PropertyType::CDS_AssociationTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
{
}

CDS_AssociationTypeCode_PropertyType::CDS_AssociationTypeCode_PropertyType(CDS_AssociationTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
{
}

void CDS_AssociationTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_AssociationTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Association_PropertyType::CDS_Association_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Association(*this)	// "DS_Association"
{
}

CDS_Association_PropertyType::CDS_Association_PropertyType(CDS_Association_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Association(*this)	// "DS_Association"
{
}

void CDS_Association_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Association_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Association_Type::CDS_Association_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
{
}

CDS_Association_Type::CDS_Association_Type(CDS_Association_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
{
}

void CDS_Association_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Association_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_DataSet_PropertyType::CDS_DataSet_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_DataSet(*this)	// "DS_DataSet"
{
}

CDS_DataSet_PropertyType::CDS_DataSet_PropertyType(CDS_DataSet_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_DataSet(*this)	// "DS_DataSet"
{
}

void CDS_DataSet_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_DataSet_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_DataSet_Type::CDS_DataSet_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, has(*this)	// "has"
, partOf(*this)	// "partOf"
{
}

CDS_DataSet_Type::CDS_DataSet_Type(CDS_DataSet_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, has(*this)	// "has"
, partOf(*this)	// "partOf"
{
}

void CDS_DataSet_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_DataSet_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_InitiativeTypeCode_PropertyType::CDS_InitiativeTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
{
}

CDS_InitiativeTypeCode_PropertyType::CDS_InitiativeTypeCode_PropertyType(CDS_InitiativeTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
{
}

void CDS_InitiativeTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_InitiativeTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Initiative_PropertyType::CDS_Initiative_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Initiative(*this)	// "DS_Initiative"
{
}

CDS_Initiative_PropertyType::CDS_Initiative_PropertyType(CDS_Initiative_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Initiative(*this)	// "DS_Initiative"
{
}

void CDS_Initiative_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Initiative_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Initiative_Type::CDS_Initiative_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(node)
{
}

CDS_Initiative_Type::CDS_Initiative_Type(CDS_Initiative_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(other.GetNode())
{
}

void CDS_Initiative_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Initiative_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_OtherAggregate_PropertyType::CDS_OtherAggregate_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

CDS_OtherAggregate_PropertyType::CDS_OtherAggregate_PropertyType(CDS_OtherAggregate_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

void CDS_OtherAggregate_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_OtherAggregate_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_OtherAggregate_Type::CDS_OtherAggregate_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(node)
{
}

CDS_OtherAggregate_Type::CDS_OtherAggregate_Type(CDS_OtherAggregate_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(other.GetNode())
{
}

void CDS_OtherAggregate_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_OtherAggregate_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Platform_PropertyType::CDS_Platform_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Platform(*this)	// "DS_Platform"
{
}

CDS_Platform_PropertyType::CDS_Platform_PropertyType(CDS_Platform_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Platform(*this)	// "DS_Platform"
{
}

void CDS_Platform_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Platform_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Platform_Type::CDS_Platform_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CDS_Series_Type(node)
{
}

CDS_Platform_Type::CDS_Platform_Type(CDS_Platform_Type const& other)
: ::indoorgmlcore::gmd::CDS_Series_Type(other.GetNode())
{
}

void CDS_Platform_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Platform_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_ProductionSeries_PropertyType::CDS_ProductionSeries_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
{
}

CDS_ProductionSeries_PropertyType::CDS_ProductionSeries_PropertyType(CDS_ProductionSeries_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
{
}

void CDS_ProductionSeries_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_ProductionSeries_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_ProductionSeries_Type::CDS_ProductionSeries_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CDS_Series_Type(node)
{
}

CDS_ProductionSeries_Type::CDS_ProductionSeries_Type(CDS_ProductionSeries_Type const& other)
: ::indoorgmlcore::gmd::CDS_Series_Type(other.GetNode())
{
}

void CDS_ProductionSeries_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_ProductionSeries_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Sensor_PropertyType::CDS_Sensor_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Sensor(*this)	// "DS_Sensor"
{
}

CDS_Sensor_PropertyType::CDS_Sensor_PropertyType(CDS_Sensor_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Sensor(*this)	// "DS_Sensor"
{
}

void CDS_Sensor_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Sensor_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Sensor_Type::CDS_Sensor_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CDS_Series_Type(node)
{
}

CDS_Sensor_Type::CDS_Sensor_Type(CDS_Sensor_Type const& other)
: ::indoorgmlcore::gmd::CDS_Series_Type(other.GetNode())
{
}

void CDS_Sensor_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Sensor_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Series_PropertyType::CDS_Series_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Series(*this)	// "DS_Series"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
{
}

CDS_Series_PropertyType::CDS_Series_PropertyType(CDS_Series_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_Series(*this)	// "DS_Series"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
{
}

void CDS_Series_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Series_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_Series_Type::CDS_Series_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(node)
{
}

CDS_Series_Type::CDS_Series_Type(CDS_Series_Type const& other)
: ::indoorgmlcore::gmd::CAbstractDS_Aggregate_Type(other.GetNode())
{
}

void CDS_Series_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_Series_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_StereoMate_PropertyType::CDS_StereoMate_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

CDS_StereoMate_PropertyType::CDS_StereoMate_PropertyType(CDS_StereoMate_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, DS_StereoMate(*this)	// "DS_StereoMate"
{
}

void CDS_StereoMate_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_StereoMate_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CDS_StereoMate_Type::CDS_StereoMate_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CDS_OtherAggregate_Type(node)
{
}

CDS_StereoMate_Type::CDS_StereoMate_Type(CDS_StereoMate_Type const& other)
: ::indoorgmlcore::gmd::CDS_OtherAggregate_Type(other.GetNode())
{
}

void CDS_StereoMate_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DS_StereoMate_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_BoundingPolygon_PropertyType::CEX_BoundingPolygon_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
{
}

CEX_BoundingPolygon_PropertyType::CEX_BoundingPolygon_PropertyType(CEX_BoundingPolygon_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
{
}

void CEX_BoundingPolygon_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_BoundingPolygon_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_BoundingPolygon_Type::CEX_BoundingPolygon_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(node)
, polygon(*this)	// "polygon"
{
}

CEX_BoundingPolygon_Type::CEX_BoundingPolygon_Type(CEX_BoundingPolygon_Type const& other)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(other.GetNode())
, polygon(*this)	// "polygon"
{
}

void CEX_BoundingPolygon_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_BoundingPolygon_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_Extent_PropertyType::CEX_Extent_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_Extent(*this)	// "EX_Extent"
{
}

CEX_Extent_PropertyType::CEX_Extent_PropertyType(CEX_Extent_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_Extent(*this)	// "EX_Extent"
{
}

void CEX_Extent_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_Extent_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_Extent_Type::CEX_Extent_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, description(*this)	// "description"
, geographicElement(*this)	// "geographicElement"
, temporalElement(*this)	// "temporalElement"
, verticalElement(*this)	// "verticalElement"
{
}

CEX_Extent_Type::CEX_Extent_Type(CEX_Extent_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, description(*this)	// "description"
, geographicElement(*this)	// "geographicElement"
, temporalElement(*this)	// "temporalElement"
, verticalElement(*this)	// "verticalElement"
{
}

void CEX_Extent_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_Extent_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_GeographicBoundingBox_PropertyType::CEX_GeographicBoundingBox_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
{
}

CEX_GeographicBoundingBox_PropertyType::CEX_GeographicBoundingBox_PropertyType(CEX_GeographicBoundingBox_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
{
}

void CEX_GeographicBoundingBox_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_GeographicBoundingBox_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_GeographicBoundingBox_Type::CEX_GeographicBoundingBox_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(node)
, westBoundLongitude(*this)	// "westBoundLongitude"
, eastBoundLongitude(*this)	// "eastBoundLongitude"
, southBoundLatitude(*this)	// "southBoundLatitude"
, northBoundLatitude(*this)	// "northBoundLatitude"
{
}

CEX_GeographicBoundingBox_Type::CEX_GeographicBoundingBox_Type(CEX_GeographicBoundingBox_Type const& other)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(other.GetNode())
, westBoundLongitude(*this)	// "westBoundLongitude"
, eastBoundLongitude(*this)	// "eastBoundLongitude"
, southBoundLatitude(*this)	// "southBoundLatitude"
, northBoundLatitude(*this)	// "northBoundLatitude"
{
}

void CEX_GeographicBoundingBox_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_GeographicBoundingBox_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_GeographicDescription_PropertyType::CEX_GeographicDescription_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
{
}

CEX_GeographicDescription_PropertyType::CEX_GeographicDescription_PropertyType(CEX_GeographicDescription_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
{
}

void CEX_GeographicDescription_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_GeographicDescription_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_GeographicDescription_Type::CEX_GeographicDescription_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(node)
, geographicIdentifier(*this)	// "geographicIdentifier"
{
}

CEX_GeographicDescription_Type::CEX_GeographicDescription_Type(CEX_GeographicDescription_Type const& other)
: ::indoorgmlcore::gmd::CAbstractEX_GeographicExtent_Type(other.GetNode())
, geographicIdentifier(*this)	// "geographicIdentifier"
{
}

void CEX_GeographicDescription_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_GeographicDescription_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_GeographicExtent_PropertyType::CEX_GeographicExtent_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
{
}

CEX_GeographicExtent_PropertyType::CEX_GeographicExtent_PropertyType(CEX_GeographicExtent_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
{
}

void CEX_GeographicExtent_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_GeographicExtent_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_SpatialTemporalExtent_PropertyType::CEX_SpatialTemporalExtent_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
{
}

CEX_SpatialTemporalExtent_PropertyType::CEX_SpatialTemporalExtent_PropertyType(CEX_SpatialTemporalExtent_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
{
}

void CEX_SpatialTemporalExtent_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_SpatialTemporalExtent_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_SpatialTemporalExtent_Type::CEX_SpatialTemporalExtent_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CEX_TemporalExtent_Type(node)
, spatialExtent(*this)	// "spatialExtent"
{
}

CEX_SpatialTemporalExtent_Type::CEX_SpatialTemporalExtent_Type(CEX_SpatialTemporalExtent_Type const& other)
: ::indoorgmlcore::gmd::CEX_TemporalExtent_Type(other.GetNode())
, spatialExtent(*this)	// "spatialExtent"
{
}

void CEX_SpatialTemporalExtent_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_SpatialTemporalExtent_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_TemporalExtent_PropertyType::CEX_TemporalExtent_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_TemporalExtent(*this)	// "EX_TemporalExtent"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
{
}

CEX_TemporalExtent_PropertyType::CEX_TemporalExtent_PropertyType(CEX_TemporalExtent_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_TemporalExtent(*this)	// "EX_TemporalExtent"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
{
}

void CEX_TemporalExtent_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_TemporalExtent_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_TemporalExtent_Type::CEX_TemporalExtent_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, extent(*this)	// "extent"
{
}

CEX_TemporalExtent_Type::CEX_TemporalExtent_Type(CEX_TemporalExtent_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, extent(*this)	// "extent"
{
}

void CEX_TemporalExtent_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_TemporalExtent_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_VerticalExtent_PropertyType::CEX_VerticalExtent_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_VerticalExtent(*this)	// "EX_VerticalExtent"
{
}

CEX_VerticalExtent_PropertyType::CEX_VerticalExtent_PropertyType(CEX_VerticalExtent_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, EX_VerticalExtent(*this)	// "EX_VerticalExtent"
{
}

void CEX_VerticalExtent_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_VerticalExtent_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CEX_VerticalExtent_Type::CEX_VerticalExtent_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, minimumValue(*this)	// "minimumValue"
, maximumValue(*this)	// "maximumValue"
, verticalCRS(*this)	// "verticalCRS"
{
}

CEX_VerticalExtent_Type::CEX_VerticalExtent_Type(CEX_VerticalExtent_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, minimumValue(*this)	// "minimumValue"
, maximumValue(*this)	// "maximumValue"
, verticalCRS(*this)	// "verticalCRS"
{
}

void CEX_VerticalExtent_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EX_VerticalExtent_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_Lineage_PropertyType::CLI_Lineage_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_Lineage(*this)	// "LI_Lineage"
{
}

CLI_Lineage_PropertyType::CLI_Lineage_PropertyType(CLI_Lineage_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_Lineage(*this)	// "LI_Lineage"
{
}

void CLI_Lineage_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_Lineage_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_Lineage_Type::CLI_Lineage_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, statement(*this)	// "statement"
, processStep(*this)	// "processStep"
, source(*this)	// "source"
{
}

CLI_Lineage_Type::CLI_Lineage_Type(CLI_Lineage_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, statement(*this)	// "statement"
, processStep(*this)	// "processStep"
, source(*this)	// "source"
{
}

void CLI_Lineage_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_Lineage_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_ProcessStep_PropertyType::CLI_ProcessStep_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_ProcessStep(*this)	// "LI_ProcessStep"
{
}

CLI_ProcessStep_PropertyType::CLI_ProcessStep_PropertyType(CLI_ProcessStep_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_ProcessStep(*this)	// "LI_ProcessStep"
{
}

void CLI_ProcessStep_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_ProcessStep_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_ProcessStep_Type::CLI_ProcessStep_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, description(*this)	// "description"
, rationale(*this)	// "rationale"
, dateTime(*this)	// "dateTime"
, processor(*this)	// "processor"
, source(*this)	// "source"
{
}

CLI_ProcessStep_Type::CLI_ProcessStep_Type(CLI_ProcessStep_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, description(*this)	// "description"
, rationale(*this)	// "rationale"
, dateTime(*this)	// "dateTime"
, processor(*this)	// "processor"
, source(*this)	// "source"
{
}

void CLI_ProcessStep_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_ProcessStep_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_Source_PropertyType::CLI_Source_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_Source(*this)	// "LI_Source"
{
}

CLI_Source_PropertyType::CLI_Source_PropertyType(CLI_Source_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, LI_Source(*this)	// "LI_Source"
{
}

void CLI_Source_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_Source_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CLI_Source_Type::CLI_Source_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, description(*this)	// "description"
, scaleDenominator(*this)	// "scaleDenominator"
, sourceReferenceSystem(*this)	// "sourceReferenceSystem"
, sourceCitation(*this)	// "sourceCitation"
, sourceExtent(*this)	// "sourceExtent"
, sourceStep(*this)	// "sourceStep"
{
}

CLI_Source_Type::CLI_Source_Type(CLI_Source_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, description(*this)	// "description"
, scaleDenominator(*this)	// "scaleDenominator"
, sourceReferenceSystem(*this)	// "sourceReferenceSystem"
, sourceCitation(*this)	// "sourceCitation"
, sourceExtent(*this)	// "sourceExtent"
, sourceStep(*this)	// "sourceStep"
{
}

void CLI_Source_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LI_Source_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CLanguageCode_PropertyType::CLanguageCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, LanguageCode(*this)	// "LanguageCode"
{
}

CLanguageCode_PropertyType::CLanguageCode_PropertyType(CLanguageCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, LanguageCode(*this)	// "LanguageCode"
{
}

void CLanguageCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LanguageCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CLocalisedCharacterString_PropertyType::CLocalisedCharacterString_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CObjectReference_PropertyType(node)
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
{
}

CLocalisedCharacterString_PropertyType::CLocalisedCharacterString_PropertyType(CLocalisedCharacterString_PropertyType const& other)
: ::indoorgmlcore::gco::CObjectReference_PropertyType(other.GetNode())
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
{
}

void CLocalisedCharacterString_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LocalisedCharacterString_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CLocalisedCharacterString_Type::CLocalisedCharacterString_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, id(*this)	// "@id"
, locale(*this)	// "@locale"
{
}

CLocalisedCharacterString_Type::CLocalisedCharacterString_Type(CLocalisedCharacterString_Type const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, id(*this)	// "@id"
, locale(*this)	// "@locale"
{
}

void CLocalisedCharacterString_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LocalisedCharacterString_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_AggregateInformation_PropertyType::CMD_AggregateInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_AggregateInformation(*this)	// "MD_AggregateInformation"
{
}

CMD_AggregateInformation_PropertyType::CMD_AggregateInformation_PropertyType(CMD_AggregateInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_AggregateInformation(*this)	// "MD_AggregateInformation"
{
}

void CMD_AggregateInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_AggregateInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_AggregateInformation_Type::CMD_AggregateInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, aggregateDataSetName(*this)	// "aggregateDataSetName"
, aggregateDataSetIdentifier(*this)	// "aggregateDataSetIdentifier"
, associationType(*this)	// "associationType"
, initiativeType(*this)	// "initiativeType"
{
}

CMD_AggregateInformation_Type::CMD_AggregateInformation_Type(CMD_AggregateInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, aggregateDataSetName(*this)	// "aggregateDataSetName"
, aggregateDataSetIdentifier(*this)	// "aggregateDataSetIdentifier"
, associationType(*this)	// "associationType"
, initiativeType(*this)	// "initiativeType"
{
}

void CMD_AggregateInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_AggregateInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ApplicationSchemaInformation_PropertyType::CMD_ApplicationSchemaInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ApplicationSchemaInformation(*this)	// "MD_ApplicationSchemaInformation"
{
}

CMD_ApplicationSchemaInformation_PropertyType::CMD_ApplicationSchemaInformation_PropertyType(CMD_ApplicationSchemaInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ApplicationSchemaInformation(*this)	// "MD_ApplicationSchemaInformation"
{
}

void CMD_ApplicationSchemaInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ApplicationSchemaInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ApplicationSchemaInformation_Type::CMD_ApplicationSchemaInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, schemaLanguage(*this)	// "schemaLanguage"
, constraintLanguage(*this)	// "constraintLanguage"
, schemaAscii(*this)	// "schemaAscii"
, graphicsFile(*this)	// "graphicsFile"
, softwareDevelopmentFile(*this)	// "softwareDevelopmentFile"
, softwareDevelopmentFileFormat(*this)	// "softwareDevelopmentFileFormat"
{
}

CMD_ApplicationSchemaInformation_Type::CMD_ApplicationSchemaInformation_Type(CMD_ApplicationSchemaInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, schemaLanguage(*this)	// "schemaLanguage"
, constraintLanguage(*this)	// "constraintLanguage"
, schemaAscii(*this)	// "schemaAscii"
, graphicsFile(*this)	// "graphicsFile"
, softwareDevelopmentFile(*this)	// "softwareDevelopmentFile"
, softwareDevelopmentFileFormat(*this)	// "softwareDevelopmentFileFormat"
{
}

void CMD_ApplicationSchemaInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ApplicationSchemaInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Band_PropertyType::CMD_Band_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Band(*this)	// "MD_Band"
{
}

CMD_Band_PropertyType::CMD_Band_PropertyType(CMD_Band_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Band(*this)	// "MD_Band"
{
}

void CMD_Band_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Band_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Band_Type::CMD_Band_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_RangeDimension_Type(node)
, maxValue(*this)	// "maxValue"
, minValue(*this)	// "minValue"
, units(*this)	// "units"
, peakResponse(*this)	// "peakResponse"
, bitsPerValue(*this)	// "bitsPerValue"
, toneGradation(*this)	// "toneGradation"
, scaleFactor(*this)	// "scaleFactor"
, offset(*this)	// "offset"
{
}

CMD_Band_Type::CMD_Band_Type(CMD_Band_Type const& other)
: ::indoorgmlcore::gmd::CMD_RangeDimension_Type(other.GetNode())
, maxValue(*this)	// "maxValue"
, minValue(*this)	// "minValue"
, units(*this)	// "units"
, peakResponse(*this)	// "peakResponse"
, bitsPerValue(*this)	// "bitsPerValue"
, toneGradation(*this)	// "toneGradation"
, scaleFactor(*this)	// "scaleFactor"
, offset(*this)	// "offset"
{
}

void CMD_Band_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Band_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_BrowseGraphic_PropertyType::CMD_BrowseGraphic_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_BrowseGraphic(*this)	// "MD_BrowseGraphic"
{
}

CMD_BrowseGraphic_PropertyType::CMD_BrowseGraphic_PropertyType(CMD_BrowseGraphic_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_BrowseGraphic(*this)	// "MD_BrowseGraphic"
{
}

void CMD_BrowseGraphic_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_BrowseGraphic_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_BrowseGraphic_Type::CMD_BrowseGraphic_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, fileName(*this)	// "fileName"
, fileDescription(*this)	// "fileDescription"
, fileType(*this)	// "fileType"
{
}

CMD_BrowseGraphic_Type::CMD_BrowseGraphic_Type(CMD_BrowseGraphic_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, fileName(*this)	// "fileName"
, fileDescription(*this)	// "fileDescription"
, fileType(*this)	// "fileType"
{
}

void CMD_BrowseGraphic_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_BrowseGraphic_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_CellGeometryCode_PropertyType::CMD_CellGeometryCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
{
}

CMD_CellGeometryCode_PropertyType::CMD_CellGeometryCode_PropertyType(CMD_CellGeometryCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
{
}

void CMD_CellGeometryCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_CellGeometryCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_CharacterSetCode_PropertyType::CMD_CharacterSetCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
{
}

CMD_CharacterSetCode_PropertyType::CMD_CharacterSetCode_PropertyType(CMD_CharacterSetCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
{
}

void CMD_CharacterSetCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_CharacterSetCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ClassificationCode_PropertyType::CMD_ClassificationCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
{
}

CMD_ClassificationCode_PropertyType::CMD_ClassificationCode_PropertyType(CMD_ClassificationCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
{
}

void CMD_ClassificationCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ClassificationCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Constraints_PropertyType::CMD_Constraints_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Constraints(*this)	// "MD_Constraints"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
{
}

CMD_Constraints_PropertyType::CMD_Constraints_PropertyType(CMD_Constraints_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Constraints(*this)	// "MD_Constraints"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
{
}

void CMD_Constraints_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Constraints_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Constraints_Type::CMD_Constraints_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, useLimitation(*this)	// "useLimitation"
{
}

CMD_Constraints_Type::CMD_Constraints_Type(CMD_Constraints_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, useLimitation(*this)	// "useLimitation"
{
}

void CMD_Constraints_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Constraints_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ContentInformation_PropertyType::CMD_ContentInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

CMD_ContentInformation_PropertyType::CMD_ContentInformation_PropertyType(CMD_ContentInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

void CMD_ContentInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ContentInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_CoverageContentTypeCode_PropertyType::CMD_CoverageContentTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
{
}

CMD_CoverageContentTypeCode_PropertyType::CMD_CoverageContentTypeCode_PropertyType(CMD_CoverageContentTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
{
}

void CMD_CoverageContentTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_CoverageContentTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_CoverageDescription_PropertyType::CMD_CoverageDescription_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

CMD_CoverageDescription_PropertyType::CMD_CoverageDescription_PropertyType(CMD_CoverageDescription_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

void CMD_CoverageDescription_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_CoverageDescription_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_CoverageDescription_Type::CMD_CoverageDescription_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_ContentInformation_Type(node)
, attributeDescription(*this)	// "attributeDescription"
, contentType(*this)	// "contentType"
, dimension(*this)	// "dimension"
{
}

CMD_CoverageDescription_Type::CMD_CoverageDescription_Type(CMD_CoverageDescription_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_ContentInformation_Type(other.GetNode())
, attributeDescription(*this)	// "attributeDescription"
, contentType(*this)	// "contentType"
, dimension(*this)	// "dimension"
{
}

void CMD_CoverageDescription_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_CoverageDescription_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DataIdentification_PropertyType::CMD_DataIdentification_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
{
}

CMD_DataIdentification_PropertyType::CMD_DataIdentification_PropertyType(CMD_DataIdentification_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
{
}

void CMD_DataIdentification_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DataIdentification_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DataIdentification_Type::CMD_DataIdentification_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_Identification_Type(node)
, spatialRepresentationType(*this)	// "spatialRepresentationType"
, spatialResolution(*this)	// "spatialResolution"
, language(*this)	// "language"
, characterSet(*this)	// "characterSet"
, topicCategory(*this)	// "topicCategory"
, environmentDescription(*this)	// "environmentDescription"
, extent(*this)	// "extent"
, supplementalInformation(*this)	// "supplementalInformation"
{
}

CMD_DataIdentification_Type::CMD_DataIdentification_Type(CMD_DataIdentification_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_Identification_Type(other.GetNode())
, spatialRepresentationType(*this)	// "spatialRepresentationType"
, spatialResolution(*this)	// "spatialResolution"
, language(*this)	// "language"
, characterSet(*this)	// "characterSet"
, topicCategory(*this)	// "topicCategory"
, environmentDescription(*this)	// "environmentDescription"
, extent(*this)	// "extent"
, supplementalInformation(*this)	// "supplementalInformation"
{
}

void CMD_DataIdentification_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DataIdentification_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DatatypeCode_PropertyType::CMD_DatatypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
{
}

CMD_DatatypeCode_PropertyType::CMD_DatatypeCode_PropertyType(CMD_DatatypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
{
}

void CMD_DatatypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DatatypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DigitalTransferOptions_PropertyType::CMD_DigitalTransferOptions_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DigitalTransferOptions(*this)	// "MD_DigitalTransferOptions"
{
}

CMD_DigitalTransferOptions_PropertyType::CMD_DigitalTransferOptions_PropertyType(CMD_DigitalTransferOptions_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DigitalTransferOptions(*this)	// "MD_DigitalTransferOptions"
{
}

void CMD_DigitalTransferOptions_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DigitalTransferOptions_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DigitalTransferOptions_Type::CMD_DigitalTransferOptions_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, unitsOfDistribution(*this)	// "unitsOfDistribution"
, transferSize(*this)	// "transferSize"
, onLine(*this)	// "onLine"
, offLine(*this)	// "offLine"
{
}

CMD_DigitalTransferOptions_Type::CMD_DigitalTransferOptions_Type(CMD_DigitalTransferOptions_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, unitsOfDistribution(*this)	// "unitsOfDistribution"
, transferSize(*this)	// "transferSize"
, onLine(*this)	// "onLine"
, offLine(*this)	// "offLine"
{
}

void CMD_DigitalTransferOptions_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DigitalTransferOptions_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DimensionNameTypeCode_PropertyType::CMD_DimensionNameTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
{
}

CMD_DimensionNameTypeCode_PropertyType::CMD_DimensionNameTypeCode_PropertyType(CMD_DimensionNameTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
{
}

void CMD_DimensionNameTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DimensionNameTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Dimension_PropertyType::CMD_Dimension_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Dimension(*this)	// "MD_Dimension"
{
}

CMD_Dimension_PropertyType::CMD_Dimension_PropertyType(CMD_Dimension_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Dimension(*this)	// "MD_Dimension"
{
}

void CMD_Dimension_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Dimension_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Dimension_Type::CMD_Dimension_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, dimensionName(*this)	// "dimensionName"
, dimensionSize(*this)	// "dimensionSize"
, resolution(*this)	// "resolution"
{
}

CMD_Dimension_Type::CMD_Dimension_Type(CMD_Dimension_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, dimensionName(*this)	// "dimensionName"
, dimensionSize(*this)	// "dimensionSize"
, resolution(*this)	// "resolution"
{
}

void CMD_Dimension_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Dimension_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_DistributionUnits_PropertyType::CMD_DistributionUnits_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
{
}

CMD_DistributionUnits_PropertyType::CMD_DistributionUnits_PropertyType(CMD_DistributionUnits_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
{
}

void CMD_DistributionUnits_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_DistributionUnits_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Distribution_PropertyType::CMD_Distribution_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Distribution(*this)	// "MD_Distribution"
{
}

CMD_Distribution_PropertyType::CMD_Distribution_PropertyType(CMD_Distribution_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Distribution(*this)	// "MD_Distribution"
{
}

void CMD_Distribution_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Distribution_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Distribution_Type::CMD_Distribution_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, distributionFormat(*this)	// "distributionFormat"
, distributor(*this)	// "distributor"
, transferOptions(*this)	// "transferOptions"
{
}

CMD_Distribution_Type::CMD_Distribution_Type(CMD_Distribution_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, distributionFormat(*this)	// "distributionFormat"
, distributor(*this)	// "distributor"
, transferOptions(*this)	// "transferOptions"
{
}

void CMD_Distribution_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Distribution_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Distributor_PropertyType::CMD_Distributor_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Distributor(*this)	// "MD_Distributor"
{
}

CMD_Distributor_PropertyType::CMD_Distributor_PropertyType(CMD_Distributor_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Distributor(*this)	// "MD_Distributor"
{
}

void CMD_Distributor_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Distributor_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Distributor_Type::CMD_Distributor_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, distributorContact(*this)	// "distributorContact"
, distributionOrderProcess(*this)	// "distributionOrderProcess"
, distributorFormat(*this)	// "distributorFormat"
, distributorTransferOptions(*this)	// "distributorTransferOptions"
{
}

CMD_Distributor_Type::CMD_Distributor_Type(CMD_Distributor_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, distributorContact(*this)	// "distributorContact"
, distributionOrderProcess(*this)	// "distributionOrderProcess"
, distributorFormat(*this)	// "distributorFormat"
, distributorTransferOptions(*this)	// "distributorTransferOptions"
{
}

void CMD_Distributor_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Distributor_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ExtendedElementInformation_PropertyType::CMD_ExtendedElementInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ExtendedElementInformation(*this)	// "MD_ExtendedElementInformation"
{
}

CMD_ExtendedElementInformation_PropertyType::CMD_ExtendedElementInformation_PropertyType(CMD_ExtendedElementInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ExtendedElementInformation(*this)	// "MD_ExtendedElementInformation"
{
}

void CMD_ExtendedElementInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ExtendedElementInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ExtendedElementInformation_Type::CMD_ExtendedElementInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, shortName(*this)	// "shortName"
, domainCode(*this)	// "domainCode"
, definition(*this)	// "definition"
, obligation(*this)	// "obligation"
, condition(*this)	// "condition"
, dataType(*this)	// "dataType"
, maximumOccurrence(*this)	// "maximumOccurrence"
, domainValue(*this)	// "domainValue"
, parentEntity(*this)	// "parentEntity"
, rule(*this)	// "rule"
, rationale(*this)	// "rationale"
, source(*this)	// "source"
{
}

CMD_ExtendedElementInformation_Type::CMD_ExtendedElementInformation_Type(CMD_ExtendedElementInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, shortName(*this)	// "shortName"
, domainCode(*this)	// "domainCode"
, definition(*this)	// "definition"
, obligation(*this)	// "obligation"
, condition(*this)	// "condition"
, dataType(*this)	// "dataType"
, maximumOccurrence(*this)	// "maximumOccurrence"
, domainValue(*this)	// "domainValue"
, parentEntity(*this)	// "parentEntity"
, rule(*this)	// "rule"
, rationale(*this)	// "rationale"
, source(*this)	// "source"
{
}

void CMD_ExtendedElementInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ExtendedElementInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_FeatureCatalogueDescription_PropertyType::CMD_FeatureCatalogueDescription_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
{
}

CMD_FeatureCatalogueDescription_PropertyType::CMD_FeatureCatalogueDescription_PropertyType(CMD_FeatureCatalogueDescription_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
{
}

void CMD_FeatureCatalogueDescription_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_FeatureCatalogueDescription_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_FeatureCatalogueDescription_Type::CMD_FeatureCatalogueDescription_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_ContentInformation_Type(node)
, complianceCode(*this)	// "complianceCode"
, language(*this)	// "language"
, includedWithDataset(*this)	// "includedWithDataset"
, featureTypes(*this)	// "featureTypes"
, featureCatalogueCitation(*this)	// "featureCatalogueCitation"
{
}

CMD_FeatureCatalogueDescription_Type::CMD_FeatureCatalogueDescription_Type(CMD_FeatureCatalogueDescription_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_ContentInformation_Type(other.GetNode())
, complianceCode(*this)	// "complianceCode"
, language(*this)	// "language"
, includedWithDataset(*this)	// "includedWithDataset"
, featureTypes(*this)	// "featureTypes"
, featureCatalogueCitation(*this)	// "featureCatalogueCitation"
{
}

void CMD_FeatureCatalogueDescription_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_FeatureCatalogueDescription_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Format_PropertyType::CMD_Format_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Format(*this)	// "MD_Format"
{
}

CMD_Format_PropertyType::CMD_Format_PropertyType(CMD_Format_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Format(*this)	// "MD_Format"
{
}

void CMD_Format_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Format_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Format_Type::CMD_Format_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, version(*this)	// "version"
, amendmentNumber(*this)	// "amendmentNumber"
, specification(*this)	// "specification"
, fileDecompressionTechnique(*this)	// "fileDecompressionTechnique"
, formatDistributor(*this)	// "formatDistributor"
{
}

CMD_Format_Type::CMD_Format_Type(CMD_Format_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, version(*this)	// "version"
, amendmentNumber(*this)	// "amendmentNumber"
, specification(*this)	// "specification"
, fileDecompressionTechnique(*this)	// "fileDecompressionTechnique"
, formatDistributor(*this)	// "formatDistributor"
{
}

void CMD_Format_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Format_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_GeometricObjectTypeCode_PropertyType::CMD_GeometricObjectTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
{
}

CMD_GeometricObjectTypeCode_PropertyType::CMD_GeometricObjectTypeCode_PropertyType(CMD_GeometricObjectTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
{
}

void CMD_GeometricObjectTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_GeometricObjectTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_GeometricObjects_PropertyType::CMD_GeometricObjects_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_GeometricObjects(*this)	// "MD_GeometricObjects"
{
}

CMD_GeometricObjects_PropertyType::CMD_GeometricObjects_PropertyType(CMD_GeometricObjects_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_GeometricObjects(*this)	// "MD_GeometricObjects"
{
}

void CMD_GeometricObjects_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_GeometricObjects_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_GeometricObjects_Type::CMD_GeometricObjects_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, geometricObjectType(*this)	// "geometricObjectType"
, geometricObjectCount(*this)	// "geometricObjectCount"
{
}

CMD_GeometricObjects_Type::CMD_GeometricObjects_Type(CMD_GeometricObjects_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, geometricObjectType(*this)	// "geometricObjectType"
, geometricObjectCount(*this)	// "geometricObjectCount"
{
}

void CMD_GeometricObjects_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_GeometricObjects_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Georectified_PropertyType::CMD_Georectified_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georectified(*this)	// "MD_Georectified"
{
}

CMD_Georectified_PropertyType::CMD_Georectified_PropertyType(CMD_Georectified_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georectified(*this)	// "MD_Georectified"
{
}

void CMD_Georectified_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Georectified_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Georectified_Type::CMD_Georectified_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_GridSpatialRepresentation_Type(node)
, checkPointAvailability(*this)	// "checkPointAvailability"
, checkPointDescription(*this)	// "checkPointDescription"
, cornerPoints(*this)	// "cornerPoints"
, centerPoint(*this)	// "centerPoint"
, pointInPixel(*this)	// "pointInPixel"
, transformationDimensionDescription(*this)	// "transformationDimensionDescription"
, transformationDimensionMapping(*this)	// "transformationDimensionMapping"
{
}

CMD_Georectified_Type::CMD_Georectified_Type(CMD_Georectified_Type const& other)
: ::indoorgmlcore::gmd::CMD_GridSpatialRepresentation_Type(other.GetNode())
, checkPointAvailability(*this)	// "checkPointAvailability"
, checkPointDescription(*this)	// "checkPointDescription"
, cornerPoints(*this)	// "cornerPoints"
, centerPoint(*this)	// "centerPoint"
, pointInPixel(*this)	// "pointInPixel"
, transformationDimensionDescription(*this)	// "transformationDimensionDescription"
, transformationDimensionMapping(*this)	// "transformationDimensionMapping"
{
}

void CMD_Georectified_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Georectified_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Georeferenceable_PropertyType::CMD_Georeferenceable_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
{
}

CMD_Georeferenceable_PropertyType::CMD_Georeferenceable_PropertyType(CMD_Georeferenceable_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
{
}

void CMD_Georeferenceable_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Georeferenceable_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Georeferenceable_Type::CMD_Georeferenceable_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_GridSpatialRepresentation_Type(node)
, controlPointAvailability(*this)	// "controlPointAvailability"
, orientationParameterAvailability(*this)	// "orientationParameterAvailability"
, orientationParameterDescription(*this)	// "orientationParameterDescription"
, georeferencedParameters(*this)	// "georeferencedParameters"
, parameterCitation(*this)	// "parameterCitation"
{
}

CMD_Georeferenceable_Type::CMD_Georeferenceable_Type(CMD_Georeferenceable_Type const& other)
: ::indoorgmlcore::gmd::CMD_GridSpatialRepresentation_Type(other.GetNode())
, controlPointAvailability(*this)	// "controlPointAvailability"
, orientationParameterAvailability(*this)	// "orientationParameterAvailability"
, orientationParameterDescription(*this)	// "orientationParameterDescription"
, georeferencedParameters(*this)	// "georeferencedParameters"
, parameterCitation(*this)	// "parameterCitation"
{
}

void CMD_Georeferenceable_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Georeferenceable_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_GridSpatialRepresentation_PropertyType::CMD_GridSpatialRepresentation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
{
}

CMD_GridSpatialRepresentation_PropertyType::CMD_GridSpatialRepresentation_PropertyType(CMD_GridSpatialRepresentation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
{
}

void CMD_GridSpatialRepresentation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_GridSpatialRepresentation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_GridSpatialRepresentation_Type::CMD_GridSpatialRepresentation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_SpatialRepresentation_Type(node)
, numberOfDimensions(*this)	// "numberOfDimensions"
, axisDimensionProperties(*this)	// "axisDimensionProperties"
, cellGeometry(*this)	// "cellGeometry"
, transformationParameterAvailability(*this)	// "transformationParameterAvailability"
{
}

CMD_GridSpatialRepresentation_Type::CMD_GridSpatialRepresentation_Type(CMD_GridSpatialRepresentation_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_SpatialRepresentation_Type(other.GetNode())
, numberOfDimensions(*this)	// "numberOfDimensions"
, axisDimensionProperties(*this)	// "axisDimensionProperties"
, cellGeometry(*this)	// "cellGeometry"
, transformationParameterAvailability(*this)	// "transformationParameterAvailability"
{
}

void CMD_GridSpatialRepresentation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_GridSpatialRepresentation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Identification_PropertyType::CMD_Identification_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
{
}

CMD_Identification_PropertyType::CMD_Identification_PropertyType(CMD_Identification_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
{
}

void CMD_Identification_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Identification_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Identifier_PropertyType::CMD_Identifier_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Identifier(*this)	// "MD_Identifier"
, RS_Identifier(*this)	// "RS_Identifier"
{
}

CMD_Identifier_PropertyType::CMD_Identifier_PropertyType(CMD_Identifier_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Identifier(*this)	// "MD_Identifier"
, RS_Identifier(*this)	// "RS_Identifier"
{
}

void CMD_Identifier_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Identifier_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Identifier_Type::CMD_Identifier_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, authority(*this)	// "authority"
, code(*this)	// "code"
{
}

CMD_Identifier_Type::CMD_Identifier_Type(CMD_Identifier_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, authority(*this)	// "authority"
, code(*this)	// "code"
{
}

void CMD_Identifier_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Identifier_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ImageDescription_PropertyType::CMD_ImageDescription_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

CMD_ImageDescription_PropertyType::CMD_ImageDescription_PropertyType(CMD_ImageDescription_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
{
}

void CMD_ImageDescription_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ImageDescription_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ImageDescription_Type::CMD_ImageDescription_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_CoverageDescription_Type(node)
, illuminationElevationAngle(*this)	// "illuminationElevationAngle"
, illuminationAzimuthAngle(*this)	// "illuminationAzimuthAngle"
, imagingCondition(*this)	// "imagingCondition"
, imageQualityCode(*this)	// "imageQualityCode"
, cloudCoverPercentage(*this)	// "cloudCoverPercentage"
, processingLevelCode(*this)	// "processingLevelCode"
, compressionGenerationQuantity(*this)	// "compressionGenerationQuantity"
, triangulationIndicator(*this)	// "triangulationIndicator"
, radiometricCalibrationDataAvailability(*this)	// "radiometricCalibrationDataAvailability"
, cameraCalibrationInformationAvailability(*this)	// "cameraCalibrationInformationAvailability"
, filmDistortionInformationAvailability(*this)	// "filmDistortionInformationAvailability"
, lensDistortionInformationAvailability(*this)	// "lensDistortionInformationAvailability"
{
}

CMD_ImageDescription_Type::CMD_ImageDescription_Type(CMD_ImageDescription_Type const& other)
: ::indoorgmlcore::gmd::CMD_CoverageDescription_Type(other.GetNode())
, illuminationElevationAngle(*this)	// "illuminationElevationAngle"
, illuminationAzimuthAngle(*this)	// "illuminationAzimuthAngle"
, imagingCondition(*this)	// "imagingCondition"
, imageQualityCode(*this)	// "imageQualityCode"
, cloudCoverPercentage(*this)	// "cloudCoverPercentage"
, processingLevelCode(*this)	// "processingLevelCode"
, compressionGenerationQuantity(*this)	// "compressionGenerationQuantity"
, triangulationIndicator(*this)	// "triangulationIndicator"
, radiometricCalibrationDataAvailability(*this)	// "radiometricCalibrationDataAvailability"
, cameraCalibrationInformationAvailability(*this)	// "cameraCalibrationInformationAvailability"
, filmDistortionInformationAvailability(*this)	// "filmDistortionInformationAvailability"
, lensDistortionInformationAvailability(*this)	// "lensDistortionInformationAvailability"
{
}

void CMD_ImageDescription_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ImageDescription_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ImagingConditionCode_PropertyType::CMD_ImagingConditionCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
{
}

CMD_ImagingConditionCode_PropertyType::CMD_ImagingConditionCode_PropertyType(CMD_ImagingConditionCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
{
}

void CMD_ImagingConditionCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ImagingConditionCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_KeywordTypeCode_PropertyType::CMD_KeywordTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
{
}

CMD_KeywordTypeCode_PropertyType::CMD_KeywordTypeCode_PropertyType(CMD_KeywordTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
{
}

void CMD_KeywordTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_KeywordTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Keywords_PropertyType::CMD_Keywords_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Keywords(*this)	// "MD_Keywords"
{
}

CMD_Keywords_PropertyType::CMD_Keywords_PropertyType(CMD_Keywords_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Keywords(*this)	// "MD_Keywords"
{
}

void CMD_Keywords_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Keywords_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Keywords_Type::CMD_Keywords_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, keyword(*this)	// "keyword"
, type(*this)	// "type"
, thesaurusName(*this)	// "thesaurusName"
{
}

CMD_Keywords_Type::CMD_Keywords_Type(CMD_Keywords_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, keyword(*this)	// "keyword"
, type(*this)	// "type"
, thesaurusName(*this)	// "thesaurusName"
{
}

void CMD_Keywords_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Keywords_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_LegalConstraints_PropertyType::CMD_LegalConstraints_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
{
}

CMD_LegalConstraints_PropertyType::CMD_LegalConstraints_PropertyType(CMD_LegalConstraints_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
{
}

void CMD_LegalConstraints_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_LegalConstraints_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_LegalConstraints_Type::CMD_LegalConstraints_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_Constraints_Type(node)
, accessConstraints(*this)	// "accessConstraints"
, useConstraints(*this)	// "useConstraints"
, otherConstraints(*this)	// "otherConstraints"
{
}

CMD_LegalConstraints_Type::CMD_LegalConstraints_Type(CMD_LegalConstraints_Type const& other)
: ::indoorgmlcore::gmd::CMD_Constraints_Type(other.GetNode())
, accessConstraints(*this)	// "accessConstraints"
, useConstraints(*this)	// "useConstraints"
, otherConstraints(*this)	// "otherConstraints"
{
}

void CMD_LegalConstraints_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_LegalConstraints_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MaintenanceFrequencyCode_PropertyType::CMD_MaintenanceFrequencyCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
{
}

CMD_MaintenanceFrequencyCode_PropertyType::CMD_MaintenanceFrequencyCode_PropertyType(CMD_MaintenanceFrequencyCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
{
}

void CMD_MaintenanceFrequencyCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MaintenanceFrequencyCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MaintenanceInformation_PropertyType::CMD_MaintenanceInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_MaintenanceInformation(*this)	// "MD_MaintenanceInformation"
{
}

CMD_MaintenanceInformation_PropertyType::CMD_MaintenanceInformation_PropertyType(CMD_MaintenanceInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_MaintenanceInformation(*this)	// "MD_MaintenanceInformation"
{
}

void CMD_MaintenanceInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MaintenanceInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MaintenanceInformation_Type::CMD_MaintenanceInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, maintenanceAndUpdateFrequency(*this)	// "maintenanceAndUpdateFrequency"
, dateOfNextUpdate(*this)	// "dateOfNextUpdate"
, userDefinedMaintenanceFrequency(*this)	// "userDefinedMaintenanceFrequency"
, updateScope(*this)	// "updateScope"
, updateScopeDescription(*this)	// "updateScopeDescription"
, maintenanceNote(*this)	// "maintenanceNote"
, contact(*this)	// "contact"
{
}

CMD_MaintenanceInformation_Type::CMD_MaintenanceInformation_Type(CMD_MaintenanceInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, maintenanceAndUpdateFrequency(*this)	// "maintenanceAndUpdateFrequency"
, dateOfNextUpdate(*this)	// "dateOfNextUpdate"
, userDefinedMaintenanceFrequency(*this)	// "userDefinedMaintenanceFrequency"
, updateScope(*this)	// "updateScope"
, updateScopeDescription(*this)	// "updateScopeDescription"
, maintenanceNote(*this)	// "maintenanceNote"
, contact(*this)	// "contact"
{
}

void CMD_MaintenanceInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MaintenanceInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MediumFormatCode_PropertyType::CMD_MediumFormatCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
{
}

CMD_MediumFormatCode_PropertyType::CMD_MediumFormatCode_PropertyType(CMD_MediumFormatCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
{
}

void CMD_MediumFormatCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MediumFormatCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MediumNameCode_PropertyType::CMD_MediumNameCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
{
}

CMD_MediumNameCode_PropertyType::CMD_MediumNameCode_PropertyType(CMD_MediumNameCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
{
}

void CMD_MediumNameCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MediumNameCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Medium_PropertyType::CMD_Medium_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Medium(*this)	// "MD_Medium"
{
}

CMD_Medium_PropertyType::CMD_Medium_PropertyType(CMD_Medium_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Medium(*this)	// "MD_Medium"
{
}

void CMD_Medium_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Medium_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Medium_Type::CMD_Medium_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, name(*this)	// "name"
, density(*this)	// "density"
, densityUnits(*this)	// "densityUnits"
, volumes(*this)	// "volumes"
, mediumFormat(*this)	// "mediumFormat"
, mediumNote(*this)	// "mediumNote"
{
}

CMD_Medium_Type::CMD_Medium_Type(CMD_Medium_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, name(*this)	// "name"
, density(*this)	// "density"
, densityUnits(*this)	// "densityUnits"
, volumes(*this)	// "volumes"
, mediumFormat(*this)	// "mediumFormat"
, mediumNote(*this)	// "mediumNote"
{
}

void CMD_Medium_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Medium_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MetadataExtensionInformation_PropertyType::CMD_MetadataExtensionInformation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_MetadataExtensionInformation(*this)	// "MD_MetadataExtensionInformation"
{
}

CMD_MetadataExtensionInformation_PropertyType::CMD_MetadataExtensionInformation_PropertyType(CMD_MetadataExtensionInformation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_MetadataExtensionInformation(*this)	// "MD_MetadataExtensionInformation"
{
}

void CMD_MetadataExtensionInformation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MetadataExtensionInformation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_MetadataExtensionInformation_Type::CMD_MetadataExtensionInformation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, extensionOnLineResource(*this)	// "extensionOnLineResource"
, extendedElementInformation(*this)	// "extendedElementInformation"
{
}

CMD_MetadataExtensionInformation_Type::CMD_MetadataExtensionInformation_Type(CMD_MetadataExtensionInformation_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, extensionOnLineResource(*this)	// "extensionOnLineResource"
, extendedElementInformation(*this)	// "extendedElementInformation"
{
}

void CMD_MetadataExtensionInformation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_MetadataExtensionInformation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Metadata_PropertyType::CMD_Metadata_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Metadata(*this)	// "MD_Metadata"
{
}

CMD_Metadata_PropertyType::CMD_Metadata_PropertyType(CMD_Metadata_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Metadata(*this)	// "MD_Metadata"
{
}

void CMD_Metadata_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Metadata_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Metadata_Type::CMD_Metadata_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, fileIdentifier(*this)	// "fileIdentifier"
, language(*this)	// "language"
, characterSet(*this)	// "characterSet"
, parentIdentifier(*this)	// "parentIdentifier"
, hierarchyLevel(*this)	// "hierarchyLevel"
, hierarchyLevelName(*this)	// "hierarchyLevelName"
, contact(*this)	// "contact"
, dateStamp(*this)	// "dateStamp"
, metadataStandardName(*this)	// "metadataStandardName"
, metadataStandardVersion(*this)	// "metadataStandardVersion"
, dataSetURI(*this)	// "dataSetURI"
, locale(*this)	// "locale"
, spatialRepresentationInfo(*this)	// "spatialRepresentationInfo"
, referenceSystemInfo(*this)	// "referenceSystemInfo"
, metadataExtensionInfo(*this)	// "metadataExtensionInfo"
, identificationInfo(*this)	// "identificationInfo"
, contentInfo(*this)	// "contentInfo"
, distributionInfo(*this)	// "distributionInfo"
, dataQualityInfo(*this)	// "dataQualityInfo"
, portrayalCatalogueInfo(*this)	// "portrayalCatalogueInfo"
, metadataConstraints(*this)	// "metadataConstraints"
, applicationSchemaInfo(*this)	// "applicationSchemaInfo"
, metadataMaintenance(*this)	// "metadataMaintenance"
, series(*this)	// "series"
, describes(*this)	// "describes"
, propertyType(*this)	// "propertyType"
, featureType(*this)	// "featureType"
, featureAttribute(*this)	// "featureAttribute"
{
}

CMD_Metadata_Type::CMD_Metadata_Type(CMD_Metadata_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, fileIdentifier(*this)	// "fileIdentifier"
, language(*this)	// "language"
, characterSet(*this)	// "characterSet"
, parentIdentifier(*this)	// "parentIdentifier"
, hierarchyLevel(*this)	// "hierarchyLevel"
, hierarchyLevelName(*this)	// "hierarchyLevelName"
, contact(*this)	// "contact"
, dateStamp(*this)	// "dateStamp"
, metadataStandardName(*this)	// "metadataStandardName"
, metadataStandardVersion(*this)	// "metadataStandardVersion"
, dataSetURI(*this)	// "dataSetURI"
, locale(*this)	// "locale"
, spatialRepresentationInfo(*this)	// "spatialRepresentationInfo"
, referenceSystemInfo(*this)	// "referenceSystemInfo"
, metadataExtensionInfo(*this)	// "metadataExtensionInfo"
, identificationInfo(*this)	// "identificationInfo"
, contentInfo(*this)	// "contentInfo"
, distributionInfo(*this)	// "distributionInfo"
, dataQualityInfo(*this)	// "dataQualityInfo"
, portrayalCatalogueInfo(*this)	// "portrayalCatalogueInfo"
, metadataConstraints(*this)	// "metadataConstraints"
, applicationSchemaInfo(*this)	// "applicationSchemaInfo"
, metadataMaintenance(*this)	// "metadataMaintenance"
, series(*this)	// "series"
, describes(*this)	// "describes"
, propertyType(*this)	// "propertyType"
, featureType(*this)	// "featureType"
, featureAttribute(*this)	// "featureAttribute"
{
}

void CMD_Metadata_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Metadata_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ObligationCode_PropertyType::CMD_ObligationCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
{
}

CMD_ObligationCode_PropertyType::CMD_ObligationCode_PropertyType(CMD_ObligationCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
{
}

void CMD_ObligationCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ObligationCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ObligationCode_Type::CMD_ObligationCode_Type(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CMD_ObligationCode_Type::CMD_ObligationCode_Type(CMD_ObligationCode_Type const& other)
: TypeBase(other.GetNode())
{
}


CMD_PixelOrientationCode_PropertyType::CMD_PixelOrientationCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
{
}

CMD_PixelOrientationCode_PropertyType::CMD_PixelOrientationCode_PropertyType(CMD_PixelOrientationCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
{
}

void CMD_PixelOrientationCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_PixelOrientationCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_PixelOrientationCode_Type::CMD_PixelOrientationCode_Type(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CMD_PixelOrientationCode_Type::CMD_PixelOrientationCode_Type(CMD_PixelOrientationCode_Type const& other)
: TypeBase(other.GetNode())
{
}


CMD_PortrayalCatalogueReference_PropertyType::CMD_PortrayalCatalogueReference_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_PortrayalCatalogueReference(*this)	// "MD_PortrayalCatalogueReference"
{
}

CMD_PortrayalCatalogueReference_PropertyType::CMD_PortrayalCatalogueReference_PropertyType(CMD_PortrayalCatalogueReference_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_PortrayalCatalogueReference(*this)	// "MD_PortrayalCatalogueReference"
{
}

void CMD_PortrayalCatalogueReference_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_PortrayalCatalogueReference_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_PortrayalCatalogueReference_Type::CMD_PortrayalCatalogueReference_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, portrayalCatalogueCitation(*this)	// "portrayalCatalogueCitation"
{
}

CMD_PortrayalCatalogueReference_Type::CMD_PortrayalCatalogueReference_Type(CMD_PortrayalCatalogueReference_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, portrayalCatalogueCitation(*this)	// "portrayalCatalogueCitation"
{
}

void CMD_PortrayalCatalogueReference_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_PortrayalCatalogueReference_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ProgressCode_PropertyType::CMD_ProgressCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
{
}

CMD_ProgressCode_PropertyType::CMD_ProgressCode_PropertyType(CMD_ProgressCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
{
}

void CMD_ProgressCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ProgressCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_RangeDimension_PropertyType::CMD_RangeDimension_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_RangeDimension(*this)	// "MD_RangeDimension"
, MD_Band(*this)	// "MD_Band"
{
}

CMD_RangeDimension_PropertyType::CMD_RangeDimension_PropertyType(CMD_RangeDimension_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_RangeDimension(*this)	// "MD_RangeDimension"
, MD_Band(*this)	// "MD_Band"
{
}

void CMD_RangeDimension_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_RangeDimension_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_RangeDimension_Type::CMD_RangeDimension_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, sequenceIdentifier(*this)	// "sequenceIdentifier"
, descriptor(*this)	// "descriptor"
{
}

CMD_RangeDimension_Type::CMD_RangeDimension_Type(CMD_RangeDimension_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, sequenceIdentifier(*this)	// "sequenceIdentifier"
, descriptor(*this)	// "descriptor"
{
}

void CMD_RangeDimension_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_RangeDimension_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ReferenceSystem_PropertyType::CMD_ReferenceSystem_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ReferenceSystem(*this)	// "MD_ReferenceSystem"
{
}

CMD_ReferenceSystem_PropertyType::CMD_ReferenceSystem_PropertyType(CMD_ReferenceSystem_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ReferenceSystem(*this)	// "MD_ReferenceSystem"
{
}

void CMD_ReferenceSystem_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ReferenceSystem_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ReferenceSystem_Type::CMD_ReferenceSystem_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, referenceSystemIdentifier(*this)	// "referenceSystemIdentifier"
{
}

CMD_ReferenceSystem_Type::CMD_ReferenceSystem_Type(CMD_ReferenceSystem_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, referenceSystemIdentifier(*this)	// "referenceSystemIdentifier"
{
}

void CMD_ReferenceSystem_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ReferenceSystem_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_RepresentativeFraction_PropertyType::CMD_RepresentativeFraction_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_RepresentativeFraction(*this)	// "MD_RepresentativeFraction"
{
}

CMD_RepresentativeFraction_PropertyType::CMD_RepresentativeFraction_PropertyType(CMD_RepresentativeFraction_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_RepresentativeFraction(*this)	// "MD_RepresentativeFraction"
{
}

void CMD_RepresentativeFraction_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_RepresentativeFraction_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_RepresentativeFraction_Type::CMD_RepresentativeFraction_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, denominator(*this)	// "denominator"
{
}

CMD_RepresentativeFraction_Type::CMD_RepresentativeFraction_Type(CMD_RepresentativeFraction_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, denominator(*this)	// "denominator"
{
}

void CMD_RepresentativeFraction_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_RepresentativeFraction_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Resolution_PropertyType::CMD_Resolution_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_Resolution(*this)	// "MD_Resolution"
{
}

CMD_Resolution_PropertyType::CMD_Resolution_PropertyType(CMD_Resolution_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_Resolution(*this)	// "MD_Resolution"
{
}

void CMD_Resolution_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Resolution_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Resolution_Type::CMD_Resolution_Type(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, equivalentScale(*this)	// "equivalentScale"
, distance(*this)	// "distance"
{
}

CMD_Resolution_Type::CMD_Resolution_Type(CMD_Resolution_Type const& other)
: ElementType(other.GetNode())
, equivalentScale(*this)	// "equivalentScale"
, distance(*this)	// "distance"
{
}

void CMD_Resolution_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Resolution_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_RestrictionCode_PropertyType::CMD_RestrictionCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
{
}

CMD_RestrictionCode_PropertyType::CMD_RestrictionCode_PropertyType(CMD_RestrictionCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
{
}

void CMD_RestrictionCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_RestrictionCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ScopeCode_PropertyType::CMD_ScopeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
{
}

CMD_ScopeCode_PropertyType::CMD_ScopeCode_PropertyType(CMD_ScopeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
{
}

void CMD_ScopeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ScopeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ScopeDescription_PropertyType::CMD_ScopeDescription_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_ScopeDescription(*this)	// "MD_ScopeDescription"
{
}

CMD_ScopeDescription_PropertyType::CMD_ScopeDescription_PropertyType(CMD_ScopeDescription_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_ScopeDescription(*this)	// "MD_ScopeDescription"
{
}

void CMD_ScopeDescription_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ScopeDescription_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ScopeDescription_Type::CMD_ScopeDescription_Type(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, attributes(*this)	// "attributes"
, features(*this)	// "features"
, featureInstances(*this)	// "featureInstances"
, attributeInstances(*this)	// "attributeInstances"
, dataset(*this)	// "dataset"
, other(*this)	// "other"
{
}

CMD_ScopeDescription_Type::CMD_ScopeDescription_Type(CMD_ScopeDescription_Type const& other)
: ElementType(other.GetNode())
, attributes(*this)	// "attributes"
, features(*this)	// "features"
, featureInstances(*this)	// "featureInstances"
, attributeInstances(*this)	// "attributeInstances"
, dataset(*this)	// "dataset"
, other(*this)	// "other"
{
}

void CMD_ScopeDescription_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ScopeDescription_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_SecurityConstraints_PropertyType::CMD_SecurityConstraints_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
{
}

CMD_SecurityConstraints_PropertyType::CMD_SecurityConstraints_PropertyType(CMD_SecurityConstraints_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
{
}

void CMD_SecurityConstraints_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_SecurityConstraints_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_SecurityConstraints_Type::CMD_SecurityConstraints_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_Constraints_Type(node)
, classification(*this)	// "classification"
, userNote(*this)	// "userNote"
, classificationSystem(*this)	// "classificationSystem"
, handlingDescription(*this)	// "handlingDescription"
{
}

CMD_SecurityConstraints_Type::CMD_SecurityConstraints_Type(CMD_SecurityConstraints_Type const& other)
: ::indoorgmlcore::gmd::CMD_Constraints_Type(other.GetNode())
, classification(*this)	// "classification"
, userNote(*this)	// "userNote"
, classificationSystem(*this)	// "classificationSystem"
, handlingDescription(*this)	// "handlingDescription"
{
}

void CMD_SecurityConstraints_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_SecurityConstraints_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ServiceIdentification_PropertyType::CMD_ServiceIdentification_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
{
}

CMD_ServiceIdentification_PropertyType::CMD_ServiceIdentification_PropertyType(CMD_ServiceIdentification_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
{
}

void CMD_ServiceIdentification_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ServiceIdentification_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ServiceIdentification_Type::CMD_ServiceIdentification_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_Identification_Type(node)
{
}

CMD_ServiceIdentification_Type::CMD_ServiceIdentification_Type(CMD_ServiceIdentification_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_Identification_Type(other.GetNode())
{
}

void CMD_ServiceIdentification_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ServiceIdentification_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_SpatialRepresentationTypeCode_PropertyType::CMD_SpatialRepresentationTypeCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
{
}

CMD_SpatialRepresentationTypeCode_PropertyType::CMD_SpatialRepresentationTypeCode_PropertyType(CMD_SpatialRepresentationTypeCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
{
}

void CMD_SpatialRepresentationTypeCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_SpatialRepresentationTypeCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_SpatialRepresentation_PropertyType::CMD_SpatialRepresentation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
{
}

CMD_SpatialRepresentation_PropertyType::CMD_SpatialRepresentation_PropertyType(CMD_SpatialRepresentation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
{
}

void CMD_SpatialRepresentation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_SpatialRepresentation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_StandardOrderProcess_PropertyType::CMD_StandardOrderProcess_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_StandardOrderProcess(*this)	// "MD_StandardOrderProcess"
{
}

CMD_StandardOrderProcess_PropertyType::CMD_StandardOrderProcess_PropertyType(CMD_StandardOrderProcess_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_StandardOrderProcess(*this)	// "MD_StandardOrderProcess"
{
}

void CMD_StandardOrderProcess_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_StandardOrderProcess_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_StandardOrderProcess_Type::CMD_StandardOrderProcess_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, fees(*this)	// "fees"
, plannedAvailableDateTime(*this)	// "plannedAvailableDateTime"
, orderingInstructions(*this)	// "orderingInstructions"
, turnaround(*this)	// "turnaround"
{
}

CMD_StandardOrderProcess_Type::CMD_StandardOrderProcess_Type(CMD_StandardOrderProcess_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, fees(*this)	// "fees"
, plannedAvailableDateTime(*this)	// "plannedAvailableDateTime"
, orderingInstructions(*this)	// "orderingInstructions"
, turnaround(*this)	// "turnaround"
{
}

void CMD_StandardOrderProcess_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_StandardOrderProcess_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_TopicCategoryCode_PropertyType::CMD_TopicCategoryCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
{
}

CMD_TopicCategoryCode_PropertyType::CMD_TopicCategoryCode_PropertyType(CMD_TopicCategoryCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
{
}

void CMD_TopicCategoryCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_TopicCategoryCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_TopicCategoryCode_Type::CMD_TopicCategoryCode_Type(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CMD_TopicCategoryCode_Type::CMD_TopicCategoryCode_Type(CMD_TopicCategoryCode_Type const& other)
: TypeBase(other.GetNode())
{
}


CMD_TopologyLevelCode_PropertyType::CMD_TopologyLevelCode_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
{
}

CMD_TopologyLevelCode_PropertyType::CMD_TopologyLevelCode_PropertyType(CMD_TopologyLevelCode_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
{
}

void CMD_TopologyLevelCode_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_TopologyLevelCode_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Usage_PropertyType::CMD_Usage_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Usage(*this)	// "MD_Usage"
{
}

CMD_Usage_PropertyType::CMD_Usage_PropertyType(CMD_Usage_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_Usage(*this)	// "MD_Usage"
{
}

void CMD_Usage_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Usage_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_Usage_Type::CMD_Usage_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, specificUsage(*this)	// "specificUsage"
, usageDateTime(*this)	// "usageDateTime"
, userDeterminedLimitations(*this)	// "userDeterminedLimitations"
, userContactInfo(*this)	// "userContactInfo"
{
}

CMD_Usage_Type::CMD_Usage_Type(CMD_Usage_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, specificUsage(*this)	// "specificUsage"
, usageDateTime(*this)	// "usageDateTime"
, userDeterminedLimitations(*this)	// "userDeterminedLimitations"
, userContactInfo(*this)	// "userContactInfo"
{
}

void CMD_Usage_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_Usage_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_VectorSpatialRepresentation_PropertyType::CMD_VectorSpatialRepresentation_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
{
}

CMD_VectorSpatialRepresentation_PropertyType::CMD_VectorSpatialRepresentation_PropertyType(CMD_VectorSpatialRepresentation_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
{
}

void CMD_VectorSpatialRepresentation_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_VectorSpatialRepresentation_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_VectorSpatialRepresentation_Type::CMD_VectorSpatialRepresentation_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CAbstractMD_SpatialRepresentation_Type(node)
, topologyLevel(*this)	// "topologyLevel"
, geometricObjects(*this)	// "geometricObjects"
{
}

CMD_VectorSpatialRepresentation_Type::CMD_VectorSpatialRepresentation_Type(CMD_VectorSpatialRepresentation_Type const& other)
: ::indoorgmlcore::gmd::CAbstractMD_SpatialRepresentation_Type(other.GetNode())
, topologyLevel(*this)	// "topologyLevel"
, geometricObjects(*this)	// "geometricObjects"
{
}

void CMD_VectorSpatialRepresentation_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_VectorSpatialRepresentation_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_FreeText_PropertyType::CPT_FreeText_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CCharacterString_PropertyType(node)
, PT_FreeText(*this)	// "PT_FreeText"
{
}

CPT_FreeText_PropertyType::CPT_FreeText_PropertyType(CPT_FreeText_PropertyType const& other)
: ::indoorgmlcore::gco::CCharacterString_PropertyType(other.GetNode())
, PT_FreeText(*this)	// "PT_FreeText"
{
}

void CPT_FreeText_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_FreeText_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_FreeText_Type::CPT_FreeText_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, textGroup(*this)	// "textGroup"
{
}

CPT_FreeText_Type::CPT_FreeText_Type(CPT_FreeText_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, textGroup(*this)	// "textGroup"
{
}

void CPT_FreeText_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_FreeText_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_LocaleContainer_PropertyType::CPT_LocaleContainer_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, PT_LocaleContainer(*this)	// "PT_LocaleContainer"
{
}

CPT_LocaleContainer_PropertyType::CPT_LocaleContainer_PropertyType(CPT_LocaleContainer_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, PT_LocaleContainer(*this)	// "PT_LocaleContainer"
{
}

void CPT_LocaleContainer_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_LocaleContainer_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_LocaleContainer_Type::CPT_LocaleContainer_Type(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, description(*this)	// "description"
, locale(*this)	// "locale"
, date(*this)	// "date"
, responsibleParty(*this)	// "responsibleParty"
, localisedString(*this)	// "localisedString"
{
}

CPT_LocaleContainer_Type::CPT_LocaleContainer_Type(CPT_LocaleContainer_Type const& other)
: ElementType(other.GetNode())
, description(*this)	// "description"
, locale(*this)	// "locale"
, date(*this)	// "date"
, responsibleParty(*this)	// "responsibleParty"
, localisedString(*this)	// "localisedString"
{
}

void CPT_LocaleContainer_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_LocaleContainer_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_Locale_PropertyType::CPT_Locale_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, PT_Locale(*this)	// "PT_Locale"
{
}

CPT_Locale_PropertyType::CPT_Locale_PropertyType(CPT_Locale_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, PT_Locale(*this)	// "PT_Locale"
{
}

void CPT_Locale_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_Locale_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CPT_Locale_Type::CPT_Locale_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gco::CAbstractObject_Type(node)
, languageCode(*this)	// "languageCode"
, country(*this)	// "country"
, characterEncoding(*this)	// "characterEncoding"
{
}

CPT_Locale_Type::CPT_Locale_Type(CPT_Locale_Type const& other)
: ::indoorgmlcore::gco::CAbstractObject_Type(other.GetNode())
, languageCode(*this)	// "languageCode"
, country(*this)	// "country"
, characterEncoding(*this)	// "characterEncoding"
{
}

void CPT_Locale_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PT_Locale_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CRS_Identifier_PropertyType::CRS_Identifier_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, RS_Identifier(*this)	// "RS_Identifier"
{
}

CRS_Identifier_PropertyType::CRS_Identifier_PropertyType(CRS_Identifier_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, RS_Identifier(*this)	// "RS_Identifier"
{
}

void CRS_Identifier_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RS_Identifier_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CRS_Identifier_Type::CRS_Identifier_Type(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gmd::CMD_Identifier_Type(node)
, codeSpace(*this)	// "codeSpace"
, version(*this)	// "version"
{
}

CRS_Identifier_Type::CRS_Identifier_Type(CRS_Identifier_Type const& other)
: ::indoorgmlcore::gmd::CMD_Identifier_Type(other.GetNode())
, codeSpace(*this)	// "codeSpace"
, version(*this)	// "version"
{
}

void CRS_Identifier_Type::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RS_Identifier_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CRS_ReferenceSystem_PropertyType::CRS_ReferenceSystem_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
{
}

CRS_ReferenceSystem_PropertyType::CRS_ReferenceSystem_PropertyType(CRS_ReferenceSystem_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
{
}

void CRS_ReferenceSystem_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RS_ReferenceSystem_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CURL_PropertyType::CURL_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, URL(*this)	// "URL"
{
}

CURL_PropertyType::CURL_PropertyType(CURL_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, URL(*this)	// "URL"
{
}

void CURL_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("URL_PropertyType"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_ObligationCode_TypeType::CMD_ObligationCode_TypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CMD_ObligationCode_TypeType::CMD_ObligationCode_TypeType(CMD_ObligationCode_TypeType const& other)
: ElementType(other.GetNode())
{
}

void CMD_ObligationCode_TypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_ObligationCode_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_PixelOrientationCode_TypeType::CMD_PixelOrientationCode_TypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CMD_PixelOrientationCode_TypeType::CMD_PixelOrientationCode_TypeType(CMD_PixelOrientationCode_TypeType const& other)
: ElementType(other.GetNode())
{
}

void CMD_PixelOrientationCode_TypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_PixelOrientationCode_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

CMD_TopicCategoryCode_TypeType::CMD_TopicCategoryCode_TypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CMD_TopicCategoryCode_TypeType::CMD_TopicCategoryCode_TypeType(CMD_TopicCategoryCode_TypeType const& other)
: ElementType(other.GetNode())
{
}

void CMD_TopicCategoryCode_TypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MD_TopicCategoryCode_Type"), _T("http://www.isotc211.org/2005/gmd"));
}

} // namespace gmd


namespace gsr
{	

CSC_CRS_PropertyType::CSC_CRS_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CompoundCRS(*this)	// "CompoundCRS"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

CSC_CRS_PropertyType::CSC_CRS_PropertyType(CSC_CRS_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CompoundCRS(*this)	// "CompoundCRS"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

void CSC_CRS_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SC_CRS_PropertyType"), _T("http://www.isotc211.org/2005/gsr"));
}

} // namespace gsr


namespace gss
{	

CGM_Object_PropertyType::CGM_Object_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CGM_Object_PropertyType::CGM_Object_PropertyType(CGM_Object_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CGM_Object_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GM_Object_PropertyType"), _T("http://www.isotc211.org/2005/gss"));
}

CGM_Point_PropertyType::CGM_Point_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Point(*this)	// "Point"
{
}

CGM_Point_PropertyType::CGM_Point_PropertyType(CGM_Point_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, Point(*this)	// "Point"
{
}

void CGM_Point_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GM_Point_PropertyType"), _T("http://www.isotc211.org/2005/gss"));
}

} // namespace gss


namespace gts
{	

CTM_PeriodDuration_PropertyType::CTM_PeriodDuration_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, TM_PeriodDuration(*this)	// "TM_PeriodDuration"
{
}

CTM_PeriodDuration_PropertyType::CTM_PeriodDuration_PropertyType(CTM_PeriodDuration_PropertyType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, TM_PeriodDuration(*this)	// "TM_PeriodDuration"
{
}

void CTM_PeriodDuration_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TM_PeriodDuration_PropertyType"), _T("http://www.isotc211.org/2005/gts"));
}

CTM_Primitive_PropertyType::CTM_Primitive_PropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
{
}

CTM_Primitive_PropertyType::CTM_Primitive_PropertyType(CTM_Primitive_PropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, uuidref(*this)	// "@uuidref"
, nilReason(*this)	// "@nilReason"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
{
}

void CTM_Primitive_PropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TM_Primitive_PropertyType"), _T("http://www.isotc211.org/2005/gts"));
}

} // namespace gts


namespace gml
{	

CAbstractCRSType::CAbstractCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
{
}

CAbstractCRSType::CAbstractCRSType(CAbstractCRSType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
{
}

void CAbstractCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractContinuousCoverageType::CAbstractContinuousCoverageType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoverageType(node)
, coverageFunction(*this)	// "coverageFunction"
{
}

CAbstractContinuousCoverageType::CAbstractContinuousCoverageType(CAbstractContinuousCoverageType const& other)
: ::indoorgmlcore::gml::CAbstractCoverageType(other.GetNode())
, coverageFunction(*this)	// "coverageFunction"
{
}

void CAbstractContinuousCoverageType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractContinuousCoverageType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractCoordinateOperationType::CAbstractCoordinateOperationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, operationVersion(*this)	// "operationVersion"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, sourceCRS(*this)	// "sourceCRS"
, targetCRS(*this)	// "targetCRS"
{
}

CAbstractCoordinateOperationType::CAbstractCoordinateOperationType(CAbstractCoordinateOperationType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, operationVersion(*this)	// "operationVersion"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, sourceCRS(*this)	// "sourceCRS"
, targetCRS(*this)	// "targetCRS"
{
}

void CAbstractCoordinateOperationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCoordinateOperationType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractCoordinateSystemType::CAbstractCoordinateSystemType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, aggregationType(*this)	// "@aggregationType"
, axis(*this)	// "axis"
, usesAxis(*this)	// "usesAxis"
{
}

CAbstractCoordinateSystemType::CAbstractCoordinateSystemType(CAbstractCoordinateSystemType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, axis(*this)	// "axis"
, usesAxis(*this)	// "usesAxis"
{
}

void CAbstractCoordinateSystemType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCoordinateSystemType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractCoverageType::CAbstractCoverageType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, domainSet(*this)	// "domainSet"
, gridDomain(*this)	// "gridDomain"
, multiCurveDomain(*this)	// "multiCurveDomain"
, multiPointDomain(*this)	// "multiPointDomain"
, multiSolidDomain(*this)	// "multiSolidDomain"
, multiSurfaceDomain(*this)	// "multiSurfaceDomain"
, rectifiedGridDomain(*this)	// "rectifiedGridDomain"
, rangeSet(*this)	// "rangeSet"
{
}

CAbstractCoverageType::CAbstractCoverageType(CAbstractCoverageType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, domainSet(*this)	// "domainSet"
, gridDomain(*this)	// "gridDomain"
, multiCurveDomain(*this)	// "multiCurveDomain"
, multiPointDomain(*this)	// "multiPointDomain"
, multiSolidDomain(*this)	// "multiSolidDomain"
, multiSurfaceDomain(*this)	// "multiSurfaceDomain"
, rectifiedGridDomain(*this)	// "rectifiedGridDomain"
, rangeSet(*this)	// "rangeSet"
{
}

void CAbstractCoverageType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCoverageType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractCurveSegmentType::CAbstractCurveSegmentType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
{
}

CAbstractCurveSegmentType::CAbstractCurveSegmentType(CAbstractCurveSegmentType const& other)
: ElementType(other.GetNode())
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
{
}

void CAbstractCurveSegmentType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCurveSegmentType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractCurveType::CAbstractCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(node)
{
}

CAbstractCurveType::CAbstractCurveType(CAbstractCurveType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(other.GetNode())
{
}

void CAbstractCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractDatumType::CAbstractDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, anchorDefinition(*this)	// "anchorDefinition"
, anchorPoint(*this)	// "anchorPoint"
, realizationEpoch(*this)	// "realizationEpoch"
{
}

CAbstractDatumType::CAbstractDatumType(CAbstractDatumType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, anchorDefinition(*this)	// "anchorDefinition"
, anchorPoint(*this)	// "anchorPoint"
, realizationEpoch(*this)	// "realizationEpoch"
{
}

void CAbstractDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractFeatureCollectionType::CAbstractFeatureCollectionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, featureMember(*this)	// "featureMember"
, featureMembers(*this)	// "featureMembers"
{
}

CAbstractFeatureCollectionType::CAbstractFeatureCollectionType(CAbstractFeatureCollectionType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, featureMember(*this)	// "featureMember"
, featureMembers(*this)	// "featureMembers"
{
}

void CAbstractFeatureCollectionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractFeatureCollectionType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractFeatureMemberType::CAbstractFeatureMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
{
}

CAbstractFeatureMemberType::CAbstractFeatureMemberType(CAbstractFeatureMemberType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
{
}

void CAbstractFeatureMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractFeatureMemberType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractFeatureType::CAbstractFeatureType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, boundedBy(*this)	// "boundedBy"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
{
}

CAbstractFeatureType::CAbstractFeatureType(CAbstractFeatureType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, boundedBy(*this)	// "boundedBy"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
{
}

void CAbstractFeatureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractFeatureType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGMLType::CAbstractGMLType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
{
}

CAbstractGMLType::CAbstractGMLType(CAbstractGMLType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
{
}

void CAbstractGMLType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGMLType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralConversionType::CAbstractGeneralConversionType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
{
}

CAbstractGeneralConversionType::CAbstractGeneralConversionType(CAbstractGeneralConversionType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
{
}

void CAbstractGeneralConversionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralConversionType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralDerivedCRSType::CAbstractGeneralDerivedCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, conversion(*this)	// "conversion"
, definedByConversion(*this)	// "definedByConversion"
{
}

CAbstractGeneralDerivedCRSType::CAbstractGeneralDerivedCRSType(CAbstractGeneralDerivedCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, conversion(*this)	// "conversion"
, definedByConversion(*this)	// "definedByConversion"
{
}

void CAbstractGeneralDerivedCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralDerivedCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralOperationParameterPropertyType::CAbstractGeneralOperationParameterPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
{
}

CAbstractGeneralOperationParameterPropertyType::CAbstractGeneralOperationParameterPropertyType(CAbstractGeneralOperationParameterPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
{
}

void CAbstractGeneralOperationParameterPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralOperationParameterPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralOperationParameterType::CAbstractGeneralOperationParameterType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, minimumOccurs(*this)	// "minimumOccurs"
{
}

CAbstractGeneralOperationParameterType::CAbstractGeneralOperationParameterType(CAbstractGeneralOperationParameterType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, minimumOccurs(*this)	// "minimumOccurs"
{
}

void CAbstractGeneralOperationParameterType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralOperationParameterType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralParameterValuePropertyType::CAbstractGeneralParameterValuePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
{
}

CAbstractGeneralParameterValuePropertyType::CAbstractGeneralParameterValuePropertyType(CAbstractGeneralParameterValuePropertyType const& other)
: ElementType(other.GetNode())
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
{
}

void CAbstractGeneralParameterValuePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralParameterValuePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralParameterValueType::CAbstractGeneralParameterValueType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CAbstractGeneralParameterValueType::CAbstractGeneralParameterValueType(CAbstractGeneralParameterValueType const& other)
: ElementType(other.GetNode())
{
}

void CAbstractGeneralParameterValueType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralParameterValueType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeneralTransformationType::CAbstractGeneralTransformationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, operationVersion(*this)	// "operationVersion"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, sourceCRS(*this)	// "sourceCRS"
, targetCRS(*this)	// "targetCRS"
{
}

CAbstractGeneralTransformationType::CAbstractGeneralTransformationType(CAbstractGeneralTransformationType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
, operationVersion(*this)	// "operationVersion"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, sourceCRS(*this)	// "sourceCRS"
, targetCRS(*this)	// "targetCRS"
{
}

void CAbstractGeneralTransformationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeneralTransformationType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeometricAggregateType::CAbstractGeometricAggregateType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometryType(node)
, aggregationType(*this)	// "@aggregationType"
{
}

CAbstractGeometricAggregateType::CAbstractGeometricAggregateType(CAbstractGeometricAggregateType const& other)
: ::indoorgmlcore::gml::CAbstractGeometryType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
{
}

void CAbstractGeometricAggregateType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeometricAggregateType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeometricPrimitiveType::CAbstractGeometricPrimitiveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometryType(node)
{
}

CAbstractGeometricPrimitiveType::CAbstractGeometricPrimitiveType(CAbstractGeometricPrimitiveType const& other)
: ::indoorgmlcore::gml::CAbstractGeometryType(other.GetNode())
{
}

void CAbstractGeometricPrimitiveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeometricPrimitiveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGeometryType::CAbstractGeometryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

CAbstractGeometryType::CAbstractGeometryType(CAbstractGeometryType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

void CAbstractGeometryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGeometryType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractGriddedSurfaceType::CAbstractGriddedSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractParametricCurveSurfaceType(node)
, rows(*this)	// "@rows"
, columns(*this)	// "@columns"
, rows2(*this)	// "rows"
{
}

CAbstractGriddedSurfaceType::CAbstractGriddedSurfaceType(CAbstractGriddedSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractParametricCurveSurfaceType(other.GetNode())
, rows(*this)	// "@rows"
, columns(*this)	// "@columns"
, rows2(*this)	// "rows"
{
}

void CAbstractGriddedSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractGriddedSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractMemberType::CAbstractMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
{
}

CAbstractMemberType::CAbstractMemberType(CAbstractMemberType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
{
}

void CAbstractMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMemberType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractMetaDataType::CAbstractMetaDataType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
{
}

CAbstractMetaDataType::CAbstractMetaDataType(CAbstractMetaDataType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
{
}

void CAbstractMetaDataType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMetaDataType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractMetadataPropertyType::CAbstractMetadataPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
{
}

CAbstractMetadataPropertyType::CAbstractMetadataPropertyType(CAbstractMetadataPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
{
}

void CAbstractMetadataPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractMetadataPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractParametricCurveSurfaceType::CAbstractParametricCurveSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(node)
, aggregationType(*this)	// "@aggregationType"
{
}

CAbstractParametricCurveSurfaceType::CAbstractParametricCurveSurfaceType(CAbstractParametricCurveSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
{
}

void CAbstractParametricCurveSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractParametricCurveSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractRingPropertyType::CAbstractRingPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, LinearRing(*this)	// "LinearRing"
, Ring(*this)	// "Ring"
{
}

CAbstractRingPropertyType::CAbstractRingPropertyType(CAbstractRingPropertyType const& other)
: ElementType(other.GetNode())
, LinearRing(*this)	// "LinearRing"
, Ring(*this)	// "Ring"
{
}

void CAbstractRingPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractRingPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractRingType::CAbstractRingType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveType(node)
{
}

CAbstractRingType::CAbstractRingType(CAbstractRingType const& other)
: ::indoorgmlcore::gml::CAbstractCurveType(other.GetNode())
{
}

void CAbstractRingType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractRingType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractSolidType::CAbstractSolidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(node)
{
}

CAbstractSolidType::CAbstractSolidType(CAbstractSolidType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(other.GetNode())
{
}

void CAbstractSolidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractSolidType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractSurfacePatchType::CAbstractSurfacePatchType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CAbstractSurfacePatchType::CAbstractSurfacePatchType(CAbstractSurfacePatchType const& other)
: ElementType(other.GetNode())
{
}

void CAbstractSurfacePatchType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractSurfacePatchType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractSurfaceType::CAbstractSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(node)
{
}

CAbstractSurfaceType::CAbstractSurfaceType(CAbstractSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(other.GetNode())
{
}

void CAbstractSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimeComplexType::CAbstractTimeComplexType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeObjectType(node)
{
}

CAbstractTimeComplexType::CAbstractTimeComplexType(CAbstractTimeComplexType const& other)
: ::indoorgmlcore::gml::CAbstractTimeObjectType(other.GetNode())
{
}

void CAbstractTimeComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimeComplexType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimeGeometricPrimitiveType::CAbstractTimeGeometricPrimitiveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimePrimitiveType(node)
, frame(*this)	// "@frame"
{
}

CAbstractTimeGeometricPrimitiveType::CAbstractTimeGeometricPrimitiveType(CAbstractTimeGeometricPrimitiveType const& other)
: ::indoorgmlcore::gml::CAbstractTimePrimitiveType(other.GetNode())
, frame(*this)	// "@frame"
{
}

void CAbstractTimeGeometricPrimitiveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimeGeometricPrimitiveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimeObjectType::CAbstractTimeObjectType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
{
}

CAbstractTimeObjectType::CAbstractTimeObjectType(CAbstractTimeObjectType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
{
}

void CAbstractTimeObjectType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimeObjectType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimePrimitiveType::CAbstractTimePrimitiveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeObjectType(node)
, relatedTime(*this)	// "relatedTime"
{
}

CAbstractTimePrimitiveType::CAbstractTimePrimitiveType(CAbstractTimePrimitiveType const& other)
: ::indoorgmlcore::gml::CAbstractTimeObjectType(other.GetNode())
, relatedTime(*this)	// "relatedTime"
{
}

void CAbstractTimePrimitiveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimePrimitiveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimeSliceType::CAbstractTimeSliceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, validTime(*this)	// "validTime"
, dataSource(*this)	// "dataSource"
{
}

CAbstractTimeSliceType::CAbstractTimeSliceType(CAbstractTimeSliceType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, validTime(*this)	// "validTime"
, dataSource(*this)	// "dataSource"
{
}

void CAbstractTimeSliceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimeSliceType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTimeTopologyPrimitiveType::CAbstractTimeTopologyPrimitiveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimePrimitiveType(node)
, complex(*this)	// "complex"
{
}

CAbstractTimeTopologyPrimitiveType::CAbstractTimeTopologyPrimitiveType(CAbstractTimeTopologyPrimitiveType const& other)
: ::indoorgmlcore::gml::CAbstractTimePrimitiveType(other.GetNode())
, complex(*this)	// "complex"
{
}

void CAbstractTimeTopologyPrimitiveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTimeTopologyPrimitiveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTopoPrimitiveType::CAbstractTopoPrimitiveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
{
}

CAbstractTopoPrimitiveType::CAbstractTopoPrimitiveType(CAbstractTopoPrimitiveType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
{
}

void CAbstractTopoPrimitiveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTopoPrimitiveType"), _T("http://www.opengis.net/gml/3.2"));
}

CAbstractTopologyType::CAbstractTopologyType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
{
}

CAbstractTopologyType::CAbstractTopologyType(CAbstractTopologyType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
{
}

void CAbstractTopologyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractTopologyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAffineCSPropertyType::CAffineCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, AffineCS(*this)	// "AffineCS"
{
}

CAffineCSPropertyType::CAffineCSPropertyType(CAffineCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, AffineCS(*this)	// "AffineCS"
{
}

void CAffineCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AffineCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CAffineCSType::CAffineCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CAffineCSType::CAffineCSType(CAffineCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CAffineCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AffineCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CAffinePlacementType::CAffinePlacementType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, location(*this)	// "location"
, refDirection(*this)	// "refDirection"
, inDimension(*this)	// "inDimension"
, outDimension(*this)	// "outDimension"
{
}

CAffinePlacementType::CAffinePlacementType(CAffinePlacementType const& other)
: ElementType(other.GetNode())
, location(*this)	// "location"
, refDirection(*this)	// "refDirection"
, inDimension(*this)	// "inDimension"
, outDimension(*this)	// "outDimension"
{
}

void CAffinePlacementType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AffinePlacementType"), _T("http://www.opengis.net/gml/3.2"));
}

CAggregationType::CAggregationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CAggregationType::CAggregationType(CAggregationType const& other)
: TypeBase(other.GetNode())
{
}


CAngleChoiceType::CAngleChoiceType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, angle(*this)	// "angle"
, dmsAngle(*this)	// "dmsAngle"
{
}

CAngleChoiceType::CAngleChoiceType(CAngleChoiceType const& other)
: ElementType(other.GetNode())
, angle(*this)	// "angle"
, dmsAngle(*this)	// "dmsAngle"
{
}

void CAngleChoiceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AngleChoiceType"), _T("http://www.opengis.net/gml/3.2"));
}

CAngleType::CAngleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CAngleType::CAngleType(CAngleType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CAngleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AngleType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcByBulgeType::CArcByBulgeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, bulge(*this)	// "bulge"
, normal(*this)	// "normal"
{
}

CArcByBulgeType::CArcByBulgeType(CArcByBulgeType const& other)
: ElementType(other.GetNode())
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, bulge(*this)	// "bulge"
, normal(*this)	// "normal"
{
}

void CArcByBulgeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcByBulgeType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcByCenterPointType::CArcByCenterPointType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, radius(*this)	// "radius"
, startAngle(*this)	// "startAngle"
, endAngle(*this)	// "endAngle"
{
}

CArcByCenterPointType::CArcByCenterPointType(CArcByCenterPointType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, radius(*this)	// "radius"
, startAngle(*this)	// "startAngle"
, endAngle(*this)	// "endAngle"
{
}

void CArcByCenterPointType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcByCenterPointType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcMinutesType::CArcMinutesType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CArcMinutesType::CArcMinutesType(CArcMinutesType const& other)
: TypeBase(other.GetNode())
{
}


CArcSecondsType::CArcSecondsType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CArcSecondsType::CArcSecondsType(CArcSecondsType const& other)
: TypeBase(other.GetNode())
{
}


CArcStringByBulgeType::CArcStringByBulgeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, bulge(*this)	// "bulge"
, normal(*this)	// "normal"
{
}

CArcStringByBulgeType::CArcStringByBulgeType(CArcStringByBulgeType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, bulge(*this)	// "bulge"
, normal(*this)	// "normal"
{
}

void CArcStringByBulgeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcStringByBulgeType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcStringType::CArcStringType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

CArcStringType::CArcStringType(CArcStringType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

void CArcStringType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcStringType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcType::CArcType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

CArcType::CArcType(CArcType const& other)
: ElementType(other.GetNode())
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

void CArcType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcType"), _T("http://www.opengis.net/gml/3.2"));
}

CAreaType::CAreaType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CAreaType::CAreaType(CAreaType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CAreaType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AreaType"), _T("http://www.opengis.net/gml/3.2"));
}

CArrayAssociationType::CArrayAssociationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, AffineCS(*this)	// "AffineCS"
, AffinePlacement(*this)	// "AffinePlacement"
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, Array(*this)	// "Array"
, BSpline(*this)	// "BSpline"
, Bag(*this)	// "Bag"
, BaseUnit(*this)	// "BaseUnit"
, Bezier(*this)	// "Bezier"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, CartesianCS(*this)	// "CartesianCS"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeValue(*this)	// "CompositeValue"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, CubicSpline(*this)	// "CubicSpline"
, Curve(*this)	// "Curve"
, CylindricalCS(*this)	// "CylindricalCS"
, DataBlock(*this)	// "DataBlock"
, Definition(*this)	// "Definition"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, Edge(*this)	// "Edge"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Face(*this)	// "Face"
, FeatureCollection(*this)	// "FeatureCollection"
, File(*this)	// "File"
, GenericMetaData(*this)	// "GenericMetaData"
, GeocentricCRS(*this)	// "GeocentricCRS"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, GridCoverage(*this)	// "GridCoverage"
, GridFunction(*this)	// "GridFunction"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LineString(*this)	// "LineString"
, LineStringSegment(*this)	// "LineStringSegment"
, LinearCS(*this)	// "LinearCS"
, LinearRing(*this)	// "LinearRing"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
, MultiCurve(*this)	// "MultiCurve"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolid(*this)	// "MultiSolid"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurface(*this)	// "MultiSurface"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Node(*this)	// "Node"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, Observation(*this)	// "Observation"
, OffsetCurve(*this)	// "OffsetCurve"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Point(*this)	// "Point"
, PolarCS(*this)	// "PolarCS"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, RectifiedGrid(*this)	// "RectifiedGrid"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, SphericalCS(*this)	// "SphericalCS"
, Surface(*this)	// "Surface"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimePeriod(*this)	// "TimePeriod"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Tin(*this)	// "Tin"
, TopoComplex(*this)	// "TopoComplex"
, TopoSolid(*this)	// "TopoSolid"
, Transformation(*this)	// "Transformation"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, ValueArray(*this)	// "ValueArray"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
, coverageFunction(*this)	// "coverageFunction"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

CArrayAssociationType::CArrayAssociationType(CArrayAssociationType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, AffineCS(*this)	// "AffineCS"
, AffinePlacement(*this)	// "AffinePlacement"
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, Array(*this)	// "Array"
, BSpline(*this)	// "BSpline"
, Bag(*this)	// "Bag"
, BaseUnit(*this)	// "BaseUnit"
, Bezier(*this)	// "Bezier"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, CartesianCS(*this)	// "CartesianCS"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeValue(*this)	// "CompositeValue"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, CubicSpline(*this)	// "CubicSpline"
, Curve(*this)	// "Curve"
, CylindricalCS(*this)	// "CylindricalCS"
, DataBlock(*this)	// "DataBlock"
, Definition(*this)	// "Definition"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, Edge(*this)	// "Edge"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Face(*this)	// "Face"
, FeatureCollection(*this)	// "FeatureCollection"
, File(*this)	// "File"
, GenericMetaData(*this)	// "GenericMetaData"
, GeocentricCRS(*this)	// "GeocentricCRS"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, GridCoverage(*this)	// "GridCoverage"
, GridFunction(*this)	// "GridFunction"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LineString(*this)	// "LineString"
, LineStringSegment(*this)	// "LineStringSegment"
, LinearCS(*this)	// "LinearCS"
, LinearRing(*this)	// "LinearRing"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
, MultiCurve(*this)	// "MultiCurve"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolid(*this)	// "MultiSolid"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurface(*this)	// "MultiSurface"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Node(*this)	// "Node"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, Observation(*this)	// "Observation"
, OffsetCurve(*this)	// "OffsetCurve"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Point(*this)	// "Point"
, PolarCS(*this)	// "PolarCS"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, RectifiedGrid(*this)	// "RectifiedGrid"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, SphericalCS(*this)	// "SphericalCS"
, Surface(*this)	// "Surface"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimePeriod(*this)	// "TimePeriod"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Tin(*this)	// "Tin"
, TopoComplex(*this)	// "TopoComplex"
, TopoSolid(*this)	// "TopoSolid"
, Transformation(*this)	// "Transformation"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, ValueArray(*this)	// "ValueArray"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
, coverageFunction(*this)	// "coverageFunction"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

void CArrayAssociationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArrayAssociationType"), _T("http://www.opengis.net/gml/3.2"));
}

CArrayType::CArrayType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, members(*this)	// "members"
{
}

CArrayType::CArrayType(CArrayType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, members(*this)	// "members"
{
}

void CArrayType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArrayType"), _T("http://www.opengis.net/gml/3.2"));
}

CAssociationRoleType::CAssociationRoleType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

CAssociationRoleType::CAssociationRoleType(CAssociationRoleType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

void CAssociationRoleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AssociationRoleType"), _T("http://www.opengis.net/gml/3.2"));
}

CAxisDirection::CAxisDirection(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CAxisDirection::CAxisDirection(CAxisDirection const& other)
: TypeBase(other.GetNode())
{
}


CAxisDirectionList::CAxisDirectionList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CAxisDirectionList::CAxisDirectionList(CAxisDirectionList const& other)
: TypeBase(other.GetNode())
{
}


CBSplineType::CBSplineType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, isPolynomial(*this)	// "@isPolynomial"
, knotType(*this)	// "@knotType"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, degree(*this)	// "degree"
, knot(*this)	// "knot"
{
}

CBSplineType::CBSplineType(CBSplineType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, isPolynomial(*this)	// "@isPolynomial"
, knotType(*this)	// "@knotType"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, degree(*this)	// "degree"
, knot(*this)	// "knot"
{
}

void CBSplineType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BSplineType"), _T("http://www.opengis.net/gml/3.2"));
}

CBagType::CBagType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, member(*this)	// "member"
, members(*this)	// "members"
{
}

CBagType::CBagType(CBagType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, member(*this)	// "member"
, members(*this)	// "members"
{
}

void CBagType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BagType"), _T("http://www.opengis.net/gml/3.2"));
}

CBaseUnitType::CBaseUnitType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CUnitDefinitionType(node)
, unitsSystem(*this)	// "unitsSystem"
{
}

CBaseUnitType::CBaseUnitType(CBaseUnitType const& other)
: ::indoorgmlcore::gml::CUnitDefinitionType(other.GetNode())
, unitsSystem(*this)	// "unitsSystem"
{
}

void CBaseUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BaseUnitType"), _T("http://www.opengis.net/gml/3.2"));
}

CBezierType::CBezierType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, isPolynomial(*this)	// "@isPolynomial"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, degree(*this)	// "degree"
, knot(*this)	// "knot"
{
}

CBezierType::CBezierType(CBezierType const& other)
: ElementType(other.GetNode())
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, isPolynomial(*this)	// "@isPolynomial"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, degree(*this)	// "degree"
, knot(*this)	// "knot"
{
}

void CBezierType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BezierType"), _T("http://www.opengis.net/gml/3.2"));
}

CBooleanPropertyType::CBooleanPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Boolean(*this)	// "Boolean"
{
}

CBooleanPropertyType::CBooleanPropertyType(CBooleanPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Boolean(*this)	// "Boolean"
{
}

void CBooleanPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BooleanPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CBoundedFeatureType::CBoundedFeatureType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, boundedBy(*this)	// "boundedBy"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
{
}

CBoundedFeatureType::CBoundedFeatureType(CBoundedFeatureType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, boundedBy(*this)	// "boundedBy"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
{
}

void CBoundedFeatureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BoundedFeatureType"), _T("http://www.opengis.net/gml/3.2"));
}

CBoundingShapeType::CBoundingShapeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, nilReason(*this)	// "@nilReason"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Null(*this)	// "Null"
{
}

CBoundingShapeType::CBoundingShapeType(CBoundingShapeType const& other)
: ElementType(other.GetNode())
, nilReason(*this)	// "@nilReason"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Null(*this)	// "Null"
{
}

void CBoundingShapeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BoundingShapeType"), _T("http://www.opengis.net/gml/3.2"));
}

CCRSPropertyType::CCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompoundCRS(*this)	// "CompoundCRS"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

CCRSPropertyType::CCRSPropertyType(CCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompoundCRS(*this)	// "CompoundCRS"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

void CCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCalDate::CCalDate(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCalDate::CCalDate(CCalDate const& other)
: TypeBase(other.GetNode())
{
}


CCartesianCSPropertyType::CCartesianCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CartesianCS(*this)	// "CartesianCS"
{
}

CCartesianCSPropertyType::CCartesianCSPropertyType(CCartesianCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CartesianCS(*this)	// "CartesianCS"
{
}

void CCartesianCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CartesianCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCartesianCSType::CCartesianCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CCartesianCSType::CCartesianCSType(CCartesianCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CCartesianCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CartesianCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CCategoryExtentType::CCategoryExtentType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, codeSpace(*this)	// "@codeSpace"
{
}

CCategoryExtentType::CCategoryExtentType(CCategoryExtentType const& other)
: ElementType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
{
}

void CCategoryExtentType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CategoryExtentType"), _T("http://www.opengis.net/gml/3.2"));
}

CCategoryPropertyType::CCategoryPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Category(*this)	// "Category"
{
}

CCategoryPropertyType::CCategoryPropertyType(CCategoryPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Category(*this)	// "Category"
{
}

void CCategoryPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CategoryPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCircleByCenterPointType::CCircleByCenterPointType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, radius(*this)	// "radius"
{
}

CCircleByCenterPointType::CCircleByCenterPointType(CCircleByCenterPointType const& other)
: ElementType(other.GetNode())
, numDerivativesAtStart(*this)	// "@numDerivativesAtStart"
, numDerivativesAtEnd(*this)	// "@numDerivativesAtEnd"
, numDerivativeInterior(*this)	// "@numDerivativeInterior"
, interpolation(*this)	// "@interpolation"
, numArc(*this)	// "@numArc"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, radius(*this)	// "radius"
{
}

void CCircleByCenterPointType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CircleByCenterPointType"), _T("http://www.opengis.net/gml/3.2"));
}

CCircleType::CCircleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CArcType(node)
{
}

CCircleType::CCircleType(CCircleType const& other)
: ::indoorgmlcore::gml::CArcType(other.GetNode())
{
}

void CCircleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CircleType"), _T("http://www.opengis.net/gml/3.2"));
}

CClothoidType::CClothoidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, refLocation(*this)	// "refLocation"
, scaleFactor(*this)	// "scaleFactor"
, startParameter(*this)	// "startParameter"
, endParameter(*this)	// "endParameter"
{
}

CClothoidType::CClothoidType(CClothoidType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, refLocation(*this)	// "refLocation"
, scaleFactor(*this)	// "scaleFactor"
, startParameter(*this)	// "startParameter"
, endParameter(*this)	// "endParameter"
{
}

void CClothoidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ClothoidType"), _T("http://www.opengis.net/gml/3.2"));
}

CCodeListType::CCodeListType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CNameListType(node)
, codeSpace(*this)	// "@codeSpace"
{
}

CCodeListType::CCodeListType(CCodeListType const& other)
: ::indoorgmlcore::gml::CNameListType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
{
}

void CCodeListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CodeListType"), _T("http://www.opengis.net/gml/3.2"));
}

CCodeOrNilReasonListType::CCodeOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CNameOrNilReasonListType(node)
, codeSpace(*this)	// "@codeSpace"
{
}

CCodeOrNilReasonListType::CCodeOrNilReasonListType(CCodeOrNilReasonListType const& other)
: ::indoorgmlcore::gml::CNameOrNilReasonListType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
{
}

void CCodeOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CodeOrNilReasonListType"), _T("http://www.opengis.net/gml/3.2"));
}

CCodeType::CCodeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, codeSpace(*this)	// "@codeSpace"
{
}

CCodeType::CCodeType(CCodeType const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
{
}

void CCodeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CodeType"), _T("http://www.opengis.net/gml/3.2"));
}

CCodeWithAuthorityType::CCodeWithAuthorityType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, codeSpace(*this)	// "@codeSpace"
{
}

CCodeWithAuthorityType::CCodeWithAuthorityType(CCodeWithAuthorityType const& other)
: ElementType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
{
}

void CCodeWithAuthorityType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CodeWithAuthorityType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompassPointEnumeration::CCompassPointEnumeration(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCompassPointEnumeration::CCompassPointEnumeration(CCompassPointEnumeration const& other)
: TypeBase(other.GetNode())
{
}


CCompositeCurveType::CCompositeCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveType(node)
, aggregationType(*this)	// "@aggregationType"
, curveMember(*this)	// "curveMember"
{
}

CCompositeCurveType::CCompositeCurveType(CCompositeCurveType const& other)
: ::indoorgmlcore::gml::CAbstractCurveType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, curveMember(*this)	// "curveMember"
{
}

void CCompositeCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompositeCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompositeSolidType::CCompositeSolidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSolidType(node)
, aggregationType(*this)	// "@aggregationType"
, solidMember(*this)	// "solidMember"
{
}

CCompositeSolidType::CCompositeSolidType(CCompositeSolidType const& other)
: ::indoorgmlcore::gml::CAbstractSolidType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, solidMember(*this)	// "solidMember"
{
}

void CCompositeSolidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompositeSolidType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompositeSurfaceType::CCompositeSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfaceType(node)
, aggregationType(*this)	// "@aggregationType"
, surfaceMember(*this)	// "surfaceMember"
{
}

CCompositeSurfaceType::CCompositeSurfaceType(CCompositeSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractSurfaceType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, surfaceMember(*this)	// "surfaceMember"
{
}

void CCompositeSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompositeSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompositeValueType::CCompositeValueType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGMLType(node)
, aggregationType(*this)	// "@aggregationType"
, valueComponent(*this)	// "valueComponent"
, valueComponents(*this)	// "valueComponents"
{
}

CCompositeValueType::CCompositeValueType(CCompositeValueType const& other)
: ::indoorgmlcore::gml::CAbstractGMLType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, valueComponent(*this)	// "valueComponent"
, valueComponents(*this)	// "valueComponents"
{
}

void CCompositeValueType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompositeValueType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompoundCRSPropertyType::CCompoundCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompoundCRS(*this)	// "CompoundCRS"
{
}

CCompoundCRSPropertyType::CCompoundCRSPropertyType(CCompoundCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompoundCRS(*this)	// "CompoundCRS"
{
}

void CCompoundCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompoundCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCompoundCRSType::CCompoundCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, aggregationType(*this)	// "@aggregationType"
, componentReferenceSystem(*this)	// "componentReferenceSystem"
, includesSingleCRS(*this)	// "includesSingleCRS"
{
}

CCompoundCRSType::CCompoundCRSType(CCompoundCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, componentReferenceSystem(*this)	// "componentReferenceSystem"
, includesSingleCRS(*this)	// "includesSingleCRS"
{
}

void CCompoundCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompoundCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CConcatenatedOperationPropertyType::CConcatenatedOperationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
{
}

CConcatenatedOperationPropertyType::CConcatenatedOperationPropertyType(CConcatenatedOperationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
{
}

void CConcatenatedOperationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConcatenatedOperationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CConcatenatedOperationType::CConcatenatedOperationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateOperationType(node)
, aggregationType(*this)	// "@aggregationType"
, coordOperation(*this)	// "coordOperation"
, usesOperation(*this)	// "usesOperation"
, usesSingleOperation(*this)	// "usesSingleOperation"
{
}

CConcatenatedOperationType::CConcatenatedOperationType(CConcatenatedOperationType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateOperationType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, coordOperation(*this)	// "coordOperation"
, usesOperation(*this)	// "usesOperation"
, usesSingleOperation(*this)	// "usesSingleOperation"
{
}

void CConcatenatedOperationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConcatenatedOperationType"), _T("http://www.opengis.net/gml/3.2"));
}

CConeType::CConeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(node)
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

CConeType::CConeType(CConeType const& other)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(other.GetNode())
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

void CConeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConeType"), _T("http://www.opengis.net/gml/3.2"));
}

CConventionalUnitType::CConventionalUnitType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CUnitDefinitionType(node)
, conversionToPreferredUnit(*this)	// "conversionToPreferredUnit"
, roughConversionToPreferredUnit(*this)	// "roughConversionToPreferredUnit"
, derivationUnitTerm(*this)	// "derivationUnitTerm"
{
}

CConventionalUnitType::CConventionalUnitType(CConventionalUnitType const& other)
: ::indoorgmlcore::gml::CUnitDefinitionType(other.GetNode())
, conversionToPreferredUnit(*this)	// "conversionToPreferredUnit"
, roughConversionToPreferredUnit(*this)	// "roughConversionToPreferredUnit"
, derivationUnitTerm(*this)	// "derivationUnitTerm"
{
}

void CConventionalUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConventionalUnitType"), _T("http://www.opengis.net/gml/3.2"));
}

CConversionPropertyType::CConversionPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
{
}

CConversionPropertyType::CConversionPropertyType(CConversionPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
{
}

void CConversionPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConversionPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CConversionToPreferredUnitType::CConversionToPreferredUnitType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CUnitOfMeasureType(node)
, factor(*this)	// "factor"
, formula(*this)	// "formula"
{
}

CConversionToPreferredUnitType::CConversionToPreferredUnitType(CConversionToPreferredUnitType const& other)
: ::indoorgmlcore::gml::CUnitOfMeasureType(other.GetNode())
, factor(*this)	// "factor"
, formula(*this)	// "formula"
{
}

void CConversionToPreferredUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConversionToPreferredUnitType"), _T("http://www.opengis.net/gml/3.2"));
}

CConversionType::CConversionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralConversionType(node)
, method(*this)	// "method"
, usesMethod(*this)	// "usesMethod"
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
{
}

CConversionType::CConversionType(CConversionType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralConversionType(other.GetNode())
, method(*this)	// "method"
, usesMethod(*this)	// "usesMethod"
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
{
}

void CConversionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConversionType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoordinateOperationPropertyType::CCoordinateOperationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, Conversion(*this)	// "Conversion"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Transformation(*this)	// "Transformation"
{
}

CCoordinateOperationPropertyType::CCoordinateOperationPropertyType(CCoordinateOperationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, Conversion(*this)	// "Conversion"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Transformation(*this)	// "Transformation"
{
}

void CCoordinateOperationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinateOperationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoordinateSystemAxisPropertyType::CCoordinateSystemAxisPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
{
}

CCoordinateSystemAxisPropertyType::CCoordinateSystemAxisPropertyType(CCoordinateSystemAxisPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
{
}

void CCoordinateSystemAxisPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinateSystemAxisPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoordinateSystemAxisType::CCoordinateSystemAxisType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, uom(*this)	// "@uom"
, axisAbbrev(*this)	// "axisAbbrev"
, axisDirection(*this)	// "axisDirection"
, minimumValue(*this)	// "minimumValue"
, maximumValue(*this)	// "maximumValue"
, rangeMeaning(*this)	// "rangeMeaning"
{
}

CCoordinateSystemAxisType::CCoordinateSystemAxisType(CCoordinateSystemAxisType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, uom(*this)	// "@uom"
, axisAbbrev(*this)	// "axisAbbrev"
, axisDirection(*this)	// "axisDirection"
, minimumValue(*this)	// "minimumValue"
, maximumValue(*this)	// "maximumValue"
, rangeMeaning(*this)	// "rangeMeaning"
{
}

void CCoordinateSystemAxisType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinateSystemAxisType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoordinateSystemPropertyType::CCoordinateSystemPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, AffineCS(*this)	// "AffineCS"
, CartesianCS(*this)	// "CartesianCS"
, CylindricalCS(*this)	// "CylindricalCS"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, LinearCS(*this)	// "LinearCS"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, PolarCS(*this)	// "PolarCS"
, SphericalCS(*this)	// "SphericalCS"
, TemporalCS(*this)	// "TemporalCS"
, TimeCS(*this)	// "TimeCS"
, UserDefinedCS(*this)	// "UserDefinedCS"
, VerticalCS(*this)	// "VerticalCS"
{
}

CCoordinateSystemPropertyType::CCoordinateSystemPropertyType(CCoordinateSystemPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, AffineCS(*this)	// "AffineCS"
, CartesianCS(*this)	// "CartesianCS"
, CylindricalCS(*this)	// "CylindricalCS"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, LinearCS(*this)	// "LinearCS"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, PolarCS(*this)	// "PolarCS"
, SphericalCS(*this)	// "SphericalCS"
, TemporalCS(*this)	// "TemporalCS"
, TimeCS(*this)	// "TimeCS"
, UserDefinedCS(*this)	// "UserDefinedCS"
, VerticalCS(*this)	// "VerticalCS"
{
}

void CCoordinateSystemPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinateSystemPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoordinatesType::CCoordinatesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, decimal(*this)	// "@decimal"
, cs(*this)	// "@cs"
, ts(*this)	// "@ts"
{
}

CCoordinatesType::CCoordinatesType(CCoordinatesType const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, decimal(*this)	// "@decimal"
, cs(*this)	// "@cs"
, ts(*this)	// "@ts"
{
}

void CCoordinatesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinatesType"), _T("http://www.opengis.net/gml/3.2"));
}

CCountExtentType::CCountExtentType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCountExtentType::CCountExtentType(CCountExtentType const& other)
: TypeBase(other.GetNode())
{
}


CCountPropertyType::CCountPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Count(*this)	// "Count"
{
}

CCountPropertyType::CCountPropertyType(CCountPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Count(*this)	// "Count"
{
}

void CCountPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CountPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCoverageFunctionType::CCoverageFunctionType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, MappingRule(*this)	// "MappingRule"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, GridFunction(*this)	// "GridFunction"
{
}

CCoverageFunctionType::CCoverageFunctionType(CCoverageFunctionType const& other)
: ElementType(other.GetNode())
, MappingRule(*this)	// "MappingRule"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, GridFunction(*this)	// "GridFunction"
{
}

void CCoverageFunctionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoverageFunctionType"), _T("http://www.opengis.net/gml/3.2"));
}

CCubicSplineType::CCubicSplineType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, degree(*this)	// "@degree"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, vectorAtStart(*this)	// "vectorAtStart"
, vectorAtEnd(*this)	// "vectorAtEnd"
{
}

CCubicSplineType::CCubicSplineType(CCubicSplineType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, degree(*this)	// "@degree"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
, vectorAtStart(*this)	// "vectorAtStart"
, vectorAtEnd(*this)	// "vectorAtEnd"
{
}

void CCubicSplineType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CubicSplineType"), _T("http://www.opengis.net/gml/3.2"));
}

CCurveArrayPropertyType::CCurveArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, Ring(*this)	// "Ring"
{
}

CCurveArrayPropertyType::CCurveArrayPropertyType(CCurveArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, Ring(*this)	// "Ring"
{
}

void CCurveArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CurveArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCurveInterpolationType::CCurveInterpolationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCurveInterpolationType::CCurveInterpolationType(CCurveInterpolationType const& other)
: TypeBase(other.GetNode())
{
}


CCurvePropertyType::CCurvePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, Ring(*this)	// "Ring"
{
}

CCurvePropertyType::CCurvePropertyType(CCurvePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, Ring(*this)	// "Ring"
{
}

void CCurvePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CurvePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCurveSegmentArrayPropertyType::CCurveSegmentArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, BSpline(*this)	// "BSpline"
, Bezier(*this)	// "Bezier"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CubicSpline(*this)	// "CubicSpline"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, LineStringSegment(*this)	// "LineStringSegment"
, OffsetCurve(*this)	// "OffsetCurve"
{
}

CCurveSegmentArrayPropertyType::CCurveSegmentArrayPropertyType(CCurveSegmentArrayPropertyType const& other)
: ElementType(other.GetNode())
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, BSpline(*this)	// "BSpline"
, Bezier(*this)	// "Bezier"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CubicSpline(*this)	// "CubicSpline"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, LineStringSegment(*this)	// "LineStringSegment"
, OffsetCurve(*this)	// "OffsetCurve"
{
}

void CCurveSegmentArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CurveSegmentArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCurveType::CCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveType(node)
, segments(*this)	// "segments"
{
}

CCurveType::CCurveType(CCurveType const& other)
: ::indoorgmlcore::gml::CAbstractCurveType(other.GetNode())
, segments(*this)	// "segments"
{
}

void CCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CurveType"), _T("http://www.opengis.net/gml/3.2"));
}

CCylinderType::CCylinderType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(node)
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

CCylinderType::CCylinderType(CCylinderType const& other)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(other.GetNode())
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

void CCylinderType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CylinderType"), _T("http://www.opengis.net/gml/3.2"));
}

CCylindricalCSPropertyType::CCylindricalCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CylindricalCS(*this)	// "CylindricalCS"
{
}

CCylindricalCSPropertyType::CCylindricalCSPropertyType(CCylindricalCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CylindricalCS(*this)	// "CylindricalCS"
{
}

void CCylindricalCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CylindricalCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CCylindricalCSType::CCylindricalCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CCylindricalCSType::CCylindricalCSType(CCylindricalCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CCylindricalCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CylindricalCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CDMSAngleType::CDMSAngleType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, degrees(*this)	// "degrees"
, decimalMinutes(*this)	// "decimalMinutes"
, minutes(*this)	// "minutes"
, seconds(*this)	// "seconds"
{
}

CDMSAngleType::CDMSAngleType(CDMSAngleType const& other)
: ElementType(other.GetNode())
, degrees(*this)	// "degrees"
, decimalMinutes(*this)	// "decimalMinutes"
, minutes(*this)	// "minutes"
, seconds(*this)	// "seconds"
{
}

void CDMSAngleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DMSAngleType"), _T("http://www.opengis.net/gml/3.2"));
}

CDataBlockType::CDataBlockType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, rangeParameters(*this)	// "rangeParameters"
, tupleList(*this)	// "tupleList"
, doubleOrNilReasonTupleList(*this)	// "doubleOrNilReasonTupleList"
{
}

CDataBlockType::CDataBlockType(CDataBlockType const& other)
: ElementType(other.GetNode())
, rangeParameters(*this)	// "rangeParameters"
, tupleList(*this)	// "tupleList"
, doubleOrNilReasonTupleList(*this)	// "doubleOrNilReasonTupleList"
{
}

void CDataBlockType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DataBlockType"), _T("http://www.opengis.net/gml/3.2"));
}

CDatumPropertyType::CDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringDatum(*this)	// "EngineeringDatum"
, GeodeticDatum(*this)	// "GeodeticDatum"
, ImageDatum(*this)	// "ImageDatum"
, TemporalDatum(*this)	// "TemporalDatum"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

CDatumPropertyType::CDatumPropertyType(CDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringDatum(*this)	// "EngineeringDatum"
, GeodeticDatum(*this)	// "GeodeticDatum"
, ImageDatum(*this)	// "ImageDatum"
, TemporalDatum(*this)	// "TemporalDatum"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

void CDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDecimalMinutesType::CDecimalMinutesType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CDecimalMinutesType::CDecimalMinutesType(CDecimalMinutesType const& other)
: TypeBase(other.GetNode())
{
}


CDefinitionBaseType::CDefinitionBaseType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
{
}

CDefinitionBaseType::CDefinitionBaseType(CDefinitionBaseType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
{
}

void CDefinitionBaseType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DefinitionBaseType"), _T("http://www.opengis.net/gml/3.2"));
}

CDefinitionProxyType::CDefinitionProxyType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, definitionRef(*this)	// "definitionRef"
{
}

CDefinitionProxyType::CDefinitionProxyType(CDefinitionProxyType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, definitionRef(*this)	// "definitionRef"
{
}

void CDefinitionProxyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DefinitionProxyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDefinitionType::CDefinitionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionBaseType(node)
, remarks(*this)	// "remarks"
{
}

CDefinitionType::CDefinitionType(CDefinitionType const& other)
: ::indoorgmlcore::gml::CDefinitionBaseType(other.GetNode())
, remarks(*this)	// "remarks"
{
}

void CDefinitionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DefinitionType"), _T("http://www.opengis.net/gml/3.2"));
}

CDegreeValueType::CDegreeValueType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CDegreeValueType::CDegreeValueType(CDegreeValueType const& other)
: TypeBase(other.GetNode())
{
}


CDegreesType::CDegreesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDegreeValueTypeType(node)
, direction(*this)	// "@direction"
{
}

CDegreesType::CDegreesType(CDegreesType const& other)
: ::indoorgmlcore::gml::CDegreeValueTypeType(other.GetNode())
, direction(*this)	// "@direction"
{
}

void CDegreesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DegreesType"), _T("http://www.opengis.net/gml/3.2"));
}

CDerivationUnitTermType::CDerivationUnitTermType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CUnitOfMeasureType(node)
, exponent(*this)	// "@exponent"
{
}

CDerivationUnitTermType::CDerivationUnitTermType(CDerivationUnitTermType const& other)
: ::indoorgmlcore::gml::CUnitOfMeasureType(other.GetNode())
, exponent(*this)	// "@exponent"
{
}

void CDerivationUnitTermType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DerivationUnitTermType"), _T("http://www.opengis.net/gml/3.2"));
}

CDerivedCRSPropertyType::CDerivedCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DerivedCRS(*this)	// "DerivedCRS"
{
}

CDerivedCRSPropertyType::CDerivedCRSPropertyType(CDerivedCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DerivedCRS(*this)	// "DerivedCRS"
{
}

void CDerivedCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DerivedCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDerivedCRSType::CDerivedCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralDerivedCRSType(node)
, baseCRS(*this)	// "baseCRS"
, derivedCRSType(*this)	// "derivedCRSType"
, coordinateSystem(*this)	// "coordinateSystem"
, usesCS(*this)	// "usesCS"
{
}

CDerivedCRSType::CDerivedCRSType(CDerivedCRSType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralDerivedCRSType(other.GetNode())
, baseCRS(*this)	// "baseCRS"
, derivedCRSType(*this)	// "derivedCRSType"
, coordinateSystem(*this)	// "coordinateSystem"
, usesCS(*this)	// "usesCS"
{
}

void CDerivedCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DerivedCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CDerivedUnitType::CDerivedUnitType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CUnitDefinitionType(node)
, derivationUnitTerm(*this)	// "derivationUnitTerm"
{
}

CDerivedUnitType::CDerivedUnitType(CDerivedUnitType const& other)
: ::indoorgmlcore::gml::CUnitDefinitionType(other.GetNode())
, derivationUnitTerm(*this)	// "derivationUnitTerm"
{
}

void CDerivedUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DerivedUnitType"), _T("http://www.opengis.net/gml/3.2"));
}

CDictionaryEntryType::CDictionaryEntryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Definition(*this)	// "Definition"
, AffineCS(*this)	// "AffineCS"
, BaseUnit(*this)	// "BaseUnit"
, CartesianCS(*this)	// "CartesianCS"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, CylindricalCS(*this)	// "CylindricalCS"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LinearCS(*this)	// "LinearCS"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, PolarCS(*this)	// "PolarCS"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, SphericalCS(*this)	// "SphericalCS"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, Transformation(*this)	// "Transformation"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

CDictionaryEntryType::CDictionaryEntryType(CDictionaryEntryType const& other)
: ::indoorgmlcore::gml::CAbstractMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Definition(*this)	// "Definition"
, AffineCS(*this)	// "AffineCS"
, BaseUnit(*this)	// "BaseUnit"
, CartesianCS(*this)	// "CartesianCS"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, CylindricalCS(*this)	// "CylindricalCS"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LinearCS(*this)	// "LinearCS"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, PolarCS(*this)	// "PolarCS"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, SphericalCS(*this)	// "SphericalCS"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, Transformation(*this)	// "Transformation"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

void CDictionaryEntryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DictionaryEntryType"), _T("http://www.opengis.net/gml/3.2"));
}

CDictionaryType::CDictionaryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, aggregationType(*this)	// "@aggregationType"
, dictionaryEntry(*this)	// "dictionaryEntry"
, definitionMember(*this)	// "definitionMember"
, indirectEntry(*this)	// "indirectEntry"
{
}

CDictionaryType::CDictionaryType(CDictionaryType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, dictionaryEntry(*this)	// "dictionaryEntry"
, definitionMember(*this)	// "definitionMember"
, indirectEntry(*this)	// "indirectEntry"
{
}

void CDictionaryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DictionaryType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectPositionListType::CDirectPositionListType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CdoubleListType(node)
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
, count(*this)	// "@count"
{
}

CDirectPositionListType::CDirectPositionListType(CDirectPositionListType const& other)
: ::indoorgmlcore::gml::CdoubleListType(other.GetNode())
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
, count(*this)	// "@count"
{
}

void CDirectPositionListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectPositionListType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectPositionType::CDirectPositionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CdoubleListType(node)
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

CDirectPositionType::CDirectPositionType(CDirectPositionType const& other)
: ::indoorgmlcore::gml::CdoubleListType(other.GetNode())
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

void CDirectPositionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectPositionType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedEdgePropertyType::CDirectedEdgePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
{
}

CDirectedEdgePropertyType::CDirectedEdgePropertyType(CDirectedEdgePropertyType const& other)
: ElementType(other.GetNode())
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
{
}

void CDirectedEdgePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedEdgePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedFacePropertyType::CDirectedFacePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Face(*this)	// "Face"
{
}

CDirectedFacePropertyType::CDirectedFacePropertyType(CDirectedFacePropertyType const& other)
: ElementType(other.GetNode())
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Face(*this)	// "Face"
{
}

void CDirectedFacePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedFacePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedNodePropertyType::CDirectedNodePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
{
}

CDirectedNodePropertyType::CDirectedNodePropertyType(CDirectedNodePropertyType const& other)
: ElementType(other.GetNode())
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
{
}

void CDirectedNodePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedNodePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedObservationAtDistanceType::CDirectedObservationAtDistanceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDirectedObservationType(node)
, distance(*this)	// "distance"
{
}

CDirectedObservationAtDistanceType::CDirectedObservationAtDistanceType(CDirectedObservationAtDistanceType const& other)
: ::indoorgmlcore::gml::CDirectedObservationType(other.GetNode())
, distance(*this)	// "distance"
{
}

void CDirectedObservationAtDistanceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedObservationAtDistanceType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedObservationType::CDirectedObservationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CObservationType(node)
, direction(*this)	// "direction"
{
}

CDirectedObservationType::CDirectedObservationType(CDirectedObservationType const& other)
: ::indoorgmlcore::gml::CObservationType(other.GetNode())
, direction(*this)	// "direction"
{
}

void CDirectedObservationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedObservationType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectedTopoSolidPropertyType::CDirectedTopoSolidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TopoSolid(*this)	// "TopoSolid"
{
}

CDirectedTopoSolidPropertyType::CDirectedTopoSolidPropertyType(CDirectedTopoSolidPropertyType const& other)
: ElementType(other.GetNode())
, orientation(*this)	// "@orientation"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TopoSolid(*this)	// "TopoSolid"
{
}

void CDirectedTopoSolidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectedTopoSolidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectionDescriptionType::CDirectionDescriptionType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, compassPoint(*this)	// "compassPoint"
, keyword(*this)	// "keyword"
, description(*this)	// "description"
, reference(*this)	// "reference"
{
}

CDirectionDescriptionType::CDirectionDescriptionType(CDirectionDescriptionType const& other)
: ElementType(other.GetNode())
, compassPoint(*this)	// "compassPoint"
, keyword(*this)	// "keyword"
, description(*this)	// "description"
, reference(*this)	// "reference"
{
}

void CDirectionDescriptionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectionDescriptionType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectionPropertyType::CDirectionPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectionVector(*this)	// "DirectionVector"
, DirectionDescription(*this)	// "DirectionDescription"
, CompassPoint(*this)	// "CompassPoint"
, DirectionKeyword(*this)	// "DirectionKeyword"
, DirectionString(*this)	// "DirectionString"
{
}

CDirectionPropertyType::CDirectionPropertyType(CDirectionPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectionVector(*this)	// "DirectionVector"
, DirectionDescription(*this)	// "DirectionDescription"
, CompassPoint(*this)	// "CompassPoint"
, DirectionKeyword(*this)	// "DirectionKeyword"
, DirectionString(*this)	// "DirectionString"
{
}

void CDirectionPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectionPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CDirectionVectorType::CDirectionVectorType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, vector(*this)	// "vector"
, horizontalAngle(*this)	// "horizontalAngle"
, verticalAngle(*this)	// "verticalAngle"
{
}

CDirectionVectorType::CDirectionVectorType(CDirectionVectorType const& other)
: ElementType(other.GetNode())
, vector(*this)	// "vector"
, horizontalAngle(*this)	// "horizontalAngle"
, verticalAngle(*this)	// "verticalAngle"
{
}

void CDirectionVectorType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DirectionVectorType"), _T("http://www.opengis.net/gml/3.2"));
}

CDiscreteCoverageType::CDiscreteCoverageType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoverageType(node)
, coverageFunction(*this)	// "coverageFunction"
{
}

CDiscreteCoverageType::CDiscreteCoverageType(CDiscreteCoverageType const& other)
: ::indoorgmlcore::gml::CAbstractCoverageType(other.GetNode())
, coverageFunction(*this)	// "coverageFunction"
{
}

void CDiscreteCoverageType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DiscreteCoverageType"), _T("http://www.opengis.net/gml/3.2"));
}

CDomainSetType::CDomainSetType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
{
}

CDomainSetType::CDomainSetType(CDomainSetType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
{
}

void CDomainSetType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DomainSetType"), _T("http://www.opengis.net/gml/3.2"));
}

CDynamicFeatureCollectionType::CDynamicFeatureCollectionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDynamicFeatureType(node)
, dynamicMembers(*this)	// "dynamicMembers"
{
}

CDynamicFeatureCollectionType::CDynamicFeatureCollectionType(CDynamicFeatureCollectionType const& other)
: ::indoorgmlcore::gml::CDynamicFeatureType(other.GetNode())
, dynamicMembers(*this)	// "dynamicMembers"
{
}

void CDynamicFeatureCollectionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DynamicFeatureCollectionType"), _T("http://www.opengis.net/gml/3.2"));
}

CDynamicFeatureMemberType::CDynamicFeatureMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
{
}

CDynamicFeatureMemberType::CDynamicFeatureMemberType(CDynamicFeatureMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
{
}

void CDynamicFeatureMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DynamicFeatureMemberType"), _T("http://www.opengis.net/gml/3.2"));
}

CDynamicFeatureType::CDynamicFeatureType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, validTime(*this)	// "validTime"
, history(*this)	// "history"
, track(*this)	// "track"
, dataSource(*this)	// "dataSource"
, dataSourceReference(*this)	// "dataSourceReference"
{
}

CDynamicFeatureType::CDynamicFeatureType(CDynamicFeatureType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, validTime(*this)	// "validTime"
, history(*this)	// "history"
, track(*this)	// "track"
, dataSource(*this)	// "dataSource"
, dataSourceReference(*this)	// "dataSourceReference"
{
}

void CDynamicFeatureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DynamicFeatureType"), _T("http://www.opengis.net/gml/3.2"));
}

CEdgeType::CEdgeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(node)
, aggregationType(*this)	// "@aggregationType"
, container(*this)	// "container"
, directedNode(*this)	// "directedNode"
, directedFace(*this)	// "directedFace"
, curveProperty(*this)	// "curveProperty"
{
}

CEdgeType::CEdgeType(CEdgeType const& other)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, container(*this)	// "container"
, directedNode(*this)	// "directedNode"
, directedFace(*this)	// "directedFace"
, curveProperty(*this)	// "curveProperty"
{
}

void CEdgeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EdgeType"), _T("http://www.opengis.net/gml/3.2"));
}

CEllipsoidPropertyType::CEllipsoidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Ellipsoid(*this)	// "Ellipsoid"
{
}

CEllipsoidPropertyType::CEllipsoidPropertyType(CEllipsoidPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Ellipsoid(*this)	// "Ellipsoid"
{
}

void CEllipsoidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EllipsoidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CEllipsoidType::CEllipsoidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, semiMajorAxis(*this)	// "semiMajorAxis"
, secondDefiningParameter(*this)	// "secondDefiningParameter"
{
}

CEllipsoidType::CEllipsoidType(CEllipsoidType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, semiMajorAxis(*this)	// "semiMajorAxis"
, secondDefiningParameter(*this)	// "secondDefiningParameter"
{
}

void CEllipsoidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EllipsoidType"), _T("http://www.opengis.net/gml/3.2"));
}

CEllipsoidalCSPropertyType::CEllipsoidalCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
{
}

CEllipsoidalCSPropertyType::CEllipsoidalCSPropertyType(CEllipsoidalCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
{
}

void CEllipsoidalCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EllipsoidalCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CEllipsoidalCSType::CEllipsoidalCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CEllipsoidalCSType::CEllipsoidalCSType(CEllipsoidalCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CEllipsoidalCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EllipsoidalCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CEngineeringCRSPropertyType::CEngineeringCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringCRS(*this)	// "EngineeringCRS"
{
}

CEngineeringCRSPropertyType::CEngineeringCRSPropertyType(CEngineeringCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringCRS(*this)	// "EngineeringCRS"
{
}

void CEngineeringCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EngineeringCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CEngineeringCRSType::CEngineeringCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, affineCS(*this)	// "affineCS"
, usesAffineCS(*this)	// "usesAffineCS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, cylindricalCS(*this)	// "cylindricalCS"
, linearCS(*this)	// "linearCS"
, polarCS(*this)	// "polarCS"
, sphericalCS(*this)	// "sphericalCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, userDefinedCS(*this)	// "userDefinedCS"
, coordinateSystem(*this)	// "coordinateSystem"
, usesCS(*this)	// "usesCS"
, engineeringDatum(*this)	// "engineeringDatum"
, usesEngineeringDatum(*this)	// "usesEngineeringDatum"
{
}

CEngineeringCRSType::CEngineeringCRSType(CEngineeringCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, affineCS(*this)	// "affineCS"
, usesAffineCS(*this)	// "usesAffineCS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, cylindricalCS(*this)	// "cylindricalCS"
, linearCS(*this)	// "linearCS"
, polarCS(*this)	// "polarCS"
, sphericalCS(*this)	// "sphericalCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, userDefinedCS(*this)	// "userDefinedCS"
, coordinateSystem(*this)	// "coordinateSystem"
, usesCS(*this)	// "usesCS"
, engineeringDatum(*this)	// "engineeringDatum"
, usesEngineeringDatum(*this)	// "usesEngineeringDatum"
{
}

void CEngineeringCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EngineeringCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CEngineeringDatumPropertyType::CEngineeringDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringDatum(*this)	// "EngineeringDatum"
{
}

CEngineeringDatumPropertyType::CEngineeringDatumPropertyType(CEngineeringDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EngineeringDatum(*this)	// "EngineeringDatum"
{
}

void CEngineeringDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EngineeringDatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CEngineeringDatumType::CEngineeringDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractDatumType(node)
{
}

CEngineeringDatumType::CEngineeringDatumType(CEngineeringDatumType const& other)
: ::indoorgmlcore::gml::CAbstractDatumType(other.GetNode())
{
}

void CEngineeringDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EngineeringDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CEnvelopeType::CEnvelopeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
, lowerCorner(*this)	// "lowerCorner"
, upperCorner(*this)	// "upperCorner"
, pos(*this)	// "pos"
, coordinates(*this)	// "coordinates"
{
}

CEnvelopeType::CEnvelopeType(CEnvelopeType const& other)
: ElementType(other.GetNode())
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
, lowerCorner(*this)	// "lowerCorner"
, upperCorner(*this)	// "upperCorner"
, pos(*this)	// "pos"
, coordinates(*this)	// "coordinates"
{
}

void CEnvelopeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EnvelopeType"), _T("http://www.opengis.net/gml/3.2"));
}

CEnvelopeWithTimePeriodType::CEnvelopeWithTimePeriodType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CEnvelopeType(node)
, frame(*this)	// "@frame"
, beginPosition(*this)	// "beginPosition"
, endPosition(*this)	// "endPosition"
{
}

CEnvelopeWithTimePeriodType::CEnvelopeWithTimePeriodType(CEnvelopeWithTimePeriodType const& other)
: ::indoorgmlcore::gml::CEnvelopeType(other.GetNode())
, frame(*this)	// "@frame"
, beginPosition(*this)	// "beginPosition"
, endPosition(*this)	// "endPosition"
{
}

void CEnvelopeWithTimePeriodType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EnvelopeWithTimePeriodType"), _T("http://www.opengis.net/gml/3.2"));
}

CFaceOrTopoSolidPropertyType::CFaceOrTopoSolidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Face(*this)	// "Face"
, TopoSolid(*this)	// "TopoSolid"
{
}

CFaceOrTopoSolidPropertyType::CFaceOrTopoSolidPropertyType(CFaceOrTopoSolidPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Face(*this)	// "Face"
, TopoSolid(*this)	// "TopoSolid"
{
}

void CFaceOrTopoSolidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FaceOrTopoSolidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CFaceType::CFaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(node)
, aggregationType(*this)	// "@aggregationType"
, universal(*this)	// "@universal"
, isolated(*this)	// "isolated"
, directedEdge(*this)	// "directedEdge"
, directedTopoSolid(*this)	// "directedTopoSolid"
, surfaceProperty(*this)	// "surfaceProperty"
{
}

CFaceType::CFaceType(CFaceType const& other)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, universal(*this)	// "@universal"
, isolated(*this)	// "isolated"
, directedEdge(*this)	// "directedEdge"
, directedTopoSolid(*this)	// "directedTopoSolid"
, surfaceProperty(*this)	// "surfaceProperty"
{
}

void CFaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CFeatureArrayPropertyType::CFeatureArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

CFeatureArrayPropertyType::CFeatureArrayPropertyType(CFeatureArrayPropertyType const& other)
: ElementType(other.GetNode())
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

void CFeatureArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FeatureArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CFeatureCollectionType::CFeatureCollectionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureCollectionType(node)
{
}

CFeatureCollectionType::CFeatureCollectionType(CFeatureCollectionType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureCollectionType(other.GetNode())
{
}

void CFeatureCollectionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FeatureCollectionType"), _T("http://www.opengis.net/gml/3.2"));
}

CFeaturePropertyType::CFeaturePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

CFeaturePropertyType::CFeaturePropertyType(CFeaturePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

void CFeaturePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FeaturePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CFileType::CFileType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, rangeParameters(*this)	// "rangeParameters"
, fileName(*this)	// "fileName"
, fileReference(*this)	// "fileReference"
, fileStructure(*this)	// "fileStructure"
, mimeType(*this)	// "mimeType"
, compression(*this)	// "compression"
{
}

CFileType::CFileType(CFileType const& other)
: ElementType(other.GetNode())
, rangeParameters(*this)	// "rangeParameters"
, fileName(*this)	// "fileName"
, fileReference(*this)	// "fileReference"
, fileStructure(*this)	// "fileStructure"
, mimeType(*this)	// "mimeType"
, compression(*this)	// "compression"
{
}

void CFileType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FileType"), _T("http://www.opengis.net/gml/3.2"));
}

CFormulaType::CFormulaType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, a(*this)	// "a"
, b(*this)	// "b"
, c(*this)	// "c"
, d(*this)	// "d"
{
}

CFormulaType::CFormulaType(CFormulaType const& other)
: ElementType(other.GetNode())
, a(*this)	// "a"
, b(*this)	// "b"
, c(*this)	// "c"
, d(*this)	// "d"
{
}

void CFormulaType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("FormulaType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeneralConversionPropertyType::CGeneralConversionPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
{
}

CGeneralConversionPropertyType::CGeneralConversionPropertyType(CGeneralConversionPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
{
}

void CGeneralConversionPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeneralConversionPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeneralTransformationPropertyType::CGeneralTransformationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transformation(*this)	// "Transformation"
{
}

CGeneralTransformationPropertyType::CGeneralTransformationPropertyType(CGeneralTransformationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transformation(*this)	// "Transformation"
{
}

void CGeneralTransformationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeneralTransformationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGenericMetaDataType::CGenericMetaDataType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractMetaDataType(node)
{
}

CGenericMetaDataType::CGenericMetaDataType(CGenericMetaDataType const& other)
: ::indoorgmlcore::gml::CAbstractMetaDataType(other.GetNode())
{
}

void CGenericMetaDataType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GenericMetaDataType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeocentricCRSPropertyType::CGeocentricCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeocentricCRS(*this)	// "GeocentricCRS"
{
}

CGeocentricCRSPropertyType::CGeocentricCRSPropertyType(CGeocentricCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeocentricCRS(*this)	// "GeocentricCRS"
{
}

void CGeocentricCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeocentricCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeocentricCRSType::CGeocentricCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, usesCartesianCS(*this)	// "usesCartesianCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

CGeocentricCRSType::CGeocentricCRSType(CGeocentricCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, usesCartesianCS(*this)	// "usesCartesianCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

void CGeocentricCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeocentricCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodesicStringType::CGeodesicStringType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}

CGeodesicStringType::CGeodesicStringType(CGeodesicStringType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}

void CGeodesicStringType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodesicStringType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodesicType::CGeodesicType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CGeodesicStringType(node)
{
}

CGeodesicType::CGeodesicType(CGeodesicType const& other)
: ::indoorgmlcore::gml::CGeodesicStringType(other.GetNode())
{
}

void CGeodesicType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodesicType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodeticCRSPropertyType::CGeodeticCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeodeticCRS(*this)	// "GeodeticCRS"
{
}

CGeodeticCRSPropertyType::CGeodeticCRSPropertyType(CGeodeticCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeodeticCRS(*this)	// "GeodeticCRS"
{
}

void CGeodeticCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodeticCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodeticCRSType::CGeodeticCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, ellipsoidalCS(*this)	// "ellipsoidalCS"
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, sphericalCS(*this)	// "sphericalCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, geodeticDatum(*this)	// "geodeticDatum"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

CGeodeticCRSType::CGeodeticCRSType(CGeodeticCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, ellipsoidalCS(*this)	// "ellipsoidalCS"
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, sphericalCS(*this)	// "sphericalCS"
, usesSphericalCS(*this)	// "usesSphericalCS"
, geodeticDatum(*this)	// "geodeticDatum"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

void CGeodeticCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodeticCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodeticDatumPropertyType::CGeodeticDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeodeticDatum(*this)	// "GeodeticDatum"
{
}

CGeodeticDatumPropertyType::CGeodeticDatumPropertyType(CGeodeticDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeodeticDatum(*this)	// "GeodeticDatum"
{
}

void CGeodeticDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodeticDatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeodeticDatumType::CGeodeticDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractDatumType(node)
, primeMeridian(*this)	// "primeMeridian"
, usesPrimeMeridian(*this)	// "usesPrimeMeridian"
, ellipsoid(*this)	// "ellipsoid"
, usesEllipsoid(*this)	// "usesEllipsoid"
{
}

CGeodeticDatumType::CGeodeticDatumType(CGeodeticDatumType const& other)
: ::indoorgmlcore::gml::CAbstractDatumType(other.GetNode())
, primeMeridian(*this)	// "primeMeridian"
, usesPrimeMeridian(*this)	// "usesPrimeMeridian"
, ellipsoid(*this)	// "ellipsoid"
, usesEllipsoid(*this)	// "usesEllipsoid"
{
}

void CGeodeticDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeodeticDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeographicCRSPropertyType::CGeographicCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeographicCRS(*this)	// "GeographicCRS"
{
}

CGeographicCRSPropertyType::CGeographicCRSPropertyType(CGeographicCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeographicCRS(*this)	// "GeographicCRS"
{
}

void CGeographicCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeographicCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeographicCRSType::CGeographicCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

CGeographicCRSType::CGeographicCRSType(CGeographicCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
{
}

void CGeographicCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeographicCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeometricComplexPropertyType::CGeometricComplexPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeometricComplex(*this)	// "GeometricComplex"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeSolid(*this)	// "CompositeSolid"
{
}

CGeometricComplexPropertyType::CGeometricComplexPropertyType(CGeometricComplexPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, GeometricComplex(*this)	// "GeometricComplex"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeSolid(*this)	// "CompositeSolid"
{
}

void CGeometricComplexPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeometricComplexPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeometricComplexType::CGeometricComplexType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometryType(node)
, aggregationType(*this)	// "@aggregationType"
, element(*this)	// "element"
{
}

CGeometricComplexType::CGeometricComplexType(CGeometricComplexType const& other)
: ::indoorgmlcore::gml::CAbstractGeometryType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, element(*this)	// "element"
{
}

void CGeometricComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeometricComplexType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeometricPrimitivePropertyType::CGeometricPrimitivePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CGeometricPrimitivePropertyType::CGeometricPrimitivePropertyType(CGeometricPrimitivePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CGeometricPrimitivePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeometricPrimitivePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeometryArrayPropertyType::CGeometryArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CGeometryArrayPropertyType::CGeometryArrayPropertyType(CGeometryArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CGeometryArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeometryArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGeometryPropertyType::CGeometryPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CGeometryPropertyType::CGeometryPropertyType(CGeometryPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CGeometryPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GeometryPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CGridEnvelopeType::CGridEnvelopeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, low(*this)	// "low"
, high(*this)	// "high"
{
}

CGridEnvelopeType::CGridEnvelopeType(CGridEnvelopeType const& other)
: ElementType(other.GetNode())
, low(*this)	// "low"
, high(*this)	// "high"
{
}

void CGridEnvelopeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GridEnvelopeType"), _T("http://www.opengis.net/gml/3.2"));
}

CGridFunctionType::CGridFunctionType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, sequenceRule(*this)	// "sequenceRule"
, startPoint(*this)	// "startPoint"
{
}

CGridFunctionType::CGridFunctionType(CGridFunctionType const& other)
: ElementType(other.GetNode())
, sequenceRule(*this)	// "sequenceRule"
, startPoint(*this)	// "startPoint"
{
}

void CGridFunctionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GridFunctionType"), _T("http://www.opengis.net/gml/3.2"));
}

CGridLengthType::CGridLengthType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CGridLengthType::CGridLengthType(CGridLengthType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CGridLengthType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GridLengthType"), _T("http://www.opengis.net/gml/3.2"));
}

CGridLimitsType::CGridLimitsType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, GridEnvelope(*this)	// "GridEnvelope"
{
}

CGridLimitsType::CGridLimitsType(CGridLimitsType const& other)
: ElementType(other.GetNode())
, GridEnvelope(*this)	// "GridEnvelope"
{
}

void CGridLimitsType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GridLimitsType"), _T("http://www.opengis.net/gml/3.2"));
}

CGridType::CGridType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometryType(node)
, dimension(*this)	// "@dimension"
, limits(*this)	// "limits"
, axisLabels2(*this)	// "axisLabels"
, axisName(*this)	// "axisName"
{
}

CGridType::CGridType(CGridType const& other)
: ::indoorgmlcore::gml::CAbstractGeometryType(other.GetNode())
, dimension(*this)	// "@dimension"
, limits(*this)	// "limits"
, axisLabels2(*this)	// "axisLabels"
, axisName(*this)	// "axisName"
{
}

void CGridType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GridType"), _T("http://www.opengis.net/gml/3.2"));
}

CHistoryPropertyType::CHistoryPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
{
}

CHistoryPropertyType::CHistoryPropertyType(CHistoryPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
{
}

void CHistoryPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("HistoryPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CIdentifiedObjectType::CIdentifiedObjectType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
{
}

CIdentifiedObjectType::CIdentifiedObjectType(CIdentifiedObjectType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
{
}

void CIdentifiedObjectType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("IdentifiedObjectType"), _T("http://www.opengis.net/gml/3.2"));
}

CImageCRSPropertyType::CImageCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ImageCRS(*this)	// "ImageCRS"
{
}

CImageCRSPropertyType::CImageCRSPropertyType(CImageCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ImageCRS(*this)	// "ImageCRS"
{
}

void CImageCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ImageCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CImageCRSType::CImageCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, affineCS(*this)	// "affineCS"
, usesAffineCS(*this)	// "usesAffineCS"
, usesObliqueCartesianCS(*this)	// "usesObliqueCartesianCS"
, imageDatum(*this)	// "imageDatum"
, usesImageDatum(*this)	// "usesImageDatum"
{
}

CImageCRSType::CImageCRSType(CImageCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, affineCS(*this)	// "affineCS"
, usesAffineCS(*this)	// "usesAffineCS"
, usesObliqueCartesianCS(*this)	// "usesObliqueCartesianCS"
, imageDatum(*this)	// "imageDatum"
, usesImageDatum(*this)	// "usesImageDatum"
{
}

void CImageCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ImageCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CImageDatumPropertyType::CImageDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ImageDatum(*this)	// "ImageDatum"
{
}

CImageDatumPropertyType::CImageDatumPropertyType(CImageDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ImageDatum(*this)	// "ImageDatum"
{
}

void CImageDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ImageDatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CImageDatumType::CImageDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractDatumType(node)
, pixelInCell(*this)	// "pixelInCell"
{
}

CImageDatumType::CImageDatumType(CImageDatumType const& other)
: ::indoorgmlcore::gml::CAbstractDatumType(other.GetNode())
, pixelInCell(*this)	// "pixelInCell"
{
}

void CImageDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ImageDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CIncrementOrder::CIncrementOrder(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CIncrementOrder::CIncrementOrder(CIncrementOrder const& other)
: TypeBase(other.GetNode())
{
}


CIndirectEntryType::CIndirectEntryType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, DefinitionProxy(*this)	// "DefinitionProxy"
{
}

CIndirectEntryType::CIndirectEntryType(CIndirectEntryType const& other)
: ElementType(other.GetNode())
, DefinitionProxy(*this)	// "DefinitionProxy"
{
}

void CIndirectEntryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("IndirectEntryType"), _T("http://www.opengis.net/gml/3.2"));
}

CInlinePropertyType::CInlinePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
{
}

CInlinePropertyType::CInlinePropertyType(CInlinePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
{
}

void CInlinePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InlinePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CKnotPropertyType::CKnotPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Knot(*this)	// "Knot"
{
}

CKnotPropertyType::CKnotPropertyType(CKnotPropertyType const& other)
: ElementType(other.GetNode())
, Knot(*this)	// "Knot"
{
}

void CKnotPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("KnotPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CKnotType::CKnotType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, value2(*this)	// "value"
, multiplicity(*this)	// "multiplicity"
, weight(*this)	// "weight"
{
}

CKnotType::CKnotType(CKnotType const& other)
: ElementType(other.GetNode())
, value2(*this)	// "value"
, multiplicity(*this)	// "multiplicity"
, weight(*this)	// "weight"
{
}

void CKnotType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("KnotType"), _T("http://www.opengis.net/gml/3.2"));
}

CKnotTypesType::CKnotTypesType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CKnotTypesType::CKnotTypesType(CKnotTypesType const& other)
: TypeBase(other.GetNode())
{
}


CLengthType::CLengthType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CLengthType::CLengthType(CLengthType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CLengthType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LengthType"), _T("http://www.opengis.net/gml/3.2"));
}

CLineStringSegmentArrayPropertyType::CLineStringSegmentArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, LineStringSegment(*this)	// "LineStringSegment"
{
}

CLineStringSegmentArrayPropertyType::CLineStringSegmentArrayPropertyType(CLineStringSegmentArrayPropertyType const& other)
: ElementType(other.GetNode())
, LineStringSegment(*this)	// "LineStringSegment"
{
}

void CLineStringSegmentArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LineStringSegmentArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CLineStringSegmentType::CLineStringSegmentType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, interpolation(*this)	// "@interpolation"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

CLineStringSegmentType::CLineStringSegmentType(CLineStringSegmentType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

void CLineStringSegmentType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LineStringSegmentType"), _T("http://www.opengis.net/gml/3.2"));
}

CLineStringType::CLineStringType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveType(node)
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

CLineStringType::CLineStringType(CLineStringType const& other)
: ::indoorgmlcore::gml::CAbstractCurveType(other.GetNode())
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

void CLineStringType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LineStringType"), _T("http://www.opengis.net/gml/3.2"));
}

CLinearCSPropertyType::CLinearCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, LinearCS(*this)	// "LinearCS"
{
}

CLinearCSPropertyType::CLinearCSPropertyType(CLinearCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, LinearCS(*this)	// "LinearCS"
{
}

void CLinearCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LinearCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CLinearCSType::CLinearCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CLinearCSType::CLinearCSType(CLinearCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CLinearCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LinearCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CLinearRingPropertyType::CLinearRingPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, LinearRing(*this)	// "LinearRing"
{
}

CLinearRingPropertyType::CLinearRingPropertyType(CLinearRingPropertyType const& other)
: ElementType(other.GetNode())
, LinearRing(*this)	// "LinearRing"
{
}

void CLinearRingPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LinearRingPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CLinearRingType::CLinearRingType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractRingType(node)
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

CLinearRingType::CLinearRingType(CLinearRingType const& other)
: ::indoorgmlcore::gml::CAbstractRingType(other.GetNode())
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, posList(*this)	// "posList"
, coordinates(*this)	// "coordinates"
{
}

void CLinearRingType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LinearRingType"), _T("http://www.opengis.net/gml/3.2"));
}

CLocationPropertyType::CLocationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, LocationKeyWord(*this)	// "LocationKeyWord"
, LocationString(*this)	// "LocationString"
, Null(*this)	// "Null"
{
}

CLocationPropertyType::CLocationPropertyType(CLocationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, LocationKeyWord(*this)	// "LocationKeyWord"
, LocationString(*this)	// "LocationString"
, Null(*this)	// "Null"
{
}

void CLocationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LocationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMappingRuleType::CMappingRuleType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, ruleDefinition(*this)	// "ruleDefinition"
, ruleReference(*this)	// "ruleReference"
{
}

CMappingRuleType::CMappingRuleType(CMappingRuleType const& other)
: ElementType(other.GetNode())
, ruleDefinition(*this)	// "ruleDefinition"
, ruleReference(*this)	// "ruleReference"
{
}

void CMappingRuleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MappingRuleType"), _T("http://www.opengis.net/gml/3.2"));
}

CMeasureListType::CMeasureListType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CdoubleListType(node)
, uom(*this)	// "@uom"
{
}

CMeasureListType::CMeasureListType(CMeasureListType const& other)
: ::indoorgmlcore::gml::CdoubleListType(other.GetNode())
, uom(*this)	// "@uom"
{
}

void CMeasureListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MeasureListType"), _T("http://www.opengis.net/gml/3.2"));
}

CMeasureOrNilReasonListType::CMeasureOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CdoubleOrNilReasonListType(node)
, uom(*this)	// "@uom"
{
}

CMeasureOrNilReasonListType::CMeasureOrNilReasonListType(CMeasureOrNilReasonListType const& other)
: ::indoorgmlcore::gml::CdoubleOrNilReasonListType(other.GetNode())
, uom(*this)	// "@uom"
{
}

void CMeasureOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MeasureOrNilReasonListType"), _T("http://www.opengis.net/gml/3.2"));
}

CMeasureType::CMeasureType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CdoubleType(node)
, uom(*this)	// "@uom"
{
}

CMeasureType::CMeasureType(CMeasureType const& other)
: ::indoorgmlcore::xs::CdoubleType(other.GetNode())
, uom(*this)	// "@uom"
{
}

void CMeasureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MeasureType"), _T("http://www.opengis.net/gml/3.2"));
}

CMetaDataPropertyType::CMetaDataPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, about(*this)	// "@about"
, GenericMetaData(*this)	// "GenericMetaData"
{
}

CMetaDataPropertyType::CMetaDataPropertyType(CMetaDataPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, about(*this)	// "@about"
, GenericMetaData(*this)	// "GenericMetaData"
{
}

void CMetaDataPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MetaDataPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMovingObjectStatusType::CMovingObjectStatusType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeSliceType(node)
, position(*this)	// "position"
, pos(*this)	// "pos"
, locationName(*this)	// "locationName"
, locationReference(*this)	// "locationReference"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
, speed(*this)	// "speed"
, bearing(*this)	// "bearing"
, acceleration(*this)	// "acceleration"
, elevation(*this)	// "elevation"
, status(*this)	// "status"
, statusReference(*this)	// "statusReference"
{
}

CMovingObjectStatusType::CMovingObjectStatusType(CMovingObjectStatusType const& other)
: ::indoorgmlcore::gml::CAbstractTimeSliceType(other.GetNode())
, position(*this)	// "position"
, pos(*this)	// "pos"
, locationName(*this)	// "locationName"
, locationReference(*this)	// "locationReference"
, location(*this)	// "location"
, priorityLocation(*this)	// "priorityLocation"
, speed(*this)	// "speed"
, bearing(*this)	// "bearing"
, acceleration(*this)	// "acceleration"
, elevation(*this)	// "elevation"
, status(*this)	// "status"
, statusReference(*this)	// "statusReference"
{
}

void CMovingObjectStatusType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MovingObjectStatusType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiCurvePropertyType::CMultiCurvePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiCurve(*this)	// "MultiCurve"
{
}

CMultiCurvePropertyType::CMultiCurvePropertyType(CMultiCurvePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiCurve(*this)	// "MultiCurve"
{
}

void CMultiCurvePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiCurvePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiCurveType::CMultiCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(node)
, curveMember(*this)	// "curveMember"
, curveMembers(*this)	// "curveMembers"
{
}

CMultiCurveType::CMultiCurveType(CMultiCurveType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(other.GetNode())
, curveMember(*this)	// "curveMember"
, curveMembers(*this)	// "curveMembers"
{
}

void CMultiCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiGeometryPropertyType::CMultiGeometryPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
{
}

CMultiGeometryPropertyType::CMultiGeometryPropertyType(CMultiGeometryPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
{
}

void CMultiGeometryPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiGeometryPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiGeometryType::CMultiGeometryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(node)
, geometryMember(*this)	// "geometryMember"
, geometryMembers(*this)	// "geometryMembers"
{
}

CMultiGeometryType::CMultiGeometryType(CMultiGeometryType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(other.GetNode())
, geometryMember(*this)	// "geometryMember"
, geometryMembers(*this)	// "geometryMembers"
{
}

void CMultiGeometryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiGeometryType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiPointPropertyType::CMultiPointPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiPoint(*this)	// "MultiPoint"
{
}

CMultiPointPropertyType::CMultiPointPropertyType(CMultiPointPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiPoint(*this)	// "MultiPoint"
{
}

void CMultiPointPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiPointPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiPointType::CMultiPointType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(node)
, pointMember(*this)	// "pointMember"
, pointMembers(*this)	// "pointMembers"
{
}

CMultiPointType::CMultiPointType(CMultiPointType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(other.GetNode())
, pointMember(*this)	// "pointMember"
, pointMembers(*this)	// "pointMembers"
{
}

void CMultiPointType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiPointType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiSolidPropertyType::CMultiSolidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiSolid(*this)	// "MultiSolid"
{
}

CMultiSolidPropertyType::CMultiSolidPropertyType(CMultiSolidPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiSolid(*this)	// "MultiSolid"
{
}

void CMultiSolidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiSolidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiSolidType::CMultiSolidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(node)
, solidMember(*this)	// "solidMember"
, solidMembers(*this)	// "solidMembers"
{
}

CMultiSolidType::CMultiSolidType(CMultiSolidType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(other.GetNode())
, solidMember(*this)	// "solidMember"
, solidMembers(*this)	// "solidMembers"
{
}

void CMultiSolidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiSolidType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiSurfacePropertyType::CMultiSurfacePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiSurface(*this)	// "MultiSurface"
{
}

CMultiSurfacePropertyType::CMultiSurfacePropertyType(CMultiSurfacePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, MultiSurface(*this)	// "MultiSurface"
{
}

void CMultiSurfacePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiSurfacePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CMultiSurfaceType::CMultiSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(node)
, surfaceMember(*this)	// "surfaceMember"
, surfaceMembers(*this)	// "surfaceMembers"
{
}

CMultiSurfaceType::CMultiSurfaceType(CMultiSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricAggregateType(other.GetNode())
, surfaceMember(*this)	// "surfaceMember"
, surfaceMembers(*this)	// "surfaceMembers"
{
}

void CMultiSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CNCNameList::CNCNameList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNCNameList::CNCNameList(CNCNameList const& other)
: TypeBase(other.GetNode())
{
}


CNameList::CNameList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNameList::CNameList(CNameList const& other)
: TypeBase(other.GetNode())
{
}


CNameOrNilReason::CNameOrNilReason(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNameOrNilReason::CNameOrNilReason(CNameOrNilReason const& other)
: TypeBase(other.GetNode())
{
}


CNameOrNilReasonList::CNameOrNilReasonList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNameOrNilReasonList::CNameOrNilReasonList(CNameOrNilReasonList const& other)
: TypeBase(other.GetNode())
{
}


CNilReasonEnumeration::CNilReasonEnumeration(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNilReasonEnumeration::CNilReasonEnumeration(CNilReasonEnumeration const& other)
: TypeBase(other.GetNode())
{
}


CNilReasonType::CNilReasonType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNilReasonType::CNilReasonType(CNilReasonType const& other)
: TypeBase(other.GetNode())
{
}


CNodeOrEdgePropertyType::CNodeOrEdgePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
, Edge(*this)	// "Edge"
{
}

CNodeOrEdgePropertyType::CNodeOrEdgePropertyType(CNodeOrEdgePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
, Edge(*this)	// "Edge"
{
}

void CNodeOrEdgePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NodeOrEdgePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CNodePropertyType::CNodePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
{
}

CNodePropertyType::CNodePropertyType(CNodePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Node(*this)	// "Node"
{
}

void CNodePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NodePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CNodeType::CNodeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(node)
, aggregationType(*this)	// "@aggregationType"
, container(*this)	// "container"
, directedEdge(*this)	// "directedEdge"
, pointProperty(*this)	// "pointProperty"
{
}

CNodeType::CNodeType(CNodeType const& other)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, container(*this)	// "container"
, directedEdge(*this)	// "directedEdge"
, pointProperty(*this)	// "pointProperty"
{
}

void CNodeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NodeType"), _T("http://www.opengis.net/gml/3.2"));
}

CObliqueCartesianCSPropertyType::CObliqueCartesianCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
{
}

CObliqueCartesianCSPropertyType::CObliqueCartesianCSPropertyType(CObliqueCartesianCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
{
}

void CObliqueCartesianCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ObliqueCartesianCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CObliqueCartesianCSType::CObliqueCartesianCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CObliqueCartesianCSType::CObliqueCartesianCSType(CObliqueCartesianCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CObliqueCartesianCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ObliqueCartesianCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CObservationType::CObservationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, validTime(*this)	// "validTime"
, using2(*this)	// "using"
, target(*this)	// "target"
, subject(*this)	// "subject"
, resultOf(*this)	// "resultOf"
{
}

CObservationType::CObservationType(CObservationType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, validTime(*this)	// "validTime"
, using2(*this)	// "using"
, target(*this)	// "target"
, subject(*this)	// "subject"
, resultOf(*this)	// "resultOf"
{
}

void CObservationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ObservationType"), _T("http://www.opengis.net/gml/3.2"));
}

COffsetCurveType::COffsetCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(node)
, offsetBase(*this)	// "offsetBase"
, distance(*this)	// "distance"
, refDirection(*this)	// "refDirection"
{
}

COffsetCurveType::COffsetCurveType(COffsetCurveType const& other)
: ::indoorgmlcore::gml::CAbstractCurveSegmentType(other.GetNode())
, offsetBase(*this)	// "offsetBase"
, distance(*this)	// "distance"
, refDirection(*this)	// "refDirection"
{
}

void COffsetCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OffsetCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationMethodPropertyType::COperationMethodPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationMethod(*this)	// "OperationMethod"
{
}

COperationMethodPropertyType::COperationMethodPropertyType(COperationMethodPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationMethod(*this)	// "OperationMethod"
{
}

void COperationMethodPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationMethodPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationMethodType::COperationMethodType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, formulaCitation(*this)	// "formulaCitation"
, formula(*this)	// "formula"
, methodFormula(*this)	// "methodFormula"
, sourceDimensions(*this)	// "sourceDimensions"
, targetDimensions(*this)	// "targetDimensions"
, parameter(*this)	// "parameter"
, generalOperationParameter(*this)	// "generalOperationParameter"
, includesParameter(*this)	// "includesParameter"
, usesParameter(*this)	// "usesParameter"
{
}

COperationMethodType::COperationMethodType(COperationMethodType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, formulaCitation(*this)	// "formulaCitation"
, formula(*this)	// "formula"
, methodFormula(*this)	// "methodFormula"
, sourceDimensions(*this)	// "sourceDimensions"
, targetDimensions(*this)	// "targetDimensions"
, parameter(*this)	// "parameter"
, generalOperationParameter(*this)	// "generalOperationParameter"
, includesParameter(*this)	// "includesParameter"
, usesParameter(*this)	// "usesParameter"
{
}

void COperationMethodType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationMethodType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationParameterGroupPropertyType::COperationParameterGroupPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
{
}

COperationParameterGroupPropertyType::COperationParameterGroupPropertyType(COperationParameterGroupPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
{
}

void COperationParameterGroupPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationParameterGroupPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationParameterGroupType::COperationParameterGroupType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralOperationParameterType(node)
, maximumOccurs(*this)	// "maximumOccurs"
, parameter(*this)	// "parameter"
, generalOperationParameter(*this)	// "generalOperationParameter"
, includesParameter(*this)	// "includesParameter"
, usesParameter(*this)	// "usesParameter"
{
}

COperationParameterGroupType::COperationParameterGroupType(COperationParameterGroupType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralOperationParameterType(other.GetNode())
, maximumOccurs(*this)	// "maximumOccurs"
, parameter(*this)	// "parameter"
, generalOperationParameter(*this)	// "generalOperationParameter"
, includesParameter(*this)	// "includesParameter"
, usesParameter(*this)	// "usesParameter"
{
}

void COperationParameterGroupType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationParameterGroupType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationParameterPropertyType::COperationParameterPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameter(*this)	// "OperationParameter"
{
}

COperationParameterPropertyType::COperationParameterPropertyType(COperationParameterPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, OperationParameter(*this)	// "OperationParameter"
{
}

void COperationParameterPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationParameterPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationParameterType::COperationParameterType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralOperationParameterType(node)
{
}

COperationParameterType::COperationParameterType(COperationParameterType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralOperationParameterType(other.GetNode())
{
}

void COperationParameterType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationParameterType"), _T("http://www.opengis.net/gml/3.2"));
}

COperationPropertyType::COperationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
, Transformation(*this)	// "Transformation"
{
}

COperationPropertyType::COperationPropertyType(COperationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
, Transformation(*this)	// "Transformation"
{
}

void COperationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OperationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

COrientableCurveType::COrientableCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCurveType(node)
, orientation(*this)	// "@orientation"
, baseCurve(*this)	// "baseCurve"
{
}

COrientableCurveType::COrientableCurveType(COrientableCurveType const& other)
: ::indoorgmlcore::gml::CAbstractCurveType(other.GetNode())
, orientation(*this)	// "@orientation"
, baseCurve(*this)	// "baseCurve"
{
}

void COrientableCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrientableCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

COrientableSurfaceType::COrientableSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfaceType(node)
, orientation(*this)	// "@orientation"
, baseSurface(*this)	// "baseSurface"
{
}

COrientableSurfaceType::COrientableSurfaceType(COrientableSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractSurfaceType(other.GetNode())
, orientation(*this)	// "@orientation"
, baseSurface(*this)	// "baseSurface"
{
}

void COrientableSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrientableSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CParameterValueGroupType::CParameterValueGroupType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralParameterValueType(node)
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
, group(*this)	// "group"
, valuesOfGroup(*this)	// "valuesOfGroup"
{
}

CParameterValueGroupType::CParameterValueGroupType(CParameterValueGroupType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralParameterValueType(other.GetNode())
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
, group(*this)	// "group"
, valuesOfGroup(*this)	// "valuesOfGroup"
{
}

void CParameterValueGroupType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ParameterValueGroupType"), _T("http://www.opengis.net/gml/3.2"));
}

CParameterValueType::CParameterValueType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralParameterValueType(node)
, value2(*this)	// "value"
, dmsAngleValue(*this)	// "dmsAngleValue"
, stringValue(*this)	// "stringValue"
, integerValue(*this)	// "integerValue"
, booleanValue(*this)	// "booleanValue"
, valueList(*this)	// "valueList"
, integerValueList(*this)	// "integerValueList"
, valueFile(*this)	// "valueFile"
, operationParameter(*this)	// "operationParameter"
, valueOfParameter(*this)	// "valueOfParameter"
{
}

CParameterValueType::CParameterValueType(CParameterValueType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralParameterValueType(other.GetNode())
, value2(*this)	// "value"
, dmsAngleValue(*this)	// "dmsAngleValue"
, stringValue(*this)	// "stringValue"
, integerValue(*this)	// "integerValue"
, booleanValue(*this)	// "booleanValue"
, valueList(*this)	// "valueList"
, integerValueList(*this)	// "integerValueList"
, valueFile(*this)	// "valueFile"
, operationParameter(*this)	// "operationParameter"
, valueOfParameter(*this)	// "valueOfParameter"
{
}

void CParameterValueType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ParameterValueType"), _T("http://www.opengis.net/gml/3.2"));
}

CPassThroughOperationPropertyType::CPassThroughOperationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PassThroughOperation(*this)	// "PassThroughOperation"
{
}

CPassThroughOperationPropertyType::CPassThroughOperationPropertyType(CPassThroughOperationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PassThroughOperation(*this)	// "PassThroughOperation"
{
}

void CPassThroughOperationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PassThroughOperationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CPassThroughOperationType::CPassThroughOperationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateOperationType(node)
, aggregationType(*this)	// "@aggregationType"
, modifiedCoordinate(*this)	// "modifiedCoordinate"
, coordOperation(*this)	// "coordOperation"
, usesOperation(*this)	// "usesOperation"
, usesSingleOperation(*this)	// "usesSingleOperation"
{
}

CPassThroughOperationType::CPassThroughOperationType(CPassThroughOperationType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateOperationType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, modifiedCoordinate(*this)	// "modifiedCoordinate"
, coordOperation(*this)	// "coordOperation"
, usesOperation(*this)	// "usesOperation"
, usesSingleOperation(*this)	// "usesSingleOperation"
{
}

void CPassThroughOperationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PassThroughOperationType"), _T("http://www.opengis.net/gml/3.2"));
}

CPointArrayPropertyType::CPointArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, Point(*this)	// "Point"
{
}

CPointArrayPropertyType::CPointArrayPropertyType(CPointArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, Point(*this)	// "Point"
{
}

void CPointArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PointArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CPointPropertyType::CPointPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Point(*this)	// "Point"
{
}

CPointPropertyType::CPointPropertyType(CPointPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Point(*this)	// "Point"
{
}

void CPointPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PointPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CPointType::CPointType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(node)
, pos(*this)	// "pos"
, coordinates(*this)	// "coordinates"
{
}

CPointType::CPointType(CPointType const& other)
: ::indoorgmlcore::gml::CAbstractGeometricPrimitiveType(other.GetNode())
, pos(*this)	// "pos"
, coordinates(*this)	// "coordinates"
{
}

void CPointType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PointType"), _T("http://www.opengis.net/gml/3.2"));
}

CPolarCSPropertyType::CPolarCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PolarCS(*this)	// "PolarCS"
{
}

CPolarCSPropertyType::CPolarCSPropertyType(CPolarCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PolarCS(*this)	// "PolarCS"
{
}

void CPolarCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PolarCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CPolarCSType::CPolarCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CPolarCSType::CPolarCSType(CPolarCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CPolarCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PolarCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CPolygonPatchType::CPolygonPatchType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(node)
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

CPolygonPatchType::CPolygonPatchType(CPolygonPatchType const& other)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

void CPolygonPatchType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PolygonPatchType"), _T("http://www.opengis.net/gml/3.2"));
}

CPolygonType::CPolygonType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfaceType(node)
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

CPolygonType::CPolygonType(CPolygonType const& other)
: ::indoorgmlcore::gml::CAbstractSurfaceType(other.GetNode())
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

void CPolygonType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PolygonType"), _T("http://www.opengis.net/gml/3.2"));
}

CPrimeMeridianPropertyType::CPrimeMeridianPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PrimeMeridian(*this)	// "PrimeMeridian"
{
}

CPrimeMeridianPropertyType::CPrimeMeridianPropertyType(CPrimeMeridianPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PrimeMeridian(*this)	// "PrimeMeridian"
{
}

void CPrimeMeridianPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrimeMeridianPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CPrimeMeridianType::CPrimeMeridianType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CIdentifiedObjectType(node)
, greenwichLongitude(*this)	// "greenwichLongitude"
{
}

CPrimeMeridianType::CPrimeMeridianType(CPrimeMeridianType const& other)
: ::indoorgmlcore::gml::CIdentifiedObjectType(other.GetNode())
, greenwichLongitude(*this)	// "greenwichLongitude"
{
}

void CPrimeMeridianType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrimeMeridianType"), _T("http://www.opengis.net/gml/3.2"));
}

CPriorityLocationPropertyType::CPriorityLocationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CLocationPropertyType(node)
, priority(*this)	// "@priority"
{
}

CPriorityLocationPropertyType::CPriorityLocationPropertyType(CPriorityLocationPropertyType const& other)
: ::indoorgmlcore::gml::CLocationPropertyType(other.GetNode())
, priority(*this)	// "@priority"
{
}

void CPriorityLocationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PriorityLocationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CProcedurePropertyType::CProcedurePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

CProcedurePropertyType::CProcedurePropertyType(CProcedurePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
{
}

void CProcedurePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcedurePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CProjectedCRSPropertyType::CProjectedCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ProjectedCRS(*this)	// "ProjectedCRS"
{
}

CProjectedCRSPropertyType::CProjectedCRSPropertyType(CProjectedCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, ProjectedCRS(*this)	// "ProjectedCRS"
{
}

void CProjectedCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProjectedCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CProjectedCRSType::CProjectedCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralDerivedCRSType(node)
, baseGeodeticCRS(*this)	// "baseGeodeticCRS"
, baseGeographicCRS(*this)	// "baseGeographicCRS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
{
}

CProjectedCRSType::CProjectedCRSType(CProjectedCRSType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralDerivedCRSType(other.GetNode())
, baseGeodeticCRS(*this)	// "baseGeodeticCRS"
, baseGeographicCRS(*this)	// "baseGeographicCRS"
, cartesianCS(*this)	// "cartesianCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
{
}

void CProjectedCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProjectedCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CQNameList::CQNameList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CQNameList::CQNameList(CQNameList const& other)
: TypeBase(other.GetNode())
{
}


CQuantityExtentType::CQuantityExtentType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, uom(*this)	// "@uom"
{
}

CQuantityExtentType::CQuantityExtentType(CQuantityExtentType const& other)
: ElementType(other.GetNode())
, uom(*this)	// "@uom"
{
}

void CQuantityExtentType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("QuantityExtentType"), _T("http://www.opengis.net/gml/3.2"));
}

CQuantityPropertyType::CQuantityPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Quantity(*this)	// "Quantity"
{
}

CQuantityPropertyType::CQuantityPropertyType(CQuantityPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Quantity(*this)	// "Quantity"
{
}

void CQuantityPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("QuantityPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CRangeSetType::CRangeSetType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, ValueArray(*this)	// "ValueArray"
, BooleanList(*this)	// "BooleanList"
, CategoryList(*this)	// "CategoryList"
, CountList(*this)	// "CountList"
, QuantityList(*this)	// "QuantityList"
, DataBlock(*this)	// "DataBlock"
, File(*this)	// "File"
{
}

CRangeSetType::CRangeSetType(CRangeSetType const& other)
: ElementType(other.GetNode())
, ValueArray(*this)	// "ValueArray"
, BooleanList(*this)	// "BooleanList"
, CategoryList(*this)	// "CategoryList"
, CountList(*this)	// "CountList"
, QuantityList(*this)	// "QuantityList"
, DataBlock(*this)	// "DataBlock"
, File(*this)	// "File"
{
}

void CRangeSetType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RangeSetType"), _T("http://www.opengis.net/gml/3.2"));
}

CRectangleType::CRectangleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(node)
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
{
}

CRectangleType::CRectangleType(CRectangleType const& other)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
{
}

void CRectangleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RectangleType"), _T("http://www.opengis.net/gml/3.2"));
}

CRectifiedGridType::CRectifiedGridType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CGridType(node)
, origin(*this)	// "origin"
, offsetVector(*this)	// "offsetVector"
{
}

CRectifiedGridType::CRectifiedGridType(CRectifiedGridType const& other)
: ::indoorgmlcore::gml::CGridType(other.GetNode())
, origin(*this)	// "origin"
, offsetVector(*this)	// "offsetVector"
{
}

void CRectifiedGridType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RectifiedGridType"), _T("http://www.opengis.net/gml/3.2"));
}

CReferenceType::CReferenceType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

CReferenceType::CReferenceType(CReferenceType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

void CReferenceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferenceType"), _T("http://www.opengis.net/gml/3.2"));
}

CRelatedTimeType::CRelatedTimeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimePrimitivePropertyType(node)
, relativePosition(*this)	// "@relativePosition"
{
}

CRelatedTimeType::CRelatedTimeType(CRelatedTimeType const& other)
: ::indoorgmlcore::gml::CTimePrimitivePropertyType(other.GetNode())
, relativePosition(*this)	// "@relativePosition"
{
}

void CRelatedTimeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RelatedTimeType"), _T("http://www.opengis.net/gml/3.2"));
}

CResultType::CResultType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

CResultType::CResultType(CResultType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

void CResultType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResultType"), _T("http://www.opengis.net/gml/3.2"));
}

CRingPropertyType::CRingPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Ring(*this)	// "Ring"
{
}

CRingPropertyType::CRingPropertyType(CRingPropertyType const& other)
: ElementType(other.GetNode())
, Ring(*this)	// "Ring"
{
}

void CRingPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RingPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CRingType::CRingType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractRingType(node)
, aggregationType(*this)	// "@aggregationType"
, curveMember(*this)	// "curveMember"
{
}

CRingType::CRingType(CRingType const& other)
: ::indoorgmlcore::gml::CAbstractRingType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, curveMember(*this)	// "curveMember"
{
}

void CRingType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RingType"), _T("http://www.opengis.net/gml/3.2"));
}

CScaleType::CScaleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CScaleType::CScaleType(CScaleType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CScaleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ScaleType"), _T("http://www.opengis.net/gml/3.2"));
}

CSequenceRuleEnumeration::CSequenceRuleEnumeration(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSequenceRuleEnumeration::CSequenceRuleEnumeration(CSequenceRuleEnumeration const& other)
: TypeBase(other.GetNode())
{
}


CSequenceRuleType::CSequenceRuleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CSequenceRuleEnumerationType(node)
, order(*this)	// "@order"
, axisOrder(*this)	// "@axisOrder"
{
}

CSequenceRuleType::CSequenceRuleType(CSequenceRuleType const& other)
: ::indoorgmlcore::gml::CSequenceRuleEnumerationType(other.GetNode())
, order(*this)	// "@order"
, axisOrder(*this)	// "@axisOrder"
{
}

void CSequenceRuleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SequenceRuleType"), _T("http://www.opengis.net/gml/3.2"));
}

CShellPropertyType::CShellPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Shell(*this)	// "Shell"
{
}

CShellPropertyType::CShellPropertyType(CShellPropertyType const& other)
: ElementType(other.GetNode())
, Shell(*this)	// "Shell"
{
}

void CShellPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShellPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CShellType::CShellType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfaceType(node)
, aggregationType(*this)	// "@aggregationType"
, surfaceMember(*this)	// "surfaceMember"
{
}

CShellType::CShellType(CShellType const& other)
: ::indoorgmlcore::gml::CAbstractSurfaceType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, surfaceMember(*this)	// "surfaceMember"
{
}

void CShellType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShellType"), _T("http://www.opengis.net/gml/3.2"));
}

CSignType::CSignType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSignType::CSignType(CSignType const& other)
: TypeBase(other.GetNode())
{
}


CSingleCRSPropertyType::CSingleCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

CSingleCRSPropertyType::CSingleCRSPropertyType(CSingleCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DerivedCRS(*this)	// "DerivedCRS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, GeocentricCRS(*this)	// "GeocentricCRS"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeographicCRS(*this)	// "GeographicCRS"
, ImageCRS(*this)	// "ImageCRS"
, ProjectedCRS(*this)	// "ProjectedCRS"
, TemporalCRS(*this)	// "TemporalCRS"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

void CSingleCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SingleCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSingleOperationPropertyType::CSingleOperationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Transformation(*this)	// "Transformation"
{
}

CSingleOperationPropertyType::CSingleOperationPropertyType(CSingleOperationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Conversion(*this)	// "Conversion"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Transformation(*this)	// "Transformation"
{
}

void CSingleOperationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SingleOperationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSolidArrayPropertyType::CSolidArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, CompositeSolid(*this)	// "CompositeSolid"
, Solid(*this)	// "Solid"
{
}

CSolidArrayPropertyType::CSolidArrayPropertyType(CSolidArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, CompositeSolid(*this)	// "CompositeSolid"
, Solid(*this)	// "Solid"
{
}

void CSolidArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SolidArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSolidPropertyType::CSolidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeSolid(*this)	// "CompositeSolid"
, Solid(*this)	// "Solid"
{
}

CSolidPropertyType::CSolidPropertyType(CSolidPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeSolid(*this)	// "CompositeSolid"
, Solid(*this)	// "Solid"
{
}

void CSolidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SolidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSolidType::CSolidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSolidType(node)
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

CSolidType::CSolidType(CSolidType const& other)
: ::indoorgmlcore::gml::CAbstractSolidType(other.GetNode())
, exterior(*this)	// "exterior"
, interior(*this)	// "interior"
{
}

void CSolidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SolidType"), _T("http://www.opengis.net/gml/3.2"));
}

CSpeedType::CSpeedType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CSpeedType::CSpeedType(CSpeedType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CSpeedType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpeedType"), _T("http://www.opengis.net/gml/3.2"));
}

CSphereType::CSphereType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(node)
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

CSphereType::CSphereType(CSphereType const& other)
: ::indoorgmlcore::gml::CAbstractGriddedSurfaceType(other.GetNode())
, horizontalCurveType(*this)	// "@horizontalCurveType"
, verticalCurveType(*this)	// "@verticalCurveType"
{
}

void CSphereType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SphereType"), _T("http://www.opengis.net/gml/3.2"));
}

CSphericalCSPropertyType::CSphericalCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SphericalCS(*this)	// "SphericalCS"
{
}

CSphericalCSPropertyType::CSphericalCSPropertyType(CSphericalCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SphericalCS(*this)	// "SphericalCS"
{
}

void CSphericalCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SphericalCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSphericalCSType::CSphericalCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CSphericalCSType::CSphericalCSType(CSphericalCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CSphericalCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SphericalCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CStringOrRefType::CStringOrRefType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CstringType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

CStringOrRefType::CStringOrRefType(CStringOrRefType const& other)
: ::indoorgmlcore::xs::CstringType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
{
}

void CStringOrRefType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("StringOrRefType"), _T("http://www.opengis.net/gml/3.2"));
}

CSuccessionType::CSuccessionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSuccessionType::CSuccessionType(CSuccessionType const& other)
: TypeBase(other.GetNode())
{
}


CSurfaceArrayPropertyType::CSurfaceArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, CompositeSurface(*this)	// "CompositeSurface"
, OrientableSurface(*this)	// "OrientableSurface"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Shell(*this)	// "Shell"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CSurfaceArrayPropertyType::CSurfaceArrayPropertyType(CSurfaceArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, CompositeSurface(*this)	// "CompositeSurface"
, OrientableSurface(*this)	// "OrientableSurface"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Shell(*this)	// "Shell"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CSurfaceArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SurfaceArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSurfaceInterpolationType::CSurfaceInterpolationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSurfaceInterpolationType::CSurfaceInterpolationType(CSurfaceInterpolationType const& other)
: TypeBase(other.GetNode())
{
}


CSurfacePatchArrayPropertyType::CSurfacePatchArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Cone(*this)	// "Cone"
, Cylinder(*this)	// "Cylinder"
, PolygonPatch(*this)	// "PolygonPatch"
, Rectangle(*this)	// "Rectangle"
, Sphere(*this)	// "Sphere"
, Triangle(*this)	// "Triangle"
{
}

CSurfacePatchArrayPropertyType::CSurfacePatchArrayPropertyType(CSurfacePatchArrayPropertyType const& other)
: ElementType(other.GetNode())
, Cone(*this)	// "Cone"
, Cylinder(*this)	// "Cylinder"
, PolygonPatch(*this)	// "PolygonPatch"
, Rectangle(*this)	// "Rectangle"
, Sphere(*this)	// "Sphere"
, Triangle(*this)	// "Triangle"
{
}

void CSurfacePatchArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SurfacePatchArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSurfacePropertyType::CSurfacePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeSurface(*this)	// "CompositeSurface"
, OrientableSurface(*this)	// "OrientableSurface"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Shell(*this)	// "Shell"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CSurfacePropertyType::CSurfacePropertyType(CSurfacePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, CompositeSurface(*this)	// "CompositeSurface"
, OrientableSurface(*this)	// "OrientableSurface"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, Shell(*this)	// "Shell"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CSurfacePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SurfacePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CSurfaceType::CSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfaceType(node)
, patches(*this)	// "patches"
, polygonPatches(*this)	// "polygonPatches"
, trianglePatches(*this)	// "trianglePatches"
{
}

CSurfaceType::CSurfaceType(CSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractSurfaceType(other.GetNode())
, patches(*this)	// "patches"
, polygonPatches(*this)	// "polygonPatches"
, trianglePatches(*this)	// "trianglePatches"
{
}

void CSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CTargetPropertyType::CTargetPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

CTargetPropertyType::CTargetPropertyType(CTargetPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, FeatureCollection(*this)	// "FeatureCollection"
, GridCoverage(*this)	// "GridCoverage"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Observation(*this)	// "Observation"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
{
}

void CTargetPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TargetPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalCRSPropertyType::CTemporalCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalCRS(*this)	// "TemporalCRS"
{
}

CTemporalCRSPropertyType::CTemporalCRSPropertyType(CTemporalCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalCRS(*this)	// "TemporalCRS"
{
}

void CTemporalCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalCRSType::CTemporalCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, timeCS(*this)	// "timeCS"
, usesTimeCS(*this)	// "usesTimeCS"
, usesTemporalCS(*this)	// "usesTemporalCS"
, temporalDatum(*this)	// "temporalDatum"
, usesTemporalDatum(*this)	// "usesTemporalDatum"
{
}

CTemporalCRSType::CTemporalCRSType(CTemporalCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, timeCS(*this)	// "timeCS"
, usesTimeCS(*this)	// "usesTimeCS"
, usesTemporalCS(*this)	// "usesTemporalCS"
, temporalDatum(*this)	// "temporalDatum"
, usesTemporalDatum(*this)	// "usesTemporalDatum"
{
}

void CTemporalCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalCSPropertyType::CTemporalCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalCS(*this)	// "TemporalCS"
{
}

CTemporalCSPropertyType::CTemporalCSPropertyType(CTemporalCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalCS(*this)	// "TemporalCS"
{
}

void CTemporalCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalCSType::CTemporalCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CTemporalCSType::CTemporalCSType(CTemporalCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CTemporalCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalDatumBaseType::CTemporalDatumBaseType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
{
}

CTemporalDatumBaseType::CTemporalDatumBaseType(CTemporalDatumBaseType const& other)
: ElementType(other.GetNode())
, id(*this)	// "@id"
, metaDataProperty(*this)	// "metaDataProperty"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, identifier(*this)	// "identifier"
, name(*this)	// "name"
, remarks(*this)	// "remarks"
, domainOfValidity(*this)	// "domainOfValidity"
, scope(*this)	// "scope"
{
}

void CTemporalDatumBaseType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalDatumBaseType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalDatumPropertyType::CTemporalDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalDatum(*this)	// "TemporalDatum"
{
}

CTemporalDatumPropertyType::CTemporalDatumPropertyType(CTemporalDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TemporalDatum(*this)	// "TemporalDatum"
{
}

void CTemporalDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalDatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTemporalDatumType::CTemporalDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTemporalDatumBaseType(node)
, origin(*this)	// "origin"
{
}

CTemporalDatumType::CTemporalDatumType(CTemporalDatumType const& other)
: ::indoorgmlcore::gml::CTemporalDatumBaseType(other.GetNode())
, origin(*this)	// "origin"
{
}

void CTemporalDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemporalDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCSPropertyType::CTimeCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCS(*this)	// "TimeCS"
{
}

CTimeCSPropertyType::CTimeCSPropertyType(CTimeCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCS(*this)	// "TimeCS"
{
}

void CTimeCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCSType::CTimeCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CTimeCSType::CTimeCSType(CTimeCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CTimeCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCalendarEraPropertyType::CTimeCalendarEraPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCalendarEra(*this)	// "TimeCalendarEra"
{
}

CTimeCalendarEraPropertyType::CTimeCalendarEraPropertyType(CTimeCalendarEraPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCalendarEra(*this)	// "TimeCalendarEra"
{
}

void CTimeCalendarEraPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCalendarEraPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCalendarEraType::CTimeCalendarEraType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, referenceEvent(*this)	// "referenceEvent"
, referenceDate(*this)	// "referenceDate"
, julianReference(*this)	// "julianReference"
, epochOfUse(*this)	// "epochOfUse"
{
}

CTimeCalendarEraType::CTimeCalendarEraType(CTimeCalendarEraType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, referenceEvent(*this)	// "referenceEvent"
, referenceDate(*this)	// "referenceDate"
, julianReference(*this)	// "julianReference"
, epochOfUse(*this)	// "epochOfUse"
{
}

void CTimeCalendarEraType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCalendarEraType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCalendarPropertyType::CTimeCalendarPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCalendar(*this)	// "TimeCalendar"
{
}

CTimeCalendarPropertyType::CTimeCalendarPropertyType(CTimeCalendarPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeCalendar(*this)	// "TimeCalendar"
{
}

void CTimeCalendarPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCalendarPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCalendarType::CTimeCalendarType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(node)
, referenceFrame(*this)	// "referenceFrame"
{
}

CTimeCalendarType::CTimeCalendarType(CTimeCalendarType const& other)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(other.GetNode())
, referenceFrame(*this)	// "referenceFrame"
{
}

void CTimeCalendarType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCalendarType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeClockPropertyType::CTimeClockPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeClock(*this)	// "TimeClock"
{
}

CTimeClockPropertyType::CTimeClockPropertyType(CTimeClockPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeClock(*this)	// "TimeClock"
{
}

void CTimeClockPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeClockPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeClockType::CTimeClockType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(node)
, referenceEvent(*this)	// "referenceEvent"
, referenceTime(*this)	// "referenceTime"
, utcReference(*this)	// "utcReference"
, dateBasis(*this)	// "dateBasis"
{
}

CTimeClockType::CTimeClockType(CTimeClockType const& other)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(other.GetNode())
, referenceEvent(*this)	// "referenceEvent"
, referenceTime(*this)	// "referenceTime"
, utcReference(*this)	// "utcReference"
, dateBasis(*this)	// "dateBasis"
{
}

void CTimeClockType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeClockType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeCoordinateSystemType::CTimeCoordinateSystemType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(node)
, originPosition(*this)	// "originPosition"
, origin(*this)	// "origin"
, interval(*this)	// "interval"
{
}

CTimeCoordinateSystemType::CTimeCoordinateSystemType(CTimeCoordinateSystemType const& other)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(other.GetNode())
, originPosition(*this)	// "originPosition"
, origin(*this)	// "origin"
, interval(*this)	// "interval"
{
}

void CTimeCoordinateSystemType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeCoordinateSystemType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeEdgePropertyType::CTimeEdgePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
{
}

CTimeEdgePropertyType::CTimeEdgePropertyType(CTimeEdgePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
{
}

void CTimeEdgePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeEdgePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeEdgeType::CTimeEdgeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeTopologyPrimitiveType(node)
, start(*this)	// "start"
, end(*this)	// "end"
, extent(*this)	// "extent"
{
}

CTimeEdgeType::CTimeEdgeType(CTimeEdgeType const& other)
: ::indoorgmlcore::gml::CAbstractTimeTopologyPrimitiveType(other.GetNode())
, start(*this)	// "start"
, end(*this)	// "end"
, extent(*this)	// "extent"
{
}

void CTimeEdgeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeEdgeType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeIndeterminateValueType::CTimeIndeterminateValueType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeIndeterminateValueType::CTimeIndeterminateValueType(CTimeIndeterminateValueType const& other)
: TypeBase(other.GetNode())
{
}


CTimeInstantPropertyType::CTimeInstantPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeInstant(*this)	// "TimeInstant"
{
}

CTimeInstantPropertyType::CTimeInstantPropertyType(CTimeInstantPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeInstant(*this)	// "TimeInstant"
{
}

void CTimeInstantPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeInstantPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeInstantType::CTimeInstantType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeGeometricPrimitiveType(node)
, timePosition(*this)	// "timePosition"
{
}

CTimeInstantType::CTimeInstantType(CTimeInstantType const& other)
: ::indoorgmlcore::gml::CAbstractTimeGeometricPrimitiveType(other.GetNode())
, timePosition(*this)	// "timePosition"
{
}

void CTimeInstantType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeInstantType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeIntervalLengthType::CTimeIntervalLengthType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CdecimalType(node)
, unit(*this)	// "@unit"
, radix(*this)	// "@radix"
, factor(*this)	// "@factor"
{
}

CTimeIntervalLengthType::CTimeIntervalLengthType(CTimeIntervalLengthType const& other)
: ::indoorgmlcore::xs::CdecimalType(other.GetNode())
, unit(*this)	// "@unit"
, radix(*this)	// "@radix"
, factor(*this)	// "@factor"
{
}

void CTimeIntervalLengthType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeIntervalLengthType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeNodePropertyType::CTimeNodePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeNode(*this)	// "TimeNode"
{
}

CTimeNodePropertyType::CTimeNodePropertyType(CTimeNodePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeNode(*this)	// "TimeNode"
{
}

void CTimeNodePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeNodePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeNodeType::CTimeNodeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeTopologyPrimitiveType(node)
, previousEdge(*this)	// "previousEdge"
, nextEdge(*this)	// "nextEdge"
, position(*this)	// "position"
{
}

CTimeNodeType::CTimeNodeType(CTimeNodeType const& other)
: ::indoorgmlcore::gml::CAbstractTimeTopologyPrimitiveType(other.GetNode())
, previousEdge(*this)	// "previousEdge"
, nextEdge(*this)	// "nextEdge"
, position(*this)	// "position"
{
}

void CTimeNodeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeNodeType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeOrdinalEraPropertyType::CTimeOrdinalEraPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeOrdinalEra(*this)	// "TimeOrdinalEra"
{
}

CTimeOrdinalEraPropertyType::CTimeOrdinalEraPropertyType(CTimeOrdinalEraPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TimeOrdinalEra(*this)	// "TimeOrdinalEra"
{
}

void CTimeOrdinalEraPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeOrdinalEraPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeOrdinalEraType::CTimeOrdinalEraType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, relatedTime(*this)	// "relatedTime"
, start(*this)	// "start"
, end(*this)	// "end"
, extent(*this)	// "extent"
, member(*this)	// "member"
, group(*this)	// "group"
{
}

CTimeOrdinalEraType::CTimeOrdinalEraType(CTimeOrdinalEraType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, relatedTime(*this)	// "relatedTime"
, start(*this)	// "start"
, end(*this)	// "end"
, extent(*this)	// "extent"
, member(*this)	// "member"
, group(*this)	// "group"
{
}

void CTimeOrdinalEraType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeOrdinalEraType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeOrdinalReferenceSystemType::CTimeOrdinalReferenceSystemType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(node)
, component(*this)	// "component"
{
}

CTimeOrdinalReferenceSystemType::CTimeOrdinalReferenceSystemType(CTimeOrdinalReferenceSystemType const& other)
: ::indoorgmlcore::gml::CTimeReferenceSystemType(other.GetNode())
, component(*this)	// "component"
{
}

void CTimeOrdinalReferenceSystemType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeOrdinalReferenceSystemType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimePeriodPropertyType::CTimePeriodPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimePeriod(*this)	// "TimePeriod"
{
}

CTimePeriodPropertyType::CTimePeriodPropertyType(CTimePeriodPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimePeriod(*this)	// "TimePeriod"
{
}

void CTimePeriodPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimePeriodPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimePeriodType::CTimePeriodType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeGeometricPrimitiveType(node)
, beginPosition(*this)	// "beginPosition"
, begin(*this)	// "begin"
, endPosition(*this)	// "endPosition"
, end(*this)	// "end"
, duration(*this)	// "duration"
, timeInterval(*this)	// "timeInterval"
{
}

CTimePeriodType::CTimePeriodType(CTimePeriodType const& other)
: ::indoorgmlcore::gml::CAbstractTimeGeometricPrimitiveType(other.GetNode())
, beginPosition(*this)	// "beginPosition"
, begin(*this)	// "begin"
, endPosition(*this)	// "endPosition"
, end(*this)	// "end"
, duration(*this)	// "duration"
, timeInterval(*this)	// "timeInterval"
{
}

void CTimePeriodType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimePeriodType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimePositionType::CTimePositionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CTimePositionUnionType(node)
, frame(*this)	// "@frame"
, calendarEraName(*this)	// "@calendarEraName"
, indeterminatePosition(*this)	// "@indeterminatePosition"
{
}

CTimePositionType::CTimePositionType(CTimePositionType const& other)
: ::indoorgmlcore::gml::CTimePositionUnionType(other.GetNode())
, frame(*this)	// "@frame"
, calendarEraName(*this)	// "@calendarEraName"
, indeterminatePosition(*this)	// "@indeterminatePosition"
{
}

void CTimePositionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimePositionType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimePositionUnion::CTimePositionUnion(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimePositionUnion::CTimePositionUnion(CTimePositionUnion const& other)
: TypeBase(other.GetNode())
{
}


CTimePrimitivePropertyType::CTimePrimitivePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
{
}

CTimePrimitivePropertyType::CTimePrimitivePropertyType(CTimePrimitivePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
{
}

void CTimePrimitivePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimePrimitivePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeReferenceSystemType::CTimeReferenceSystemType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, domainOfValidity(*this)	// "domainOfValidity"
{
}

CTimeReferenceSystemType::CTimeReferenceSystemType(CTimeReferenceSystemType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, domainOfValidity(*this)	// "domainOfValidity"
{
}

void CTimeReferenceSystemType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeReferenceSystemType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeTopologyComplexPropertyType::CTimeTopologyComplexPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
{
}

CTimeTopologyComplexPropertyType::CTimeTopologyComplexPropertyType(CTimeTopologyComplexPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
{
}

void CTimeTopologyComplexPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeTopologyComplexPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeTopologyComplexType::CTimeTopologyComplexType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTimeComplexType(node)
, primitive(*this)	// "primitive"
{
}

CTimeTopologyComplexType::CTimeTopologyComplexType(CTimeTopologyComplexType const& other)
: ::indoorgmlcore::gml::CAbstractTimeComplexType(other.GetNode())
, primitive(*this)	// "primitive"
{
}

void CTimeTopologyComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeTopologyComplexType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeTopologyPrimitivePropertyType::CTimeTopologyPrimitivePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
, TimeNode(*this)	// "TimeNode"
{
}

CTimeTopologyPrimitivePropertyType::CTimeTopologyPrimitivePropertyType(CTimeTopologyPrimitivePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TimeEdge(*this)	// "TimeEdge"
, TimeNode(*this)	// "TimeNode"
{
}

void CTimeTopologyPrimitivePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeTopologyPrimitivePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeType::CTimeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CTimeType::CTimeType(CTimeType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CTimeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeType"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeUnitType::CTimeUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeUnitType::CTimeUnitType(CTimeUnitType const& other)
: TypeBase(other.GetNode())
{
}


CTinType::CTinType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CSurfaceType(node)
, stopLines(*this)	// "stopLines"
, breakLines(*this)	// "breakLines"
, maxLength(*this)	// "maxLength"
, controlPoint(*this)	// "controlPoint"
{
}

CTinType::CTinType(CTinType const& other)
: ::indoorgmlcore::gml::CSurfaceType(other.GetNode())
, stopLines(*this)	// "stopLines"
, breakLines(*this)	// "breakLines"
, maxLength(*this)	// "maxLength"
, controlPoint(*this)	// "controlPoint"
{
}

void CTinType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TinType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoComplexPropertyType::CTopoComplexPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TopoComplex(*this)	// "TopoComplex"
{
}

CTopoComplexPropertyType::CTopoComplexPropertyType(CTopoComplexPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, TopoComplex(*this)	// "TopoComplex"
{
}

void CTopoComplexPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoComplexPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoComplexType::CTopoComplexType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
, isMaximal(*this)	// "@isMaximal"
, aggregationType(*this)	// "@aggregationType"
, maximalComplex(*this)	// "maximalComplex"
, superComplex(*this)	// "superComplex"
, subComplex(*this)	// "subComplex"
, topoPrimitiveMember(*this)	// "topoPrimitiveMember"
, topoPrimitiveMembers(*this)	// "topoPrimitiveMembers"
{
}

CTopoComplexType::CTopoComplexType(CTopoComplexType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
, isMaximal(*this)	// "@isMaximal"
, aggregationType(*this)	// "@aggregationType"
, maximalComplex(*this)	// "maximalComplex"
, superComplex(*this)	// "superComplex"
, subComplex(*this)	// "subComplex"
, topoPrimitiveMember(*this)	// "topoPrimitiveMember"
, topoPrimitiveMembers(*this)	// "topoPrimitiveMembers"
{
}

void CTopoComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoComplexType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoCurvePropertyType::CTopoCurvePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, TopoCurve(*this)	// "TopoCurve"
{
}

CTopoCurvePropertyType::CTopoCurvePropertyType(CTopoCurvePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, TopoCurve(*this)	// "TopoCurve"
{
}

void CTopoCurvePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoCurvePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoCurveType::CTopoCurveType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
, aggregationType(*this)	// "@aggregationType"
, directedEdge(*this)	// "directedEdge"
{
}

CTopoCurveType::CTopoCurveType(CTopoCurveType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, directedEdge(*this)	// "directedEdge"
{
}

void CTopoCurveType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoCurveType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoPointPropertyType::CTopoPointPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, TopoPoint(*this)	// "TopoPoint"
{
}

CTopoPointPropertyType::CTopoPointPropertyType(CTopoPointPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, TopoPoint(*this)	// "TopoPoint"
{
}

void CTopoPointPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoPointPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoPointType::CTopoPointType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
, directedNode(*this)	// "directedNode"
{
}

CTopoPointType::CTopoPointType(CTopoPointType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
, directedNode(*this)	// "directedNode"
{
}

void CTopoPointType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoPointType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoPrimitiveArrayAssociationType::CTopoPrimitiveArrayAssociationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
, Face(*this)	// "Face"
, Node(*this)	// "Node"
, TopoSolid(*this)	// "TopoSolid"
{
}

CTopoPrimitiveArrayAssociationType::CTopoPrimitiveArrayAssociationType(CTopoPrimitiveArrayAssociationType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
, Face(*this)	// "Face"
, Node(*this)	// "Node"
, TopoSolid(*this)	// "TopoSolid"
{
}

void CTopoPrimitiveArrayAssociationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoPrimitiveArrayAssociationType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoPrimitiveMemberType::CTopoPrimitiveMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
, Face(*this)	// "Face"
, Node(*this)	// "Node"
, TopoSolid(*this)	// "TopoSolid"
{
}

CTopoPrimitiveMemberType::CTopoPrimitiveMemberType(CTopoPrimitiveMemberType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Edge(*this)	// "Edge"
, Face(*this)	// "Face"
, Node(*this)	// "Node"
, TopoSolid(*this)	// "TopoSolid"
{
}

void CTopoPrimitiveMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoPrimitiveMemberType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoSolidPropertyType::CTopoSolidPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TopoSolid(*this)	// "TopoSolid"
{
}

CTopoSolidPropertyType::CTopoSolidPropertyType(CTopoSolidPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, TopoSolid(*this)	// "TopoSolid"
{
}

void CTopoSolidPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoSolidPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoSolidType::CTopoSolidType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(node)
, aggregationType(*this)	// "@aggregationType"
, universal(*this)	// "@universal"
, isolated(*this)	// "isolated"
, directedFace(*this)	// "directedFace"
, solidProperty(*this)	// "solidProperty"
{
}

CTopoSolidType::CTopoSolidType(CTopoSolidType const& other)
: ::indoorgmlcore::gml::CAbstractTopoPrimitiveType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, universal(*this)	// "@universal"
, isolated(*this)	// "isolated"
, directedFace(*this)	// "directedFace"
, solidProperty(*this)	// "solidProperty"
{
}

void CTopoSolidType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoSolidType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoSurfacePropertyType::CTopoSurfacePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, TopoSurface(*this)	// "TopoSurface"
{
}

CTopoSurfacePropertyType::CTopoSurfacePropertyType(CTopoSurfacePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, TopoSurface(*this)	// "TopoSurface"
{
}

void CTopoSurfacePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoSurfacePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoSurfaceType::CTopoSurfaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
, aggregationType(*this)	// "@aggregationType"
, directedFace(*this)	// "directedFace"
{
}

CTopoSurfaceType::CTopoSurfaceType(CTopoSurfaceType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, directedFace(*this)	// "directedFace"
{
}

void CTopoSurfaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoSurfaceType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoVolumePropertyType::CTopoVolumePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, TopoVolume(*this)	// "TopoVolume"
{
}

CTopoVolumePropertyType::CTopoVolumePropertyType(CTopoVolumePropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, TopoVolume(*this)	// "TopoVolume"
{
}

void CTopoVolumePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoVolumePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTopoVolumeType::CTopoVolumeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractTopologyType(node)
, aggregationType(*this)	// "@aggregationType"
, directedTopoSolid(*this)	// "directedTopoSolid"
{
}

CTopoVolumeType::CTopoVolumeType(CTopoVolumeType const& other)
: ::indoorgmlcore::gml::CAbstractTopologyType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, directedTopoSolid(*this)	// "directedTopoSolid"
{
}

void CTopoVolumeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TopoVolumeType"), _T("http://www.opengis.net/gml/3.2"));
}

CTransformationPropertyType::CTransformationPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transformation(*this)	// "Transformation"
{
}

CTransformationPropertyType::CTransformationPropertyType(CTransformationPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transformation(*this)	// "Transformation"
{
}

void CTransformationPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransformationPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CTransformationType::CTransformationType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractGeneralTransformationType(node)
, method(*this)	// "method"
, usesMethod(*this)	// "usesMethod"
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
{
}

CTransformationType::CTransformationType(CTransformationType const& other)
: ::indoorgmlcore::gml::CAbstractGeneralTransformationType(other.GetNode())
, method(*this)	// "method"
, usesMethod(*this)	// "usesMethod"
, parameterValue(*this)	// "parameterValue"
, includesValue(*this)	// "includesValue"
, usesValue(*this)	// "usesValue"
{
}

void CTransformationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransformationType"), _T("http://www.opengis.net/gml/3.2"));
}

CTriangleType::CTriangleType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(node)
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
{
}

CTriangleType::CTriangleType(CTriangleType const& other)
: ::indoorgmlcore::gml::CAbstractSurfacePatchType(other.GetNode())
, interpolation(*this)	// "@interpolation"
, exterior(*this)	// "exterior"
{
}

void CTriangleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TriangleType"), _T("http://www.opengis.net/gml/3.2"));
}

CUnitDefinitionType::CUnitDefinitionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CDefinitionType(node)
, quantityType(*this)	// "quantityType"
, quantityTypeReference(*this)	// "quantityTypeReference"
, catalogSymbol(*this)	// "catalogSymbol"
{
}

CUnitDefinitionType::CUnitDefinitionType(CUnitDefinitionType const& other)
: ::indoorgmlcore::gml::CDefinitionType(other.GetNode())
, quantityType(*this)	// "quantityType"
, quantityTypeReference(*this)	// "quantityTypeReference"
, catalogSymbol(*this)	// "catalogSymbol"
{
}

void CUnitDefinitionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnitDefinitionType"), _T("http://www.opengis.net/gml/3.2"));
}

CUnitOfMeasureType::CUnitOfMeasureType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, uom(*this)	// "@uom"
{
}

CUnitOfMeasureType::CUnitOfMeasureType(CUnitOfMeasureType const& other)
: ElementType(other.GetNode())
, uom(*this)	// "@uom"
{
}

void CUnitOfMeasureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnitOfMeasureType"), _T("http://www.opengis.net/gml/3.2"));
}

CUomIdentifier::CUomIdentifier(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUomIdentifier::CUomIdentifier(CUomIdentifier const& other)
: TypeBase(other.GetNode())
{
}


CUomSymbol::CUomSymbol(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUomSymbol::CUomSymbol(CUomSymbol const& other)
: TypeBase(other.GetNode())
{
}


CUomURI::CUomURI(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUomURI::CUomURI(CUomURI const& other)
: TypeBase(other.GetNode())
{
}


CUserDefinedCSPropertyType::CUserDefinedCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, UserDefinedCS(*this)	// "UserDefinedCS"
{
}

CUserDefinedCSPropertyType::CUserDefinedCSPropertyType(CUserDefinedCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, UserDefinedCS(*this)	// "UserDefinedCS"
{
}

void CUserDefinedCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UserDefinedCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CUserDefinedCSType::CUserDefinedCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CUserDefinedCSType::CUserDefinedCSType(CUserDefinedCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CUserDefinedCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UserDefinedCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CValueArrayPropertyType::CValueArrayPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, owns(*this)	// "@owns"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, CompositeValue(*this)	// "CompositeValue"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, ValueArray(*this)	// "ValueArray"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Null(*this)	// "Null"
{
}

CValueArrayPropertyType::CValueArrayPropertyType(CValueArrayPropertyType const& other)
: ElementType(other.GetNode())
, owns(*this)	// "@owns"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, CompositeValue(*this)	// "CompositeValue"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, ValueArray(*this)	// "ValueArray"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Null(*this)	// "Null"
{
}

void CValueArrayPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ValueArrayPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CValueArrayType::CValueArrayType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CCompositeValueType(node)
, codeSpace(*this)	// "@codeSpace"
, uom(*this)	// "@uom"
{
}

CValueArrayType::CValueArrayType(CValueArrayType const& other)
: ::indoorgmlcore::gml::CCompositeValueType(other.GetNode())
, codeSpace(*this)	// "@codeSpace"
, uom(*this)	// "@uom"
{
}

void CValueArrayType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ValueArrayType"), _T("http://www.opengis.net/gml/3.2"));
}

CValuePropertyType::CValuePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, CompositeValue(*this)	// "CompositeValue"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, ValueArray(*this)	// "ValueArray"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Null(*this)	// "Null"
{
}

CValuePropertyType::CValuePropertyType(CValuePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, owns(*this)	// "@owns"
, Boolean(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, CompositeValue(*this)	// "CompositeValue"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, ValueArray(*this)	// "ValueArray"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, Curve(*this)	// "Curve"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, LineString(*this)	// "LineString"
, LinearRing(*this)	// "LinearRing"
, MultiCurve(*this)	// "MultiCurve"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiSolid(*this)	// "MultiSolid"
, MultiSurface(*this)	// "MultiSurface"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, Point(*this)	// "Point"
, Polygon(*this)	// "Polygon"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, RectifiedGrid(*this)	// "RectifiedGrid"
, Ring(*this)	// "Ring"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Surface(*this)	// "Surface"
, Tin(*this)	// "Tin"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimePeriod(*this)	// "TimePeriod"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Null(*this)	// "Null"
{
}

void CValuePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ValuePropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CVectorType::CVectorType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

CVectorType::CVectorType(CVectorType const& other)
: ElementType(other.GetNode())
, srsName(*this)	// "@srsName"
, srsDimension(*this)	// "@srsDimension"
, axisLabels(*this)	// "@axisLabels"
, uomLabels(*this)	// "@uomLabels"
{
}

void CVectorType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VectorType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalCRSPropertyType::CVerticalCRSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

CVerticalCRSPropertyType::CVerticalCRSPropertyType(CVerticalCRSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalCRS(*this)	// "VerticalCRS"
{
}

void CVerticalCRSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalCRSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalCRSType::CVerticalCRSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCRSType(node)
, verticalCS(*this)	// "verticalCS"
, usesVerticalCS(*this)	// "usesVerticalCS"
, verticalDatum(*this)	// "verticalDatum"
, usesVerticalDatum(*this)	// "usesVerticalDatum"
{
}

CVerticalCRSType::CVerticalCRSType(CVerticalCRSType const& other)
: ::indoorgmlcore::gml::CAbstractCRSType(other.GetNode())
, verticalCS(*this)	// "verticalCS"
, usesVerticalCS(*this)	// "usesVerticalCS"
, verticalDatum(*this)	// "verticalDatum"
, usesVerticalDatum(*this)	// "usesVerticalDatum"
{
}

void CVerticalCRSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalCRSType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalCSPropertyType::CVerticalCSPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalCS(*this)	// "VerticalCS"
{
}

CVerticalCSPropertyType::CVerticalCSPropertyType(CVerticalCSPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalCS(*this)	// "VerticalCS"
{
}

void CVerticalCSPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalCSPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalCSType::CVerticalCSType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(node)
{
}

CVerticalCSType::CVerticalCSType(CVerticalCSType const& other)
: ::indoorgmlcore::gml::CAbstractCoordinateSystemType(other.GetNode())
{
}

void CVerticalCSType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalCSType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalDatumPropertyType::CVerticalDatumPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

CVerticalDatumPropertyType::CVerticalDatumPropertyType(CVerticalDatumPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, VerticalDatum(*this)	// "VerticalDatum"
{
}

void CVerticalDatumPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalDatumPropertyType"), _T("http://www.opengis.net/gml/3.2"));
}

CVerticalDatumType::CVerticalDatumType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractDatumType(node)
{
}

CVerticalDatumType::CVerticalDatumType(CVerticalDatumType const& other)
: ::indoorgmlcore::gml::CAbstractDatumType(other.GetNode())
{
}

void CVerticalDatumType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VerticalDatumType"), _T("http://www.opengis.net/gml/3.2"));
}

CVolumeType::CVolumeType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
{
}

CVolumeType::CVolumeType(CVolumeType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
{
}

void CVolumeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VolumeType"), _T("http://www.opengis.net/gml/3.2"));
}

CbooleanList::CbooleanList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CbooleanList::CbooleanList(CbooleanList const& other)
: TypeBase(other.GetNode())
{
}


CbooleanOrNilReason::CbooleanOrNilReason(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CbooleanOrNilReason::CbooleanOrNilReason(CbooleanOrNilReason const& other)
: TypeBase(other.GetNode())
{
}


CbooleanOrNilReasonList::CbooleanOrNilReasonList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CbooleanOrNilReasonList::CbooleanOrNilReasonList(CbooleanOrNilReasonList const& other)
: TypeBase(other.GetNode())
{
}


CdoubleList::CdoubleList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdoubleList::CdoubleList(CdoubleList const& other)
: TypeBase(other.GetNode())
{
}


CdoubleOrNilReason::CdoubleOrNilReason(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdoubleOrNilReason::CdoubleOrNilReason(CdoubleOrNilReason const& other)
: TypeBase(other.GetNode())
{
}


CdoubleOrNilReasonList::CdoubleOrNilReasonList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdoubleOrNilReasonList::CdoubleOrNilReasonList(CdoubleOrNilReasonList const& other)
: TypeBase(other.GetNode())
{
}


CintegerList::CintegerList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CintegerList::CintegerList(CintegerList const& other)
: TypeBase(other.GetNode())
{
}


CintegerOrNilReason::CintegerOrNilReason(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CintegerOrNilReason::CintegerOrNilReason(CintegerOrNilReason const& other)
: TypeBase(other.GetNode())
{
}


CintegerOrNilReasonList::CintegerOrNilReasonList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CintegerOrNilReasonList::CintegerOrNilReasonList(CintegerOrNilReasonList const& other)
: TypeBase(other.GetNode())
{
}


CstringOrNilReason::CstringOrNilReason(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CstringOrNilReason::CstringOrNilReason(CstringOrNilReason const& other)
: TypeBase(other.GetNode())
{
}


CbooleanOrNilReasonListType::CbooleanOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CbooleanOrNilReasonListType::CbooleanOrNilReasonListType(CbooleanOrNilReasonListType const& other)
: ElementType(other.GetNode())
{
}

void CbooleanOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("booleanOrNilReasonList"), _T("http://www.opengis.net/gml/3.2"));
}

CCountExtentTypeType::CCountExtentTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CCountExtentTypeType::CCountExtentTypeType(CCountExtentTypeType const& other)
: ElementType(other.GetNode())
{
}

void CCountExtentTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CountExtentType"), _T("http://www.opengis.net/gml/3.2"));
}

CintegerOrNilReasonListType::CintegerOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CintegerOrNilReasonListType::CintegerOrNilReasonListType(CintegerOrNilReasonListType const& other)
: ElementType(other.GetNode())
{
}

void CintegerOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("integerOrNilReasonList"), _T("http://www.opengis.net/gml/3.2"));
}

CNilReasonTypeType::CNilReasonTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CNilReasonTypeType::CNilReasonTypeType(CNilReasonTypeType const& other)
: ElementType(other.GetNode())
{
}

void CNilReasonTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NilReasonType"), _T("http://www.opengis.net/gml/3.2"));
}

CDecimalMinutesTypeType::CDecimalMinutesTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CDecimalMinutesTypeType::CDecimalMinutesTypeType(CDecimalMinutesTypeType const& other)
: ElementType(other.GetNode())
{
}

void CDecimalMinutesTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DecimalMinutesType"), _T("http://www.opengis.net/gml/3.2"));
}

CdoubleOrNilReasonListType::CdoubleOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdoubleOrNilReasonListType::CdoubleOrNilReasonListType(CdoubleOrNilReasonListType const& other)
: ElementType(other.GetNode())
{
}

void CdoubleOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("doubleOrNilReasonList"), _T("http://www.opengis.net/gml/3.2"));
}

CintegerListType::CintegerListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CintegerListType::CintegerListType(CintegerListType const& other)
: ElementType(other.GetNode())
{
}

void CintegerListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("integerList"), _T("http://www.opengis.net/gml/3.2"));
}

CArcMinutesTypeType::CArcMinutesTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CArcMinutesTypeType::CArcMinutesTypeType(CArcMinutesTypeType const& other)
: ElementType(other.GetNode())
{
}

void CArcMinutesTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcMinutesType"), _T("http://www.opengis.net/gml/3.2"));
}

CArcSecondsTypeType::CArcSecondsTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CArcSecondsTypeType::CArcSecondsTypeType(CArcSecondsTypeType const& other)
: ElementType(other.GetNode())
{
}

void CArcSecondsTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArcSecondsType"), _T("http://www.opengis.net/gml/3.2"));
}

CrowsType::CrowsType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Row(*this)	// "Row"
{
}

CrowsType::CrowsType(CrowsType const& other)
: ElementType(other.GetNode())
, Row(*this)	// "Row"
{
}


CRowType::CRowType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}

CRowType::CRowType(CRowType const& other)
: ElementType(other.GetNode())
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}


CNilReasonEnumerationType::CNilReasonEnumerationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNilReasonEnumerationType::CNilReasonEnumerationType(CNilReasonEnumerationType const& other)
: TypeBase(other.GetNode())
{
}


CNilReasonEnumerationType2::CNilReasonEnumerationType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNilReasonEnumerationType2::CNilReasonEnumerationType2(CNilReasonEnumerationType2 const& other)
: TypeBase(other.GetNode())
{
}


CNameOrNilReasonListType::CNameOrNilReasonListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CNameOrNilReasonListType::CNameOrNilReasonListType(CNameOrNilReasonListType const& other)
: ElementType(other.GetNode())
{
}

void CNameOrNilReasonListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NameOrNilReasonList"), _T("http://www.opengis.net/gml/3.2"));
}

CrefLocationType::CrefLocationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, AffinePlacement(*this)	// "AffinePlacement"
{
}

CrefLocationType::CrefLocationType(CrefLocationType const& other)
: ElementType(other.GetNode())
, AffinePlacement(*this)	// "AffinePlacement"
{
}


CNameListType::CNameListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CNameListType::CNameListType(CNameListType const& other)
: ElementType(other.GetNode())
{
}

void CNameListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NameList"), _T("http://www.opengis.net/gml/3.2"));
}

CDegreeValueTypeType::CDegreeValueTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CDegreeValueTypeType::CDegreeValueTypeType(CDegreeValueTypeType const& other)
: ElementType(other.GetNode())
{
}

void CDegreeValueTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DegreeValueType"), _T("http://www.opengis.net/gml/3.2"));
}

CdirectionType::CdirectionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdirectionType::CdirectionType(CdirectionType const& other)
: TypeBase(other.GetNode())
{
}


CdoubleListType::CdoubleListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdoubleListType::CdoubleListType(CdoubleListType const& other)
: ElementType(other.GetNode())
{
}

void CdoubleListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("doubleList"), _T("http://www.opengis.net/gml/3.2"));
}

CCompassPointEnumerationType::CCompassPointEnumerationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CCompassPointEnumerationType::CCompassPointEnumerationType(CCompassPointEnumerationType const& other)
: ElementType(other.GetNode())
{
}

void CCompassPointEnumerationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CompassPointEnumeration"), _T("http://www.opengis.net/gml/3.2"));
}

CNCNameListType::CNCNameListType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CNCNameListType::CNCNameListType(CNCNameListType const& other)
: ElementType(other.GetNode())
{
}

void CNCNameListType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NCNameList"), _T("http://www.opengis.net/gml/3.2"));
}

CrelativePositionType::CrelativePositionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CrelativePositionType::CrelativePositionType(CrelativePositionType const& other)
: TypeBase(other.GetNode())
{
}


CSequenceRuleEnumerationType::CSequenceRuleEnumerationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CSequenceRuleEnumerationType::CSequenceRuleEnumerationType(CSequenceRuleEnumerationType const& other)
: ElementType(other.GetNode())
{
}

void CSequenceRuleEnumerationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SequenceRuleEnumeration"), _T("http://www.opengis.net/gml/3.2"));
}

CCalDateType::CCalDateType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CCalDateType::CCalDateType(CCalDateType const& other)
: ElementType(other.GetNode())
{
}

void CCalDateType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CalDate"), _T("http://www.opengis.net/gml/3.2"));
}

CTimePositionUnionType::CTimePositionUnionType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CTimePositionUnionType::CTimePositionUnionType(CTimePositionUnionType const& other)
: ElementType(other.GetNode())
{
}

void CTimePositionUnionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimePositionUnion"), _T("http://www.opengis.net/gml/3.2"));
}

CTimeUnitTypeType::CTimeUnitTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeUnitTypeType::CTimeUnitTypeType(CTimeUnitTypeType const& other)
: TypeBase(other.GetNode())
{
}


CTimeUnitTypeType2::CTimeUnitTypeType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeUnitTypeType2::CTimeUnitTypeType2(CTimeUnitTypeType2 const& other)
: TypeBase(other.GetNode())
{
}


CcontrolPointType::CcontrolPointType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}

CcontrolPointType::CcontrolPointType(CcontrolPointType const& other)
: ElementType(other.GetNode())
, posList(*this)	// "posList"
, pos(*this)	// "pos"
, pointProperty(*this)	// "pointProperty"
{
}


} // namespace gml


CCellSpaceBoundaryGeometryType::CCellSpaceBoundaryGeometryType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, geometry3D(*this)	// "geometry3D"
, geometry2D(*this)	// "geometry2D"
{
}

CCellSpaceBoundaryGeometryType::CCellSpaceBoundaryGeometryType(CCellSpaceBoundaryGeometryType const& other)
: ElementType(other.GetNode())
, geometry3D(*this)	// "geometry3D"
, geometry2D(*this)	// "geometry2D"
{
}

void CCellSpaceBoundaryGeometryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceBoundaryGeometryType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceBoundaryMemberType::CCellSpaceBoundaryMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
{
}

CCellSpaceBoundaryMemberType::CCellSpaceBoundaryMemberType(CCellSpaceBoundaryMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
{
}

void CCellSpaceBoundaryMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceBoundaryMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceBoundaryPropertyType::CCellSpaceBoundaryPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
{
}

CCellSpaceBoundaryPropertyType::CCellSpaceBoundaryPropertyType(CCellSpaceBoundaryPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
{
}

void CCellSpaceBoundaryPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceBoundaryPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceBoundaryType::CCellSpaceBoundaryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, duality(*this)	// "duality"
, cellSpaceBoundaryGeometry(*this)	// "cellSpaceBoundaryGeometry"
, externalReference(*this)	// "externalReference"
{
}

CCellSpaceBoundaryType::CCellSpaceBoundaryType(CCellSpaceBoundaryType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, duality(*this)	// "duality"
, cellSpaceBoundaryGeometry(*this)	// "cellSpaceBoundaryGeometry"
, externalReference(*this)	// "externalReference"
{
}

void CCellSpaceBoundaryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceBoundaryType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceGeometryType::CCellSpaceGeometryType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, Geometry3D(*this)	// "Geometry3D"
, Geometry2D(*this)	// "Geometry2D"
{
}

CCellSpaceGeometryType::CCellSpaceGeometryType(CCellSpaceGeometryType const& other)
: ElementType(other.GetNode())
, Geometry3D(*this)	// "Geometry3D"
, Geometry2D(*this)	// "Geometry2D"
{
}

void CCellSpaceGeometryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceGeometryType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceMemberType::CCellSpaceMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpace(*this)	// "CellSpace"
{
}

CCellSpaceMemberType::CCellSpaceMemberType(CCellSpaceMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpace(*this)	// "CellSpace"
{
}

void CCellSpaceMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpacePropertyType::CCellSpacePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpace(*this)	// "CellSpace"
{
}

CCellSpacePropertyType::CCellSpacePropertyType(CCellSpacePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CellSpace(*this)	// "CellSpace"
{
}

void CCellSpacePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpacePropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CCellSpaceType::CCellSpaceType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, cellSpaceGeometry(*this)	// "cellSpaceGeometry"
, duality(*this)	// "duality"
, externalReference(*this)	// "externalReference"
, partialboundedBy(*this)	// "partialboundedBy"
, level(*this)	// "level"
{
}

CCellSpaceType::CCellSpaceType(CCellSpaceType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, cellSpaceGeometry(*this)	// "cellSpaceGeometry"
, duality(*this)	// "duality"
, externalReference(*this)	// "externalReference"
, partialboundedBy(*this)	// "partialboundedBy"
, level(*this)	// "level"
{
}

void CCellSpaceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CellSpaceType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CEdgesType::CEdgesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, aggregationType(*this)	// "@aggregationType"
, owns(*this)	// "@owns"
, transitionMember(*this)	// "transitionMember"
{
}

CEdgesType::CEdgesType(CEdgesType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, owns(*this)	// "@owns"
, transitionMember(*this)	// "transitionMember"
{
}

void CEdgesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("EdgesType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CExternalReferenceType::CExternalReferenceType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, informationSystem(*this)	// "informationSystem"
, externalObject(*this)	// "externalObject"
{
}

CExternalReferenceType::CExternalReferenceType(CExternalReferenceType const& other)
: ElementType(other.GetNode())
, informationSystem(*this)	// "informationSystem"
, externalObject(*this)	// "externalObject"
{
}

void CExternalReferenceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ExternalReferenceType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CIndoorFeaturesType::CIndoorFeaturesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, primalSpaceFeatures(*this)	// "primalSpaceFeatures"
, multiLayeredGraph(*this)	// "multiLayeredGraph"
{
}

CIndoorFeaturesType::CIndoorFeaturesType(CIndoorFeaturesType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, primalSpaceFeatures(*this)	// "primalSpaceFeatures"
, multiLayeredGraph(*this)	// "multiLayeredGraph"
{
}

void CIndoorFeaturesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("IndoorFeaturesType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CInterEdgesType::CInterEdgesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, aggregationType(*this)	// "@aggregationType"
, interLayerConnectionMember(*this)	// "interLayerConnectionMember"
{
}

CInterEdgesType::CInterEdgesType(CInterEdgesType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, interLayerConnectionMember(*this)	// "interLayerConnectionMember"
{
}

void CInterEdgesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InterEdgesType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CInterLayerConnectionMemberType::CInterLayerConnectionMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, InterLayerConnection(*this)	// "InterLayerConnection"
{
}

CInterLayerConnectionMemberType::CInterLayerConnectionMemberType(CInterLayerConnectionMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, InterLayerConnection(*this)	// "InterLayerConnection"
{
}

void CInterLayerConnectionMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InterLayerConnectionMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CInterLayerConnectionPropertyType::CInterLayerConnectionPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, InterLayerConnection(*this)	// "InterLayerConnection"
{
}

CInterLayerConnectionPropertyType::CInterLayerConnectionPropertyType(CInterLayerConnectionPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, InterLayerConnection(*this)	// "InterLayerConnection"
{
}

void CInterLayerConnectionPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InterLayerConnectionPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CInterLayerConnectionType::CInterLayerConnectionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, typeOfTopoExpression(*this)	// "typeOfTopoExpression"
, comment(*this)	// "comment"
, interConnects(*this)	// "interConnects"
, ConnectedLayers(*this)	// "ConnectedLayers"
{
}

CInterLayerConnectionType::CInterLayerConnectionType(CInterLayerConnectionType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, typeOfTopoExpression(*this)	// "typeOfTopoExpression"
, comment(*this)	// "comment"
, interConnects(*this)	// "interConnects"
, ConnectedLayers(*this)	// "ConnectedLayers"
{
}

void CInterLayerConnectionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InterLayerConnectionType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CMultiLayeredGraphPropertyType::CMultiLayeredGraphPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
{
}

CMultiLayeredGraphPropertyType::CMultiLayeredGraphPropertyType(CMultiLayeredGraphPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
{
}

void CMultiLayeredGraphPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiLayeredGraphPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CMultiLayeredGraphType::CMultiLayeredGraphType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, spaceLayers(*this)	// "spaceLayers"
, interEdges(*this)	// "interEdges"
{
}

CMultiLayeredGraphType::CMultiLayeredGraphType(CMultiLayeredGraphType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, spaceLayers(*this)	// "spaceLayers"
, interEdges(*this)	// "interEdges"
{
}

void CMultiLayeredGraphType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiLayeredGraphType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CNodesType::CNodesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, aggregationType(*this)	// "@aggregationType"
, owns(*this)	// "@owns"
, stateMember(*this)	// "stateMember"
{
}

CNodesType::CNodesType(CNodesType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, owns(*this)	// "@owns"
, stateMember(*this)	// "stateMember"
{
}

void CNodesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NodesType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CPrimalSpaceFeaturesPropertyType::CPrimalSpaceFeaturesPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
{
}

CPrimalSpaceFeaturesPropertyType::CPrimalSpaceFeaturesPropertyType(CPrimalSpaceFeaturesPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
{
}

void CPrimalSpaceFeaturesPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrimalSpaceFeaturesPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CPrimalSpaceFeaturesType::CPrimalSpaceFeaturesType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, aggregationType(*this)	// "@aggregationType"
, cellSpaceMember(*this)	// "cellSpaceMember"
, cellSpaceBoundaryMember(*this)	// "cellSpaceBoundaryMember"
{
}

CPrimalSpaceFeaturesType::CPrimalSpaceFeaturesType(CPrimalSpaceFeaturesType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, cellSpaceMember(*this)	// "cellSpaceMember"
, cellSpaceBoundaryMember(*this)	// "cellSpaceBoundaryMember"
{
}

void CPrimalSpaceFeaturesType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrimalSpaceFeaturesType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CSpaceLayerClassTypeType::CSpaceLayerClassTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSpaceLayerClassTypeType::CSpaceLayerClassTypeType(CSpaceLayerClassTypeType const& other)
: TypeBase(other.GetNode())
{
}


CSpaceLayerMemberType::CSpaceLayerMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SpaceLayer(*this)	// "SpaceLayer"
{
}

CSpaceLayerMemberType::CSpaceLayerMemberType(CSpaceLayerMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SpaceLayer(*this)	// "SpaceLayer"
{
}

void CSpaceLayerMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpaceLayerMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CSpaceLayerPropertyType::CSpaceLayerPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SpaceLayer(*this)	// "SpaceLayer"
{
}

CSpaceLayerPropertyType::CSpaceLayerPropertyType(CSpaceLayerPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, SpaceLayer(*this)	// "SpaceLayer"
{
}

void CSpaceLayerPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpaceLayerPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CSpaceLayerType::CSpaceLayerType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, usage(*this)	// "usage"
, terminationDate(*this)	// "terminationDate"
, function(*this)	// "function"
, creationDate(*this)	// "creationDate"
, class2(*this)	// "class"
, nodes(*this)	// "nodes"
, edges(*this)	// "edges"
{
}

CSpaceLayerType::CSpaceLayerType(CSpaceLayerType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, usage(*this)	// "usage"
, terminationDate(*this)	// "terminationDate"
, function(*this)	// "function"
, creationDate(*this)	// "creationDate"
, class2(*this)	// "class"
, nodes(*this)	// "nodes"
, edges(*this)	// "edges"
{
}

void CSpaceLayerType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpaceLayerType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CSpaceLayersType::CSpaceLayersType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, aggregationType(*this)	// "@aggregationType"
, spaceLayerMember(*this)	// "spaceLayerMember"
{
}

CSpaceLayersType::CSpaceLayersType(CSpaceLayersType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, aggregationType(*this)	// "@aggregationType"
, spaceLayerMember(*this)	// "spaceLayerMember"
{
}

void CSpaceLayersType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpaceLayersType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CStateMemberType::CStateMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, State(*this)	// "State"
{
}

CStateMemberType::CStateMemberType(CStateMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, State(*this)	// "State"
{
}

void CStateMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("StateMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CStatePropertyType::CStatePropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, State(*this)	// "State"
{
}

CStatePropertyType::CStatePropertyType(CStatePropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, State(*this)	// "State"
{
}

void CStatePropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("StatePropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CStateType::CStateType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, duality(*this)	// "duality"
, connects(*this)	// "connects"
, geometry(*this)	// "geometry"
{
}

CStateType::CStateType(CStateType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, duality(*this)	// "duality"
, connects(*this)	// "connects"
, geometry(*this)	// "geometry"
{
}

void CStateType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("StateType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CTransitionMemberType::CTransitionMemberType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transition(*this)	// "Transition"
{
}

CTransitionMemberType::CTransitionMemberType(CTransitionMemberType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureMemberType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transition(*this)	// "Transition"
{
}

void CTransitionMemberType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransitionMemberType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CTransitionPropertyType::CTransitionPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transition(*this)	// "Transition"
{
}

CTransitionPropertyType::CTransitionPropertyType(CTransitionPropertyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, Transition(*this)	// "Transition"
{
}

void CTransitionPropertyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransitionPropertyType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CTransitionType::CTransitionType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CAbstractFeatureType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, weight(*this)	// "weight"
, connects(*this)	// "connects"
, duality(*this)	// "duality"
, geometry(*this)	// "geometry"
{
}

CTransitionType::CTransitionType(CTransitionType const& other)
: ::indoorgmlcore::gml::CAbstractFeatureType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, weight(*this)	// "weight"
, connects(*this)	// "connects"
, duality(*this)	// "duality"
, geometry(*this)	// "geometry"
{
}

void CTransitionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransitionType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CexternalObjectReferenceType::CexternalObjectReferenceType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, name(*this)	// "name"
, uri(*this)	// "uri"
{
}

CexternalObjectReferenceType::CexternalObjectReferenceType(CexternalObjectReferenceType const& other)
: ElementType(other.GetNode())
, name(*this)	// "name"
, uri(*this)	// "uri"
{
}

void CexternalObjectReferenceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("externalObjectReferenceType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CtypeOfTopoExpressionCodeEnumerationType::CtypeOfTopoExpressionCodeEnumerationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtypeOfTopoExpressionCodeEnumerationType::CtypeOfTopoExpressionCodeEnumerationType(CtypeOfTopoExpressionCodeEnumerationType const& other)
: TypeBase(other.GetNode())
{
}


CtypeOfTopoExpressionCodeOtherType::CtypeOfTopoExpressionCodeOtherType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtypeOfTopoExpressionCodeOtherType::CtypeOfTopoExpressionCodeOtherType(CtypeOfTopoExpressionCodeOtherType const& other)
: TypeBase(other.GetNode())
{
}


CtypeOfTopoExpressionCodeType::CtypeOfTopoExpressionCodeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtypeOfTopoExpressionCodeType::CtypeOfTopoExpressionCodeType(CtypeOfTopoExpressionCodeType const& other)
: TypeBase(other.GetNode())
{
}


Cindoorgmlcore::Cindoorgmlcore(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, isoType(*this)	// "@isoType"
, nilReason(*this)	// "@nilReason"
, id(*this)	// "@id"
, remoteSchema(*this)	// "@remoteSchema"
, uom(*this)	// "@uom"
, actuate(*this)	// "@actuate"
, arcrole(*this)	// "@arcrole"
, from(*this)	// "@from"
, href(*this)	// "@href"
, label(*this)	// "@label"
, role(*this)	// "@role"
, show(*this)	// "@show"
, title(*this)	// "@title"
, to(*this)	// "@to"
, type(*this)	// "@type"
, base(*this)	// "@base"
, id2(*this)	// "@id"
, lang(*this)	// "@lang"
, space(*this)	// "@space"
, AbstractGenericName(*this)	// "AbstractGenericName"
, AbstractObject(*this)	// "AbstractObject"
, Angle(*this)	// "Angle"
, Binary(*this)	// "Binary"
, Boolean(*this)	// "Boolean"
, CharacterString(*this)	// "CharacterString"
, Date(*this)	// "Date"
, DateTime(*this)	// "DateTime"
, Decimal(*this)	// "Decimal"
, Distance(*this)	// "Distance"
, Integer(*this)	// "Integer"
, Length(*this)	// "Length"
, LocalName(*this)	// "LocalName"
, Measure(*this)	// "Measure"
, MemberName(*this)	// "MemberName"
, Multiplicity(*this)	// "Multiplicity"
, MultiplicityRange(*this)	// "MultiplicityRange"
, Real(*this)	// "Real"
, Record(*this)	// "Record"
, RecordType(*this)	// "RecordType"
, Scale(*this)	// "Scale"
, ScopedName(*this)	// "ScopedName"
, TypeName2(*this)	// "TypeName"
, UnlimitedInteger(*this)	// "UnlimitedInteger"
, AbstractDQ_Completeness(*this)	// "AbstractDQ_Completeness"
, AbstractDQ_Element(*this)	// "AbstractDQ_Element"
, AbstractDQ_LogicalConsistency(*this)	// "AbstractDQ_LogicalConsistency"
, AbstractDQ_PositionalAccuracy(*this)	// "AbstractDQ_PositionalAccuracy"
, AbstractDQ_Result(*this)	// "AbstractDQ_Result"
, AbstractDQ_TemporalAccuracy(*this)	// "AbstractDQ_TemporalAccuracy"
, AbstractDQ_ThematicAccuracy(*this)	// "AbstractDQ_ThematicAccuracy"
, AbstractDS_Aggregate(*this)	// "AbstractDS_Aggregate"
, AbstractEX_GeographicExtent(*this)	// "AbstractEX_GeographicExtent"
, AbstractMD_ContentInformation(*this)	// "AbstractMD_ContentInformation"
, AbstractMD_Identification(*this)	// "AbstractMD_Identification"
, AbstractMD_SpatialRepresentation(*this)	// "AbstractMD_SpatialRepresentation"
, AbstractRS_ReferenceSystem(*this)	// "AbstractRS_ReferenceSystem"
, CI_Address(*this)	// "CI_Address"
, CI_Citation(*this)	// "CI_Citation"
, CI_Contact(*this)	// "CI_Contact"
, CI_Date(*this)	// "CI_Date"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
, CI_OnlineResource(*this)	// "CI_OnlineResource"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
, CI_ResponsibleParty(*this)	// "CI_ResponsibleParty"
, CI_RoleCode(*this)	// "CI_RoleCode"
, CI_Series(*this)	// "CI_Series"
, CI_Telephone(*this)	// "CI_Telephone"
, Country(*this)	// "Country"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
, DQ_DataQuality(*this)	// "DQ_DataQuality"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
, DQ_Scope(*this)	// "DQ_Scope"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
, DS_Association(*this)	// "DS_Association"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
, DS_DataSet(*this)	// "DS_DataSet"
, DS_Initiative(*this)	// "DS_Initiative"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
, DS_Series(*this)	// "DS_Series"
, DS_StereoMate(*this)	// "DS_StereoMate"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
, EX_Extent(*this)	// "EX_Extent"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
, EX_TemporalExtent(*this)	// "EX_TemporalExtent"
, EX_VerticalExtent(*this)	// "EX_VerticalExtent"
, LI_Lineage(*this)	// "LI_Lineage"
, LI_ProcessStep(*this)	// "LI_ProcessStep"
, LI_Source(*this)	// "LI_Source"
, LanguageCode(*this)	// "LanguageCode"
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
, MD_AggregateInformation(*this)	// "MD_AggregateInformation"
, MD_ApplicationSchemaInformation(*this)	// "MD_ApplicationSchemaInformation"
, MD_Band(*this)	// "MD_Band"
, MD_BrowseGraphic(*this)	// "MD_BrowseGraphic"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
, MD_Constraints(*this)	// "MD_Constraints"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
, MD_DigitalTransferOptions(*this)	// "MD_DigitalTransferOptions"
, MD_Dimension(*this)	// "MD_Dimension"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
, MD_Distribution(*this)	// "MD_Distribution"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
, MD_Distributor(*this)	// "MD_Distributor"
, MD_ExtendedElementInformation(*this)	// "MD_ExtendedElementInformation"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
, MD_Format(*this)	// "MD_Format"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
, MD_GeometricObjects(*this)	// "MD_GeometricObjects"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_Identifier(*this)	// "MD_Identifier"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
, MD_Keywords(*this)	// "MD_Keywords"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
, MD_MaintenanceInformation(*this)	// "MD_MaintenanceInformation"
, MD_Medium(*this)	// "MD_Medium"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
, MD_Metadata(*this)	// "MD_Metadata"
, MD_MetadataExtensionInformation(*this)	// "MD_MetadataExtensionInformation"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
, MD_PortrayalCatalogueReference(*this)	// "MD_PortrayalCatalogueReference"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
, MD_RangeDimension(*this)	// "MD_RangeDimension"
, MD_ReferenceSystem(*this)	// "MD_ReferenceSystem"
, MD_RepresentativeFraction(*this)	// "MD_RepresentativeFraction"
, MD_Resolution(*this)	// "MD_Resolution"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
, MD_ScopeDescription(*this)	// "MD_ScopeDescription"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
, MD_StandardOrderProcess(*this)	// "MD_StandardOrderProcess"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
, MD_Usage(*this)	// "MD_Usage"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
, PT_FreeText(*this)	// "PT_FreeText"
, PT_Locale(*this)	// "PT_Locale"
, PT_LocaleContainer(*this)	// "PT_LocaleContainer"
, RS_Identifier(*this)	// "RS_Identifier"
, URL(*this)	// "URL"
, TM_PeriodDuration(*this)	// "TM_PeriodDuration"
, AbstractCRS(*this)	// "AbstractCRS"
, AbstractContinuousCoverage(*this)	// "AbstractContinuousCoverage"
, AbstractCoordinateOperation(*this)	// "AbstractCoordinateOperation"
, AbstractCoordinateSystem(*this)	// "AbstractCoordinateSystem"
, AbstractCoverage(*this)	// "AbstractCoverage"
, AbstractCurve(*this)	// "AbstractCurve"
, AbstractCurveSegment(*this)	// "AbstractCurveSegment"
, AbstractDatum(*this)	// "AbstractDatum"
, AbstractDiscreteCoverage(*this)	// "AbstractDiscreteCoverage"
, AbstractFeature(*this)	// "AbstractFeature"
, AbstractFeatureCollection(*this)	// "AbstractFeatureCollection"
, AbstractGML(*this)	// "AbstractGML"
, AbstractGeneralConversion(*this)	// "AbstractGeneralConversion"
, AbstractGeneralDerivedCRS(*this)	// "AbstractGeneralDerivedCRS"
, AbstractGeneralOperationParameter(*this)	// "AbstractGeneralOperationParameter"
, AbstractGeneralParameterValue(*this)	// "AbstractGeneralParameterValue"
, AbstractGeneralTransformation(*this)	// "AbstractGeneralTransformation"
, AbstractGeometricAggregate(*this)	// "AbstractGeometricAggregate"
, AbstractGeometricPrimitive(*this)	// "AbstractGeometricPrimitive"
, AbstractGeometry(*this)	// "AbstractGeometry"
, AbstractGriddedSurface(*this)	// "AbstractGriddedSurface"
, AbstractImplicitGeometry(*this)	// "AbstractImplicitGeometry"
, AbstractMetaData(*this)	// "AbstractMetaData"
, AbstractObject2(*this)	// "AbstractObject"
, AbstractOperation(*this)	// "AbstractOperation"
, AbstractParametricCurveSurface(*this)	// "AbstractParametricCurveSurface"
, AbstractRing(*this)	// "AbstractRing"
, AbstractScalarValue(*this)	// "AbstractScalarValue"
, AbstractScalarValueList(*this)	// "AbstractScalarValueList"
, AbstractSingleCRS(*this)	// "AbstractSingleCRS"
, AbstractSingleOperation(*this)	// "AbstractSingleOperation"
, AbstractSolid(*this)	// "AbstractSolid"
, AbstractSurface(*this)	// "AbstractSurface"
, AbstractSurfacePatch(*this)	// "AbstractSurfacePatch"
, AbstractTimeComplex(*this)	// "AbstractTimeComplex"
, AbstractTimeGeometricPrimitive(*this)	// "AbstractTimeGeometricPrimitive"
, AbstractTimeObject(*this)	// "AbstractTimeObject"
, AbstractTimePrimitive(*this)	// "AbstractTimePrimitive"
, AbstractTimeSlice(*this)	// "AbstractTimeSlice"
, AbstractTimeTopologyPrimitive(*this)	// "AbstractTimeTopologyPrimitive"
, AbstractTopoPrimitive(*this)	// "AbstractTopoPrimitive"
, AbstractTopology(*this)	// "AbstractTopology"
, AbstractValue(*this)	// "AbstractValue"
, AffineCS(*this)	// "AffineCS"
, AffinePlacement(*this)	// "AffinePlacement"
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, Array(*this)	// "Array"
, BSpline(*this)	// "BSpline"
, Bag(*this)	// "Bag"
, BaseUnit(*this)	// "BaseUnit"
, Bezier(*this)	// "Bezier"
, Boolean2(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, CartesianCS(*this)	// "CartesianCS"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeValue(*this)	// "CompositeValue"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, Cone(*this)	// "Cone"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, CubicSpline(*this)	// "CubicSpline"
, Curve(*this)	// "Curve"
, Cylinder(*this)	// "Cylinder"
, CylindricalCS(*this)	// "CylindricalCS"
, DataBlock(*this)	// "DataBlock"
, Definition(*this)	// "Definition"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, Edge(*this)	// "Edge"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Face(*this)	// "Face"
, FeatureCollection(*this)	// "FeatureCollection"
, File(*this)	// "File"
, GenericMetaData(*this)	// "GenericMetaData"
, GeocentricCRS(*this)	// "GeocentricCRS"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, GridCoverage(*this)	// "GridCoverage"
, GridFunction(*this)	// "GridFunction"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LineString(*this)	// "LineString"
, LineStringSegment(*this)	// "LineStringSegment"
, LinearCS(*this)	// "LinearCS"
, LinearRing(*this)	// "LinearRing"
, LocationKeyWord(*this)	// "LocationKeyWord"
, LocationString(*this)	// "LocationString"
, MappingRule(*this)	// "MappingRule"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
, MultiCurve(*this)	// "MultiCurve"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolid(*this)	// "MultiSolid"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurface(*this)	// "MultiSurface"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Node(*this)	// "Node"
, Null(*this)	// "Null"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, Observation(*this)	// "Observation"
, OffsetCurve(*this)	// "OffsetCurve"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Point(*this)	// "Point"
, PolarCS(*this)	// "PolarCS"
, Polygon(*this)	// "Polygon"
, PolygonPatch(*this)	// "PolygonPatch"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, Rectangle(*this)	// "Rectangle"
, RectifiedGrid(*this)	// "RectifiedGrid"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, Ring(*this)	// "Ring"
, SecondDefiningParameter(*this)	// "SecondDefiningParameter"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Sphere(*this)	// "Sphere"
, SphericalCS(*this)	// "SphericalCS"
, Surface(*this)	// "Surface"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeCalendarEra(*this)	// "TimeCalendarEra"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimeOrdinalEra(*this)	// "TimeOrdinalEra"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimePeriod(*this)	// "TimePeriod"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Tin(*this)	// "Tin"
, TopoComplex(*this)	// "TopoComplex"
, TopoCurve(*this)	// "TopoCurve"
, TopoPoint(*this)	// "TopoPoint"
, TopoSolid(*this)	// "TopoSolid"
, TopoSurface(*this)	// "TopoSurface"
, TopoVolume(*this)	// "TopoVolume"
, Transformation(*this)	// "Transformation"
, Triangle(*this)	// "Triangle"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, ValueArray(*this)	// "ValueArray"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
, abstractAssociationRole(*this)	// "abstractAssociationRole"
, abstractGeneralOperationParameterRef(*this)	// "abstractGeneralOperationParameterRef"
, abstractInlineProperty(*this)	// "abstractInlineProperty"
, abstractReference(*this)	// "abstractReference"
, abstractStrictAssociationRole(*this)	// "abstractStrictAssociationRole"
, affineCS2(*this)	// "affineCS"
, anchorDefinition(*this)	// "anchorDefinition"
, anchorPoint(*this)	// "anchorPoint"
, angle2(*this)	// "angle"
, associationName(*this)	// "associationName"
, axis(*this)	// "axis"
, axisAbbrev(*this)	// "axisAbbrev"
, axisDirection(*this)	// "axisDirection"
, baseCRS(*this)	// "baseCRS"
, baseCurve(*this)	// "baseCurve"
, baseGeodeticCRS(*this)	// "baseGeodeticCRS"
, baseGeographicCRS(*this)	// "baseGeographicCRS"
, baseSurface(*this)	// "baseSurface"
, booleanValue(*this)	// "booleanValue"
, boundedBy(*this)	// "boundedBy"
, cartesianCS2(*this)	// "cartesianCS"
, cartesianCSRef(*this)	// "cartesianCSRef"
, catalogSymbol(*this)	// "catalogSymbol"
, centerLineOf(*this)	// "centerLineOf"
, centerOf(*this)	// "centerOf"
, componentReferenceSystem(*this)	// "componentReferenceSystem"
, compoundCRSRef(*this)	// "compoundCRSRef"
, concatenatedOperationRef(*this)	// "concatenatedOperationRef"
, conversion2(*this)	// "conversion"
, conversionRef(*this)	// "conversionRef"
, conversionToPreferredUnit(*this)	// "conversionToPreferredUnit"
, coordOperation(*this)	// "coordOperation"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, coordinateOperationRef(*this)	// "coordinateOperationRef"
, coordinateSystem(*this)	// "coordinateSystem"
, coordinateSystemAxisRef(*this)	// "coordinateSystemAxisRef"
, coordinateSystemRef(*this)	// "coordinateSystemRef"
, coordinates(*this)	// "coordinates"
, coverageFunction(*this)	// "coverageFunction"
, crsRef(*this)	// "crsRef"
, curveArrayProperty(*this)	// "curveArrayProperty"
, curveMember(*this)	// "curveMember"
, curveMembers(*this)	// "curveMembers"
, curveProperty(*this)	// "curveProperty"
, cylindricalCS2(*this)	// "cylindricalCS"
, cylindricalCSRef(*this)	// "cylindricalCSRef"
, dataSource(*this)	// "dataSource"
, dataSourceReference(*this)	// "dataSourceReference"
, datumRef(*this)	// "datumRef"
, decimalMinutes(*this)	// "decimalMinutes"
, defaultCodeSpace(*this)	// "defaultCodeSpace"
, definedByConversion(*this)	// "definedByConversion"
, definitionMember(*this)	// "definitionMember"
, definitionRef(*this)	// "definitionRef"
, degrees(*this)	// "degrees"
, derivationUnitTerm(*this)	// "derivationUnitTerm"
, derivedCRSRef(*this)	// "derivedCRSRef"
, derivedCRSType(*this)	// "derivedCRSType"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, dictionaryEntry(*this)	// "dictionaryEntry"
, directedEdge(*this)	// "directedEdge"
, directedFace(*this)	// "directedFace"
, directedNode(*this)	// "directedNode"
, directedTopoSolid(*this)	// "directedTopoSolid"
, direction(*this)	// "direction"
, dmsAngle(*this)	// "dmsAngle"
, dmsAngleValue(*this)	// "dmsAngleValue"
, domainOfValidity(*this)	// "domainOfValidity"
, domainSet(*this)	// "domainSet"
, doubleOrNilReasonTupleList(*this)	// "doubleOrNilReasonTupleList"
, duration(*this)	// "duration"
, dynamicMembers(*this)	// "dynamicMembers"
, edgeOf(*this)	// "edgeOf"
, ellipsoid2(*this)	// "ellipsoid"
, ellipsoidRef(*this)	// "ellipsoidRef"
, ellipsoidalCS2(*this)	// "ellipsoidalCS"
, ellipsoidalCSRef(*this)	// "ellipsoidalCSRef"
, engineeringCRSRef(*this)	// "engineeringCRSRef"
, engineeringDatum2(*this)	// "engineeringDatum"
, engineeringDatumRef(*this)	// "engineeringDatumRef"
, extentOf(*this)	// "extentOf"
, exterior(*this)	// "exterior"
, featureMember(*this)	// "featureMember"
, featureMembers(*this)	// "featureMembers"
, featureProperty(*this)	// "featureProperty"
, formula(*this)	// "formula"
, formulaCitation(*this)	// "formulaCitation"
, generalConversionRef(*this)	// "generalConversionRef"
, generalOperationParameter(*this)	// "generalOperationParameter"
, generalTransformationRef(*this)	// "generalTransformationRef"
, geocentricCRSRef(*this)	// "geocentricCRSRef"
, geodeticDatum2(*this)	// "geodeticDatum"
, geodeticDatumRef(*this)	// "geodeticDatumRef"
, geographicCRSRef(*this)	// "geographicCRSRef"
, geometryMember(*this)	// "geometryMember"
, geometryMembers(*this)	// "geometryMembers"
, gmlProfileSchema(*this)	// "gmlProfileSchema"
, greenwichLongitude(*this)	// "greenwichLongitude"
, gridDomain(*this)	// "gridDomain"
, group(*this)	// "group"
, history(*this)	// "history"
, identifier(*this)	// "identifier"
, imageCRSRef(*this)	// "imageCRSRef"
, imageDatum2(*this)	// "imageDatum"
, imageDatumRef(*this)	// "imageDatumRef"
, includesParameter(*this)	// "includesParameter"
, includesSingleCRS(*this)	// "includesSingleCRS"
, includesValue(*this)	// "includesValue"
, indirectEntry(*this)	// "indirectEntry"
, integerValue(*this)	// "integerValue"
, integerValueList(*this)	// "integerValueList"
, interior(*this)	// "interior"
, linearCS2(*this)	// "linearCS"
, linearCSRef(*this)	// "linearCSRef"
, location(*this)	// "location"
, locationName(*this)	// "locationName"
, locationReference(*this)	// "locationReference"
, maximalComplex(*this)	// "maximalComplex"
, maximumOccurs(*this)	// "maximumOccurs"
, maximumValue(*this)	// "maximumValue"
, measure2(*this)	// "measure"
, member(*this)	// "member"
, members(*this)	// "members"
, metaDataProperty(*this)	// "metaDataProperty"
, method(*this)	// "method"
, methodFormula(*this)	// "methodFormula"
, minimumOccurs(*this)	// "minimumOccurs"
, minimumValue(*this)	// "minimumValue"
, minutes(*this)	// "minutes"
, modifiedCoordinate(*this)	// "modifiedCoordinate"
, multiCenterLineOf(*this)	// "multiCenterLineOf"
, multiCenterOf(*this)	// "multiCenterOf"
, multiCoverage(*this)	// "multiCoverage"
, multiCurveDomain(*this)	// "multiCurveDomain"
, multiCurveProperty(*this)	// "multiCurveProperty"
, multiEdgeOf(*this)	// "multiEdgeOf"
, multiExtentOf(*this)	// "multiExtentOf"
, multiGeometryProperty(*this)	// "multiGeometryProperty"
, multiLocation(*this)	// "multiLocation"
, multiPointDomain(*this)	// "multiPointDomain"
, multiPointProperty(*this)	// "multiPointProperty"
, multiPosition(*this)	// "multiPosition"
, multiSolidDomain(*this)	// "multiSolidDomain"
, multiSolidProperty(*this)	// "multiSolidProperty"
, multiSurfaceDomain(*this)	// "multiSurfaceDomain"
, multiSurfaceProperty(*this)	// "multiSurfaceProperty"
, name(*this)	// "name"
, obliqueCartesianCSRef(*this)	// "obliqueCartesianCSRef"
, operationMethodRef(*this)	// "operationMethodRef"
, operationParameter2(*this)	// "operationParameter"
, operationParameterGroupRef(*this)	// "operationParameterGroupRef"
, operationParameterRef(*this)	// "operationParameterRef"
, operationRef(*this)	// "operationRef"
, operationVersion(*this)	// "operationVersion"
, origin(*this)	// "origin"
, parameter(*this)	// "parameter"
, parameterValue2(*this)	// "parameterValue"
, passThroughOperationRef(*this)	// "passThroughOperationRef"
, patches(*this)	// "patches"
, pixelInCell(*this)	// "pixelInCell"
, pointArrayProperty(*this)	// "pointArrayProperty"
, pointMember(*this)	// "pointMember"
, pointMembers(*this)	// "pointMembers"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, polarCS2(*this)	// "polarCS"
, polarCSRef(*this)	// "polarCSRef"
, polygonPatches(*this)	// "polygonPatches"
, pos(*this)	// "pos"
, posList(*this)	// "posList"
, position(*this)	// "position"
, primeMeridian2(*this)	// "primeMeridian"
, primeMeridianRef(*this)	// "primeMeridianRef"
, priorityLocation(*this)	// "priorityLocation"
, projectedCRSRef(*this)	// "projectedCRSRef"
, quantityType(*this)	// "quantityType"
, quantityTypeReference(*this)	// "quantityTypeReference"
, rangeMeaning(*this)	// "rangeMeaning"
, rangeParameters(*this)	// "rangeParameters"
, rangeSet(*this)	// "rangeSet"
, realizationEpoch(*this)	// "realizationEpoch"
, rectifiedGridDomain(*this)	// "rectifiedGridDomain"
, referenceSystemRef(*this)	// "referenceSystemRef"
, remarks(*this)	// "remarks"
, resultOf(*this)	// "resultOf"
, reversePropertyName(*this)	// "reversePropertyName"
, roughConversionToPreferredUnit(*this)	// "roughConversionToPreferredUnit"
, scope(*this)	// "scope"
, secondDefiningParameter2(*this)	// "secondDefiningParameter"
, seconds(*this)	// "seconds"
, segments(*this)	// "segments"
, semiMajorAxis(*this)	// "semiMajorAxis"
, singleCRSRef(*this)	// "singleCRSRef"
, singleOperationRef(*this)	// "singleOperationRef"
, solidArrayProperty(*this)	// "solidArrayProperty"
, solidMember(*this)	// "solidMember"
, solidMembers(*this)	// "solidMembers"
, solidProperty(*this)	// "solidProperty"
, sourceCRS(*this)	// "sourceCRS"
, sourceDimensions(*this)	// "sourceDimensions"
, sphericalCS2(*this)	// "sphericalCS"
, sphericalCSRef(*this)	// "sphericalCSRef"
, status(*this)	// "status"
, statusReference(*this)	// "statusReference"
, stringValue(*this)	// "stringValue"
, subComplex(*this)	// "subComplex"
, subject(*this)	// "subject"
, superComplex(*this)	// "superComplex"
, surfaceArrayProperty(*this)	// "surfaceArrayProperty"
, surfaceMember(*this)	// "surfaceMember"
, surfaceMembers(*this)	// "surfaceMembers"
, surfaceProperty(*this)	// "surfaceProperty"
, target(*this)	// "target"
, targetCRS(*this)	// "targetCRS"
, targetDimensions(*this)	// "targetDimensions"
, targetElement(*this)	// "targetElement"
, temporalCRSRef(*this)	// "temporalCRSRef"
, temporalCSRef(*this)	// "temporalCSRef"
, temporalDatum2(*this)	// "temporalDatum"
, temporalDatumRef(*this)	// "temporalDatumRef"
, timeCS2(*this)	// "timeCS"
, timeInterval(*this)	// "timeInterval"
, timePosition(*this)	// "timePosition"
, topoComplexProperty(*this)	// "topoComplexProperty"
, topoCurveProperty(*this)	// "topoCurveProperty"
, topoPointProperty(*this)	// "topoPointProperty"
, topoPrimitiveMember(*this)	// "topoPrimitiveMember"
, topoPrimitiveMembers(*this)	// "topoPrimitiveMembers"
, topoSurfaceProperty(*this)	// "topoSurfaceProperty"
, topoVolumeProperty(*this)	// "topoVolumeProperty"
, track(*this)	// "track"
, transformationRef(*this)	// "transformationRef"
, trianglePatches(*this)	// "trianglePatches"
, tupleList(*this)	// "tupleList"
, unitOfMeasure(*this)	// "unitOfMeasure"
, userDefinedCS2(*this)	// "userDefinedCS"
, userDefinedCSRef(*this)	// "userDefinedCSRef"
, usesAffineCS(*this)	// "usesAffineCS"
, usesAxis(*this)	// "usesAxis"
, usesCS(*this)	// "usesCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, usesEllipsoid(*this)	// "usesEllipsoid"
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, usesEngineeringDatum(*this)	// "usesEngineeringDatum"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
, usesImageDatum(*this)	// "usesImageDatum"
, usesMethod(*this)	// "usesMethod"
, usesObliqueCartesianCS(*this)	// "usesObliqueCartesianCS"
, usesOperation(*this)	// "usesOperation"
, usesParameter(*this)	// "usesParameter"
, usesPrimeMeridian(*this)	// "usesPrimeMeridian"
, usesSingleOperation(*this)	// "usesSingleOperation"
, usesSphericalCS(*this)	// "usesSphericalCS"
, usesTemporalCS(*this)	// "usesTemporalCS"
, usesTemporalDatum(*this)	// "usesTemporalDatum"
, usesTimeCS(*this)	// "usesTimeCS"
, usesValue(*this)	// "usesValue"
, usesVerticalCS(*this)	// "usesVerticalCS"
, usesVerticalDatum(*this)	// "usesVerticalDatum"
, using2(*this)	// "using"
, validTime(*this)	// "validTime"
, value2(*this)	// "value"
, valueComponent(*this)	// "valueComponent"
, valueComponents(*this)	// "valueComponents"
, valueFile(*this)	// "valueFile"
, valueList(*this)	// "valueList"
, valueOfParameter(*this)	// "valueOfParameter"
, valueProperty(*this)	// "valueProperty"
, valuesOfGroup(*this)	// "valuesOfGroup"
, vector(*this)	// "vector"
, verticalCRSRef(*this)	// "verticalCRSRef"
, verticalCS2(*this)	// "verticalCS"
, verticalCSRef(*this)	// "verticalCSRef"
, verticalDatum2(*this)	// "verticalDatum"
, verticalDatumRef(*this)	// "verticalDatumRef"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
, arc2(*this)	// "arc"
, locator(*this)	// "locator"
, resource(*this)	// "resource"
, title2(*this)	// "title"
{
}

Cindoorgmlcore::Cindoorgmlcore(Cindoorgmlcore const& other)
: TypeBase(other.GetNode())
, isoType(*this)	// "@isoType"
, nilReason(*this)	// "@nilReason"
, id(*this)	// "@id"
, remoteSchema(*this)	// "@remoteSchema"
, uom(*this)	// "@uom"
, actuate(*this)	// "@actuate"
, arcrole(*this)	// "@arcrole"
, from(*this)	// "@from"
, href(*this)	// "@href"
, label(*this)	// "@label"
, role(*this)	// "@role"
, show(*this)	// "@show"
, title(*this)	// "@title"
, to(*this)	// "@to"
, type(*this)	// "@type"
, base(*this)	// "@base"
, id2(*this)	// "@id"
, lang(*this)	// "@lang"
, space(*this)	// "@space"
, AbstractGenericName(*this)	// "AbstractGenericName"
, AbstractObject(*this)	// "AbstractObject"
, Angle(*this)	// "Angle"
, Binary(*this)	// "Binary"
, Boolean(*this)	// "Boolean"
, CharacterString(*this)	// "CharacterString"
, Date(*this)	// "Date"
, DateTime(*this)	// "DateTime"
, Decimal(*this)	// "Decimal"
, Distance(*this)	// "Distance"
, Integer(*this)	// "Integer"
, Length(*this)	// "Length"
, LocalName(*this)	// "LocalName"
, Measure(*this)	// "Measure"
, MemberName(*this)	// "MemberName"
, Multiplicity(*this)	// "Multiplicity"
, MultiplicityRange(*this)	// "MultiplicityRange"
, Real(*this)	// "Real"
, Record(*this)	// "Record"
, RecordType(*this)	// "RecordType"
, Scale(*this)	// "Scale"
, ScopedName(*this)	// "ScopedName"
, TypeName2(*this)	// "TypeName"
, UnlimitedInteger(*this)	// "UnlimitedInteger"
, AbstractDQ_Completeness(*this)	// "AbstractDQ_Completeness"
, AbstractDQ_Element(*this)	// "AbstractDQ_Element"
, AbstractDQ_LogicalConsistency(*this)	// "AbstractDQ_LogicalConsistency"
, AbstractDQ_PositionalAccuracy(*this)	// "AbstractDQ_PositionalAccuracy"
, AbstractDQ_Result(*this)	// "AbstractDQ_Result"
, AbstractDQ_TemporalAccuracy(*this)	// "AbstractDQ_TemporalAccuracy"
, AbstractDQ_ThematicAccuracy(*this)	// "AbstractDQ_ThematicAccuracy"
, AbstractDS_Aggregate(*this)	// "AbstractDS_Aggregate"
, AbstractEX_GeographicExtent(*this)	// "AbstractEX_GeographicExtent"
, AbstractMD_ContentInformation(*this)	// "AbstractMD_ContentInformation"
, AbstractMD_Identification(*this)	// "AbstractMD_Identification"
, AbstractMD_SpatialRepresentation(*this)	// "AbstractMD_SpatialRepresentation"
, AbstractRS_ReferenceSystem(*this)	// "AbstractRS_ReferenceSystem"
, CI_Address(*this)	// "CI_Address"
, CI_Citation(*this)	// "CI_Citation"
, CI_Contact(*this)	// "CI_Contact"
, CI_Date(*this)	// "CI_Date"
, CI_DateTypeCode(*this)	// "CI_DateTypeCode"
, CI_OnLineFunctionCode(*this)	// "CI_OnLineFunctionCode"
, CI_OnlineResource(*this)	// "CI_OnlineResource"
, CI_PresentationFormCode(*this)	// "CI_PresentationFormCode"
, CI_ResponsibleParty(*this)	// "CI_ResponsibleParty"
, CI_RoleCode(*this)	// "CI_RoleCode"
, CI_Series(*this)	// "CI_Series"
, CI_Telephone(*this)	// "CI_Telephone"
, Country(*this)	// "Country"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_AccuracyOfATimeMeasurement(*this)	// "DQ_AccuracyOfATimeMeasurement"
, DQ_CompletenessCommission(*this)	// "DQ_CompletenessCommission"
, DQ_CompletenessOmission(*this)	// "DQ_CompletenessOmission"
, DQ_ConceptualConsistency(*this)	// "DQ_ConceptualConsistency"
, DQ_ConformanceResult(*this)	// "DQ_ConformanceResult"
, DQ_DataQuality(*this)	// "DQ_DataQuality"
, DQ_DomainConsistency(*this)	// "DQ_DomainConsistency"
, DQ_EvaluationMethodTypeCode(*this)	// "DQ_EvaluationMethodTypeCode"
, DQ_FormatConsistency(*this)	// "DQ_FormatConsistency"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_NonQuantitativeAttributeAccuracy(*this)	// "DQ_NonQuantitativeAttributeAccuracy"
, DQ_QuantitativeAttributeAccuracy(*this)	// "DQ_QuantitativeAttributeAccuracy"
, DQ_QuantitativeResult(*this)	// "DQ_QuantitativeResult"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
, DQ_Scope(*this)	// "DQ_Scope"
, DQ_TemporalConsistency(*this)	// "DQ_TemporalConsistency"
, DQ_TemporalValidity(*this)	// "DQ_TemporalValidity"
, DQ_ThematicClassificationCorrectness(*this)	// "DQ_ThematicClassificationCorrectness"
, DQ_TopologicalConsistency(*this)	// "DQ_TopologicalConsistency"
, DS_Association(*this)	// "DS_Association"
, DS_AssociationTypeCode(*this)	// "DS_AssociationTypeCode"
, DS_DataSet(*this)	// "DS_DataSet"
, DS_Initiative(*this)	// "DS_Initiative"
, DS_InitiativeTypeCode(*this)	// "DS_InitiativeTypeCode"
, DS_OtherAggregate(*this)	// "DS_OtherAggregate"
, DS_Platform(*this)	// "DS_Platform"
, DS_ProductionSeries(*this)	// "DS_ProductionSeries"
, DS_Sensor(*this)	// "DS_Sensor"
, DS_Series(*this)	// "DS_Series"
, DS_StereoMate(*this)	// "DS_StereoMate"
, EX_BoundingPolygon(*this)	// "EX_BoundingPolygon"
, EX_Extent(*this)	// "EX_Extent"
, EX_GeographicBoundingBox(*this)	// "EX_GeographicBoundingBox"
, EX_GeographicDescription(*this)	// "EX_GeographicDescription"
, EX_SpatialTemporalExtent(*this)	// "EX_SpatialTemporalExtent"
, EX_TemporalExtent(*this)	// "EX_TemporalExtent"
, EX_VerticalExtent(*this)	// "EX_VerticalExtent"
, LI_Lineage(*this)	// "LI_Lineage"
, LI_ProcessStep(*this)	// "LI_ProcessStep"
, LI_Source(*this)	// "LI_Source"
, LanguageCode(*this)	// "LanguageCode"
, LocalisedCharacterString(*this)	// "LocalisedCharacterString"
, MD_AggregateInformation(*this)	// "MD_AggregateInformation"
, MD_ApplicationSchemaInformation(*this)	// "MD_ApplicationSchemaInformation"
, MD_Band(*this)	// "MD_Band"
, MD_BrowseGraphic(*this)	// "MD_BrowseGraphic"
, MD_CellGeometryCode(*this)	// "MD_CellGeometryCode"
, MD_CharacterSetCode(*this)	// "MD_CharacterSetCode"
, MD_ClassificationCode(*this)	// "MD_ClassificationCode"
, MD_Constraints(*this)	// "MD_Constraints"
, MD_CoverageContentTypeCode(*this)	// "MD_CoverageContentTypeCode"
, MD_CoverageDescription(*this)	// "MD_CoverageDescription"
, MD_DataIdentification(*this)	// "MD_DataIdentification"
, MD_DatatypeCode(*this)	// "MD_DatatypeCode"
, MD_DigitalTransferOptions(*this)	// "MD_DigitalTransferOptions"
, MD_Dimension(*this)	// "MD_Dimension"
, MD_DimensionNameTypeCode(*this)	// "MD_DimensionNameTypeCode"
, MD_Distribution(*this)	// "MD_Distribution"
, MD_DistributionUnits(*this)	// "MD_DistributionUnits"
, MD_Distributor(*this)	// "MD_Distributor"
, MD_ExtendedElementInformation(*this)	// "MD_ExtendedElementInformation"
, MD_FeatureCatalogueDescription(*this)	// "MD_FeatureCatalogueDescription"
, MD_Format(*this)	// "MD_Format"
, MD_GeometricObjectTypeCode(*this)	// "MD_GeometricObjectTypeCode"
, MD_GeometricObjects(*this)	// "MD_GeometricObjects"
, MD_Georectified(*this)	// "MD_Georectified"
, MD_Georeferenceable(*this)	// "MD_Georeferenceable"
, MD_GridSpatialRepresentation(*this)	// "MD_GridSpatialRepresentation"
, MD_Identifier(*this)	// "MD_Identifier"
, MD_ImageDescription(*this)	// "MD_ImageDescription"
, MD_ImagingConditionCode(*this)	// "MD_ImagingConditionCode"
, MD_KeywordTypeCode(*this)	// "MD_KeywordTypeCode"
, MD_Keywords(*this)	// "MD_Keywords"
, MD_LegalConstraints(*this)	// "MD_LegalConstraints"
, MD_MaintenanceFrequencyCode(*this)	// "MD_MaintenanceFrequencyCode"
, MD_MaintenanceInformation(*this)	// "MD_MaintenanceInformation"
, MD_Medium(*this)	// "MD_Medium"
, MD_MediumFormatCode(*this)	// "MD_MediumFormatCode"
, MD_MediumNameCode(*this)	// "MD_MediumNameCode"
, MD_Metadata(*this)	// "MD_Metadata"
, MD_MetadataExtensionInformation(*this)	// "MD_MetadataExtensionInformation"
, MD_ObligationCode(*this)	// "MD_ObligationCode"
, MD_PixelOrientationCode(*this)	// "MD_PixelOrientationCode"
, MD_PortrayalCatalogueReference(*this)	// "MD_PortrayalCatalogueReference"
, MD_ProgressCode(*this)	// "MD_ProgressCode"
, MD_RangeDimension(*this)	// "MD_RangeDimension"
, MD_ReferenceSystem(*this)	// "MD_ReferenceSystem"
, MD_RepresentativeFraction(*this)	// "MD_RepresentativeFraction"
, MD_Resolution(*this)	// "MD_Resolution"
, MD_RestrictionCode(*this)	// "MD_RestrictionCode"
, MD_ScopeCode(*this)	// "MD_ScopeCode"
, MD_ScopeDescription(*this)	// "MD_ScopeDescription"
, MD_SecurityConstraints(*this)	// "MD_SecurityConstraints"
, MD_ServiceIdentification(*this)	// "MD_ServiceIdentification"
, MD_SpatialRepresentationTypeCode(*this)	// "MD_SpatialRepresentationTypeCode"
, MD_StandardOrderProcess(*this)	// "MD_StandardOrderProcess"
, MD_TopicCategoryCode(*this)	// "MD_TopicCategoryCode"
, MD_TopologyLevelCode(*this)	// "MD_TopologyLevelCode"
, MD_Usage(*this)	// "MD_Usage"
, MD_VectorSpatialRepresentation(*this)	// "MD_VectorSpatialRepresentation"
, PT_FreeText(*this)	// "PT_FreeText"
, PT_Locale(*this)	// "PT_Locale"
, PT_LocaleContainer(*this)	// "PT_LocaleContainer"
, RS_Identifier(*this)	// "RS_Identifier"
, URL(*this)	// "URL"
, TM_PeriodDuration(*this)	// "TM_PeriodDuration"
, AbstractCRS(*this)	// "AbstractCRS"
, AbstractContinuousCoverage(*this)	// "AbstractContinuousCoverage"
, AbstractCoordinateOperation(*this)	// "AbstractCoordinateOperation"
, AbstractCoordinateSystem(*this)	// "AbstractCoordinateSystem"
, AbstractCoverage(*this)	// "AbstractCoverage"
, AbstractCurve(*this)	// "AbstractCurve"
, AbstractCurveSegment(*this)	// "AbstractCurveSegment"
, AbstractDatum(*this)	// "AbstractDatum"
, AbstractDiscreteCoverage(*this)	// "AbstractDiscreteCoverage"
, AbstractFeature(*this)	// "AbstractFeature"
, AbstractFeatureCollection(*this)	// "AbstractFeatureCollection"
, AbstractGML(*this)	// "AbstractGML"
, AbstractGeneralConversion(*this)	// "AbstractGeneralConversion"
, AbstractGeneralDerivedCRS(*this)	// "AbstractGeneralDerivedCRS"
, AbstractGeneralOperationParameter(*this)	// "AbstractGeneralOperationParameter"
, AbstractGeneralParameterValue(*this)	// "AbstractGeneralParameterValue"
, AbstractGeneralTransformation(*this)	// "AbstractGeneralTransformation"
, AbstractGeometricAggregate(*this)	// "AbstractGeometricAggregate"
, AbstractGeometricPrimitive(*this)	// "AbstractGeometricPrimitive"
, AbstractGeometry(*this)	// "AbstractGeometry"
, AbstractGriddedSurface(*this)	// "AbstractGriddedSurface"
, AbstractImplicitGeometry(*this)	// "AbstractImplicitGeometry"
, AbstractMetaData(*this)	// "AbstractMetaData"
, AbstractObject2(*this)	// "AbstractObject"
, AbstractOperation(*this)	// "AbstractOperation"
, AbstractParametricCurveSurface(*this)	// "AbstractParametricCurveSurface"
, AbstractRing(*this)	// "AbstractRing"
, AbstractScalarValue(*this)	// "AbstractScalarValue"
, AbstractScalarValueList(*this)	// "AbstractScalarValueList"
, AbstractSingleCRS(*this)	// "AbstractSingleCRS"
, AbstractSingleOperation(*this)	// "AbstractSingleOperation"
, AbstractSolid(*this)	// "AbstractSolid"
, AbstractSurface(*this)	// "AbstractSurface"
, AbstractSurfacePatch(*this)	// "AbstractSurfacePatch"
, AbstractTimeComplex(*this)	// "AbstractTimeComplex"
, AbstractTimeGeometricPrimitive(*this)	// "AbstractTimeGeometricPrimitive"
, AbstractTimeObject(*this)	// "AbstractTimeObject"
, AbstractTimePrimitive(*this)	// "AbstractTimePrimitive"
, AbstractTimeSlice(*this)	// "AbstractTimeSlice"
, AbstractTimeTopologyPrimitive(*this)	// "AbstractTimeTopologyPrimitive"
, AbstractTopoPrimitive(*this)	// "AbstractTopoPrimitive"
, AbstractTopology(*this)	// "AbstractTopology"
, AbstractValue(*this)	// "AbstractValue"
, AffineCS(*this)	// "AffineCS"
, AffinePlacement(*this)	// "AffinePlacement"
, Arc(*this)	// "Arc"
, ArcByBulge(*this)	// "ArcByBulge"
, ArcByCenterPoint(*this)	// "ArcByCenterPoint"
, ArcString(*this)	// "ArcString"
, ArcStringByBulge(*this)	// "ArcStringByBulge"
, Array(*this)	// "Array"
, BSpline(*this)	// "BSpline"
, Bag(*this)	// "Bag"
, BaseUnit(*this)	// "BaseUnit"
, Bezier(*this)	// "Bezier"
, Boolean2(*this)	// "Boolean"
, BooleanList(*this)	// "BooleanList"
, CartesianCS(*this)	// "CartesianCS"
, Category(*this)	// "Category"
, CategoryExtent(*this)	// "CategoryExtent"
, CategoryList(*this)	// "CategoryList"
, Circle(*this)	// "Circle"
, CircleByCenterPoint(*this)	// "CircleByCenterPoint"
, Clothoid(*this)	// "Clothoid"
, CompositeCurve(*this)	// "CompositeCurve"
, CompositeSolid(*this)	// "CompositeSolid"
, CompositeSurface(*this)	// "CompositeSurface"
, CompositeValue(*this)	// "CompositeValue"
, CompoundCRS(*this)	// "CompoundCRS"
, ConcatenatedOperation(*this)	// "ConcatenatedOperation"
, Cone(*this)	// "Cone"
, ConventionalUnit(*this)	// "ConventionalUnit"
, Conversion(*this)	// "Conversion"
, CoordinateSystemAxis(*this)	// "CoordinateSystemAxis"
, Count(*this)	// "Count"
, CountExtent(*this)	// "CountExtent"
, CountList(*this)	// "CountList"
, CoverageMappingRule(*this)	// "CoverageMappingRule"
, CubicSpline(*this)	// "CubicSpline"
, Curve(*this)	// "Curve"
, Cylinder(*this)	// "Cylinder"
, CylindricalCS(*this)	// "CylindricalCS"
, DataBlock(*this)	// "DataBlock"
, Definition(*this)	// "Definition"
, DefinitionCollection(*this)	// "DefinitionCollection"
, DefinitionProxy(*this)	// "DefinitionProxy"
, DerivedCRS(*this)	// "DerivedCRS"
, DerivedUnit(*this)	// "DerivedUnit"
, Dictionary(*this)	// "Dictionary"
, DirectedObservation(*this)	// "DirectedObservation"
, DirectedObservationAtDistance(*this)	// "DirectedObservationAtDistance"
, DynamicFeature(*this)	// "DynamicFeature"
, DynamicFeatureCollection(*this)	// "DynamicFeatureCollection"
, Edge(*this)	// "Edge"
, Ellipsoid(*this)	// "Ellipsoid"
, EllipsoidalCS(*this)	// "EllipsoidalCS"
, EngineeringCRS(*this)	// "EngineeringCRS"
, EngineeringDatum(*this)	// "EngineeringDatum"
, Envelope(*this)	// "Envelope"
, EnvelopeWithTimePeriod(*this)	// "EnvelopeWithTimePeriod"
, Face(*this)	// "Face"
, FeatureCollection(*this)	// "FeatureCollection"
, File(*this)	// "File"
, GenericMetaData(*this)	// "GenericMetaData"
, GeocentricCRS(*this)	// "GeocentricCRS"
, Geodesic(*this)	// "Geodesic"
, GeodesicString(*this)	// "GeodesicString"
, GeodeticCRS(*this)	// "GeodeticCRS"
, GeodeticDatum(*this)	// "GeodeticDatum"
, GeographicCRS(*this)	// "GeographicCRS"
, GeometricComplex(*this)	// "GeometricComplex"
, Grid(*this)	// "Grid"
, GridCoverage(*this)	// "GridCoverage"
, GridFunction(*this)	// "GridFunction"
, ImageCRS(*this)	// "ImageCRS"
, ImageDatum(*this)	// "ImageDatum"
, LineString(*this)	// "LineString"
, LineStringSegment(*this)	// "LineStringSegment"
, LinearCS(*this)	// "LinearCS"
, LinearRing(*this)	// "LinearRing"
, LocationKeyWord(*this)	// "LocationKeyWord"
, LocationString(*this)	// "LocationString"
, MappingRule(*this)	// "MappingRule"
, MovingObjectStatus(*this)	// "MovingObjectStatus"
, MultiCurve(*this)	// "MultiCurve"
, MultiCurveCoverage(*this)	// "MultiCurveCoverage"
, MultiGeometry(*this)	// "MultiGeometry"
, MultiPoint(*this)	// "MultiPoint"
, MultiPointCoverage(*this)	// "MultiPointCoverage"
, MultiSolid(*this)	// "MultiSolid"
, MultiSolidCoverage(*this)	// "MultiSolidCoverage"
, MultiSurface(*this)	// "MultiSurface"
, MultiSurfaceCoverage(*this)	// "MultiSurfaceCoverage"
, Node(*this)	// "Node"
, Null(*this)	// "Null"
, ObliqueCartesianCS(*this)	// "ObliqueCartesianCS"
, Observation(*this)	// "Observation"
, OffsetCurve(*this)	// "OffsetCurve"
, OperationMethod(*this)	// "OperationMethod"
, OperationParameter(*this)	// "OperationParameter"
, OperationParameterGroup(*this)	// "OperationParameterGroup"
, OrientableCurve(*this)	// "OrientableCurve"
, OrientableSurface(*this)	// "OrientableSurface"
, ParameterValue(*this)	// "ParameterValue"
, ParameterValueGroup(*this)	// "ParameterValueGroup"
, PassThroughOperation(*this)	// "PassThroughOperation"
, Point(*this)	// "Point"
, PolarCS(*this)	// "PolarCS"
, Polygon(*this)	// "Polygon"
, PolygonPatch(*this)	// "PolygonPatch"
, PolyhedralSurface(*this)	// "PolyhedralSurface"
, PrimeMeridian(*this)	// "PrimeMeridian"
, ProjectedCRS(*this)	// "ProjectedCRS"
, Quantity(*this)	// "Quantity"
, QuantityExtent(*this)	// "QuantityExtent"
, QuantityList(*this)	// "QuantityList"
, Rectangle(*this)	// "Rectangle"
, RectifiedGrid(*this)	// "RectifiedGrid"
, RectifiedGridCoverage(*this)	// "RectifiedGridCoverage"
, Ring(*this)	// "Ring"
, SecondDefiningParameter(*this)	// "SecondDefiningParameter"
, Shell(*this)	// "Shell"
, Solid(*this)	// "Solid"
, Sphere(*this)	// "Sphere"
, SphericalCS(*this)	// "SphericalCS"
, Surface(*this)	// "Surface"
, TemporalCRS(*this)	// "TemporalCRS"
, TemporalCS(*this)	// "TemporalCS"
, TemporalDatum(*this)	// "TemporalDatum"
, TimeCS(*this)	// "TimeCS"
, TimeCalendar(*this)	// "TimeCalendar"
, TimeCalendarEra(*this)	// "TimeCalendarEra"
, TimeClock(*this)	// "TimeClock"
, TimeCoordinateSystem(*this)	// "TimeCoordinateSystem"
, TimeEdge(*this)	// "TimeEdge"
, TimeInstant(*this)	// "TimeInstant"
, TimeNode(*this)	// "TimeNode"
, TimeOrdinalEra(*this)	// "TimeOrdinalEra"
, TimeOrdinalReferenceSystem(*this)	// "TimeOrdinalReferenceSystem"
, TimePeriod(*this)	// "TimePeriod"
, TimeReferenceSystem(*this)	// "TimeReferenceSystem"
, TimeTopologyComplex(*this)	// "TimeTopologyComplex"
, Tin(*this)	// "Tin"
, TopoComplex(*this)	// "TopoComplex"
, TopoCurve(*this)	// "TopoCurve"
, TopoPoint(*this)	// "TopoPoint"
, TopoSolid(*this)	// "TopoSolid"
, TopoSurface(*this)	// "TopoSurface"
, TopoVolume(*this)	// "TopoVolume"
, Transformation(*this)	// "Transformation"
, Triangle(*this)	// "Triangle"
, TriangulatedSurface(*this)	// "TriangulatedSurface"
, UnitDefinition(*this)	// "UnitDefinition"
, UserDefinedCS(*this)	// "UserDefinedCS"
, ValueArray(*this)	// "ValueArray"
, VerticalCRS(*this)	// "VerticalCRS"
, VerticalCS(*this)	// "VerticalCS"
, VerticalDatum(*this)	// "VerticalDatum"
, abstractAssociationRole(*this)	// "abstractAssociationRole"
, abstractGeneralOperationParameterRef(*this)	// "abstractGeneralOperationParameterRef"
, abstractInlineProperty(*this)	// "abstractInlineProperty"
, abstractReference(*this)	// "abstractReference"
, abstractStrictAssociationRole(*this)	// "abstractStrictAssociationRole"
, affineCS2(*this)	// "affineCS"
, anchorDefinition(*this)	// "anchorDefinition"
, anchorPoint(*this)	// "anchorPoint"
, angle2(*this)	// "angle"
, associationName(*this)	// "associationName"
, axis(*this)	// "axis"
, axisAbbrev(*this)	// "axisAbbrev"
, axisDirection(*this)	// "axisDirection"
, baseCRS(*this)	// "baseCRS"
, baseCurve(*this)	// "baseCurve"
, baseGeodeticCRS(*this)	// "baseGeodeticCRS"
, baseGeographicCRS(*this)	// "baseGeographicCRS"
, baseSurface(*this)	// "baseSurface"
, booleanValue(*this)	// "booleanValue"
, boundedBy(*this)	// "boundedBy"
, cartesianCS2(*this)	// "cartesianCS"
, cartesianCSRef(*this)	// "cartesianCSRef"
, catalogSymbol(*this)	// "catalogSymbol"
, centerLineOf(*this)	// "centerLineOf"
, centerOf(*this)	// "centerOf"
, componentReferenceSystem(*this)	// "componentReferenceSystem"
, compoundCRSRef(*this)	// "compoundCRSRef"
, concatenatedOperationRef(*this)	// "concatenatedOperationRef"
, conversion2(*this)	// "conversion"
, conversionRef(*this)	// "conversionRef"
, conversionToPreferredUnit(*this)	// "conversionToPreferredUnit"
, coordOperation(*this)	// "coordOperation"
, coordinateOperationAccuracy(*this)	// "coordinateOperationAccuracy"
, coordinateOperationRef(*this)	// "coordinateOperationRef"
, coordinateSystem(*this)	// "coordinateSystem"
, coordinateSystemAxisRef(*this)	// "coordinateSystemAxisRef"
, coordinateSystemRef(*this)	// "coordinateSystemRef"
, coordinates(*this)	// "coordinates"
, coverageFunction(*this)	// "coverageFunction"
, crsRef(*this)	// "crsRef"
, curveArrayProperty(*this)	// "curveArrayProperty"
, curveMember(*this)	// "curveMember"
, curveMembers(*this)	// "curveMembers"
, curveProperty(*this)	// "curveProperty"
, cylindricalCS2(*this)	// "cylindricalCS"
, cylindricalCSRef(*this)	// "cylindricalCSRef"
, dataSource(*this)	// "dataSource"
, dataSourceReference(*this)	// "dataSourceReference"
, datumRef(*this)	// "datumRef"
, decimalMinutes(*this)	// "decimalMinutes"
, defaultCodeSpace(*this)	// "defaultCodeSpace"
, definedByConversion(*this)	// "definedByConversion"
, definitionMember(*this)	// "definitionMember"
, definitionRef(*this)	// "definitionRef"
, degrees(*this)	// "degrees"
, derivationUnitTerm(*this)	// "derivationUnitTerm"
, derivedCRSRef(*this)	// "derivedCRSRef"
, derivedCRSType(*this)	// "derivedCRSType"
, description(*this)	// "description"
, descriptionReference(*this)	// "descriptionReference"
, dictionaryEntry(*this)	// "dictionaryEntry"
, directedEdge(*this)	// "directedEdge"
, directedFace(*this)	// "directedFace"
, directedNode(*this)	// "directedNode"
, directedTopoSolid(*this)	// "directedTopoSolid"
, direction(*this)	// "direction"
, dmsAngle(*this)	// "dmsAngle"
, dmsAngleValue(*this)	// "dmsAngleValue"
, domainOfValidity(*this)	// "domainOfValidity"
, domainSet(*this)	// "domainSet"
, doubleOrNilReasonTupleList(*this)	// "doubleOrNilReasonTupleList"
, duration(*this)	// "duration"
, dynamicMembers(*this)	// "dynamicMembers"
, edgeOf(*this)	// "edgeOf"
, ellipsoid2(*this)	// "ellipsoid"
, ellipsoidRef(*this)	// "ellipsoidRef"
, ellipsoidalCS2(*this)	// "ellipsoidalCS"
, ellipsoidalCSRef(*this)	// "ellipsoidalCSRef"
, engineeringCRSRef(*this)	// "engineeringCRSRef"
, engineeringDatum2(*this)	// "engineeringDatum"
, engineeringDatumRef(*this)	// "engineeringDatumRef"
, extentOf(*this)	// "extentOf"
, exterior(*this)	// "exterior"
, featureMember(*this)	// "featureMember"
, featureMembers(*this)	// "featureMembers"
, featureProperty(*this)	// "featureProperty"
, formula(*this)	// "formula"
, formulaCitation(*this)	// "formulaCitation"
, generalConversionRef(*this)	// "generalConversionRef"
, generalOperationParameter(*this)	// "generalOperationParameter"
, generalTransformationRef(*this)	// "generalTransformationRef"
, geocentricCRSRef(*this)	// "geocentricCRSRef"
, geodeticDatum2(*this)	// "geodeticDatum"
, geodeticDatumRef(*this)	// "geodeticDatumRef"
, geographicCRSRef(*this)	// "geographicCRSRef"
, geometryMember(*this)	// "geometryMember"
, geometryMembers(*this)	// "geometryMembers"
, gmlProfileSchema(*this)	// "gmlProfileSchema"
, greenwichLongitude(*this)	// "greenwichLongitude"
, gridDomain(*this)	// "gridDomain"
, group(*this)	// "group"
, history(*this)	// "history"
, identifier(*this)	// "identifier"
, imageCRSRef(*this)	// "imageCRSRef"
, imageDatum2(*this)	// "imageDatum"
, imageDatumRef(*this)	// "imageDatumRef"
, includesParameter(*this)	// "includesParameter"
, includesSingleCRS(*this)	// "includesSingleCRS"
, includesValue(*this)	// "includesValue"
, indirectEntry(*this)	// "indirectEntry"
, integerValue(*this)	// "integerValue"
, integerValueList(*this)	// "integerValueList"
, interior(*this)	// "interior"
, linearCS2(*this)	// "linearCS"
, linearCSRef(*this)	// "linearCSRef"
, location(*this)	// "location"
, locationName(*this)	// "locationName"
, locationReference(*this)	// "locationReference"
, maximalComplex(*this)	// "maximalComplex"
, maximumOccurs(*this)	// "maximumOccurs"
, maximumValue(*this)	// "maximumValue"
, measure2(*this)	// "measure"
, member(*this)	// "member"
, members(*this)	// "members"
, metaDataProperty(*this)	// "metaDataProperty"
, method(*this)	// "method"
, methodFormula(*this)	// "methodFormula"
, minimumOccurs(*this)	// "minimumOccurs"
, minimumValue(*this)	// "minimumValue"
, minutes(*this)	// "minutes"
, modifiedCoordinate(*this)	// "modifiedCoordinate"
, multiCenterLineOf(*this)	// "multiCenterLineOf"
, multiCenterOf(*this)	// "multiCenterOf"
, multiCoverage(*this)	// "multiCoverage"
, multiCurveDomain(*this)	// "multiCurveDomain"
, multiCurveProperty(*this)	// "multiCurveProperty"
, multiEdgeOf(*this)	// "multiEdgeOf"
, multiExtentOf(*this)	// "multiExtentOf"
, multiGeometryProperty(*this)	// "multiGeometryProperty"
, multiLocation(*this)	// "multiLocation"
, multiPointDomain(*this)	// "multiPointDomain"
, multiPointProperty(*this)	// "multiPointProperty"
, multiPosition(*this)	// "multiPosition"
, multiSolidDomain(*this)	// "multiSolidDomain"
, multiSolidProperty(*this)	// "multiSolidProperty"
, multiSurfaceDomain(*this)	// "multiSurfaceDomain"
, multiSurfaceProperty(*this)	// "multiSurfaceProperty"
, name(*this)	// "name"
, obliqueCartesianCSRef(*this)	// "obliqueCartesianCSRef"
, operationMethodRef(*this)	// "operationMethodRef"
, operationParameter2(*this)	// "operationParameter"
, operationParameterGroupRef(*this)	// "operationParameterGroupRef"
, operationParameterRef(*this)	// "operationParameterRef"
, operationRef(*this)	// "operationRef"
, operationVersion(*this)	// "operationVersion"
, origin(*this)	// "origin"
, parameter(*this)	// "parameter"
, parameterValue2(*this)	// "parameterValue"
, passThroughOperationRef(*this)	// "passThroughOperationRef"
, patches(*this)	// "patches"
, pixelInCell(*this)	// "pixelInCell"
, pointArrayProperty(*this)	// "pointArrayProperty"
, pointMember(*this)	// "pointMember"
, pointMembers(*this)	// "pointMembers"
, pointProperty(*this)	// "pointProperty"
, pointRep(*this)	// "pointRep"
, polarCS2(*this)	// "polarCS"
, polarCSRef(*this)	// "polarCSRef"
, polygonPatches(*this)	// "polygonPatches"
, pos(*this)	// "pos"
, posList(*this)	// "posList"
, position(*this)	// "position"
, primeMeridian2(*this)	// "primeMeridian"
, primeMeridianRef(*this)	// "primeMeridianRef"
, priorityLocation(*this)	// "priorityLocation"
, projectedCRSRef(*this)	// "projectedCRSRef"
, quantityType(*this)	// "quantityType"
, quantityTypeReference(*this)	// "quantityTypeReference"
, rangeMeaning(*this)	// "rangeMeaning"
, rangeParameters(*this)	// "rangeParameters"
, rangeSet(*this)	// "rangeSet"
, realizationEpoch(*this)	// "realizationEpoch"
, rectifiedGridDomain(*this)	// "rectifiedGridDomain"
, referenceSystemRef(*this)	// "referenceSystemRef"
, remarks(*this)	// "remarks"
, resultOf(*this)	// "resultOf"
, reversePropertyName(*this)	// "reversePropertyName"
, roughConversionToPreferredUnit(*this)	// "roughConversionToPreferredUnit"
, scope(*this)	// "scope"
, secondDefiningParameter2(*this)	// "secondDefiningParameter"
, seconds(*this)	// "seconds"
, segments(*this)	// "segments"
, semiMajorAxis(*this)	// "semiMajorAxis"
, singleCRSRef(*this)	// "singleCRSRef"
, singleOperationRef(*this)	// "singleOperationRef"
, solidArrayProperty(*this)	// "solidArrayProperty"
, solidMember(*this)	// "solidMember"
, solidMembers(*this)	// "solidMembers"
, solidProperty(*this)	// "solidProperty"
, sourceCRS(*this)	// "sourceCRS"
, sourceDimensions(*this)	// "sourceDimensions"
, sphericalCS2(*this)	// "sphericalCS"
, sphericalCSRef(*this)	// "sphericalCSRef"
, status(*this)	// "status"
, statusReference(*this)	// "statusReference"
, stringValue(*this)	// "stringValue"
, subComplex(*this)	// "subComplex"
, subject(*this)	// "subject"
, superComplex(*this)	// "superComplex"
, surfaceArrayProperty(*this)	// "surfaceArrayProperty"
, surfaceMember(*this)	// "surfaceMember"
, surfaceMembers(*this)	// "surfaceMembers"
, surfaceProperty(*this)	// "surfaceProperty"
, target(*this)	// "target"
, targetCRS(*this)	// "targetCRS"
, targetDimensions(*this)	// "targetDimensions"
, targetElement(*this)	// "targetElement"
, temporalCRSRef(*this)	// "temporalCRSRef"
, temporalCSRef(*this)	// "temporalCSRef"
, temporalDatum2(*this)	// "temporalDatum"
, temporalDatumRef(*this)	// "temporalDatumRef"
, timeCS2(*this)	// "timeCS"
, timeInterval(*this)	// "timeInterval"
, timePosition(*this)	// "timePosition"
, topoComplexProperty(*this)	// "topoComplexProperty"
, topoCurveProperty(*this)	// "topoCurveProperty"
, topoPointProperty(*this)	// "topoPointProperty"
, topoPrimitiveMember(*this)	// "topoPrimitiveMember"
, topoPrimitiveMembers(*this)	// "topoPrimitiveMembers"
, topoSurfaceProperty(*this)	// "topoSurfaceProperty"
, topoVolumeProperty(*this)	// "topoVolumeProperty"
, track(*this)	// "track"
, transformationRef(*this)	// "transformationRef"
, trianglePatches(*this)	// "trianglePatches"
, tupleList(*this)	// "tupleList"
, unitOfMeasure(*this)	// "unitOfMeasure"
, userDefinedCS2(*this)	// "userDefinedCS"
, userDefinedCSRef(*this)	// "userDefinedCSRef"
, usesAffineCS(*this)	// "usesAffineCS"
, usesAxis(*this)	// "usesAxis"
, usesCS(*this)	// "usesCS"
, usesCartesianCS(*this)	// "usesCartesianCS"
, usesEllipsoid(*this)	// "usesEllipsoid"
, usesEllipsoidalCS(*this)	// "usesEllipsoidalCS"
, usesEngineeringDatum(*this)	// "usesEngineeringDatum"
, usesGeodeticDatum(*this)	// "usesGeodeticDatum"
, usesImageDatum(*this)	// "usesImageDatum"
, usesMethod(*this)	// "usesMethod"
, usesObliqueCartesianCS(*this)	// "usesObliqueCartesianCS"
, usesOperation(*this)	// "usesOperation"
, usesParameter(*this)	// "usesParameter"
, usesPrimeMeridian(*this)	// "usesPrimeMeridian"
, usesSingleOperation(*this)	// "usesSingleOperation"
, usesSphericalCS(*this)	// "usesSphericalCS"
, usesTemporalCS(*this)	// "usesTemporalCS"
, usesTemporalDatum(*this)	// "usesTemporalDatum"
, usesTimeCS(*this)	// "usesTimeCS"
, usesValue(*this)	// "usesValue"
, usesVerticalCS(*this)	// "usesVerticalCS"
, usesVerticalDatum(*this)	// "usesVerticalDatum"
, using2(*this)	// "using"
, validTime(*this)	// "validTime"
, value2(*this)	// "value"
, valueComponent(*this)	// "valueComponent"
, valueComponents(*this)	// "valueComponents"
, valueFile(*this)	// "valueFile"
, valueList(*this)	// "valueList"
, valueOfParameter(*this)	// "valueOfParameter"
, valueProperty(*this)	// "valueProperty"
, valuesOfGroup(*this)	// "valuesOfGroup"
, vector(*this)	// "vector"
, verticalCRSRef(*this)	// "verticalCRSRef"
, verticalCS2(*this)	// "verticalCS"
, verticalCSRef(*this)	// "verticalCSRef"
, verticalDatum2(*this)	// "verticalDatum"
, verticalDatumRef(*this)	// "verticalDatumRef"
, CellSpace(*this)	// "CellSpace"
, CellSpaceBoundary(*this)	// "CellSpaceBoundary"
, IndoorFeatures(*this)	// "IndoorFeatures"
, InterLayerConnection(*this)	// "InterLayerConnection"
, MultiLayeredGraph(*this)	// "MultiLayeredGraph"
, PrimalSpaceFeatures(*this)	// "PrimalSpaceFeatures"
, SpaceLayer(*this)	// "SpaceLayer"
, State(*this)	// "State"
, Transition(*this)	// "Transition"
, arc2(*this)	// "arc"
, locator(*this)	// "locator"
, resource(*this)	// "resource"
, title2(*this)	// "title"
{
}

void Cindoorgmlcore::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("indoorgmlcore"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

Cindoorgmlcore Cindoorgmlcore::LoadFromFile(const string_type& fileName)
{
	return Cindoorgmlcore(MsxmlTreeOperations::LoadDocument(fileName));
}

Cindoorgmlcore Cindoorgmlcore::LoadFromString(const string_type& text)
{
	return Cindoorgmlcore(MsxmlTreeOperations::LoadXml(text));
}

void Cindoorgmlcore::SaveToFile(const string_type& fileName, bool prettyPrint)
{
	SaveToFile(fileName, prettyPrint, false);
}

void Cindoorgmlcore::SaveToFile(const string_type& fileName, bool prettyPrint, bool omitXmlDecl)
{
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, omitXmlDecl, _T("UTF-8"), false, false);
}

void Cindoorgmlcore::SaveToFile(const string_type& fileName, bool prettyPrint, const string_type& encoding)
{
	std::vector<unsigned char> result;
	string_type sTmpEnc( encoding);
	std::transform( sTmpEnc.begin(), sTmpEnc.end(), sTmpEnc.begin(), _totupper);
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, encoding, _tcscmp(sTmpEnc.c_str(), _T("UTF-16BE")) == 0, _tcscmp(sTmpEnc.c_str(), _T("UTF-16")) == 0);
}

void Cindoorgmlcore::SaveToFile(const string_type& fileName, bool prettyPrint, bool omitXmlDecl, const string_type& encoding)
{
	std::vector<unsigned char> result;
	string_type sTmpEnc( encoding);
	std::transform( sTmpEnc.begin(), sTmpEnc.end(), sTmpEnc.begin(), _totupper);
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, omitXmlDecl, encoding, _tcscmp(sTmpEnc.c_str(), _T("UTF-16BE")) == 0, _tcscmp(sTmpEnc.c_str(), _T("UTF-16")) == 0);
}

void Cindoorgmlcore::SaveToFile(const string_type& fileName, bool prettyPrint, const string_type& encoding, bool bBigEndian, bool bBOM)
{
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, encoding, bBigEndian, bBOM);
}



string_type Cindoorgmlcore::SaveToString(bool prettyPrint, bool omitXmlDecl)
{
	return MsxmlTreeOperations::SaveXml(GetDocumentNode(), prettyPrint, omitXmlDecl);
}



string_type Cindoorgmlcore::SaveToString(bool prettyPrint)
{
	return SaveToString(prettyPrint,false);
}

Cindoorgmlcore Cindoorgmlcore::CreateDocument()
{
	return MsxmlTreeOperations::CreateDocument();
}

void Cindoorgmlcore::DestroyDocument()
{
	MsxmlTreeOperations::DocumentType doc = GetDocumentNode();
	MsxmlTreeOperations::FreeDocument(doc);
	m_node = 0;
}

void Cindoorgmlcore::SetDTDLocation(const string_type& dtdLocation)
{

	throw altova::InvalidOperationException(_T("This operation is not supported by MSXML."));

}

void Cindoorgmlcore::SetSchemaLocation(const string_type& schemaLocation)
{

	// find root element
	MSXML2::IXMLDOMNodePtr node = GetNode()->firstChild;
	while (node != 0 && node->nodeType != MSXML2::NODE_ELEMENT)
		node = node->nextSibling;

	if (node == 0)
		throw altova::InvalidOperationException(_T("You have to add a root element before setting schema location."));

	MSXML2::IXMLDOMElementPtr rootElement = node;
	string_type namespaceURI;
	if( rootElement->namespaceURI.length() > 0 )
		namespaceURI = rootElement->namespaceURI;

	
	
	if (namespaceURI.empty())
		MsxmlTreeOperations::SetAttribute(rootElement, _T("xsi:noNamespaceSchemaLocation"), _T("http://www.w3.org/2001/XMLSchema-instance"), schemaLocation);
	else
		MsxmlTreeOperations::SetAttribute(rootElement, _T("xsi:schemaLocation"), _T("http://www.w3.org/2001/XMLSchema-instance"), namespaceURI + _T(" ") + schemaLocation);

}

void Cindoorgmlcore::DeclareAllNamespacesFromSchema(ElementType& node)
{
	int i = 0;
	auto ns = ::indoorgmlcore::namespaces[i++];
	while (ns.Binder)
	{
		if (!string_type(ns.NamespaceURI).empty())
			node.DeclareNamespace(ns.Prefix, ns.NamespaceURI);
		ns = ::indoorgmlcore::namespaces[i++];
	}
}

Cindoorgmlcore Cindoorgmlcore::LoadFromBinary(const std::vector<unsigned char>& data)
{
	return MsxmlTreeOperations::LoadFromBinary(data);
}


std::vector<unsigned char> Cindoorgmlcore::SaveToBinary(bool prettyPrint)
{
	return MsxmlTreeOperations::SaveToBinary((MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint);
}

std::vector<unsigned char> Cindoorgmlcore::SaveToBinary(bool prettyPrint, const string_type& encoding)
{
	std::vector<unsigned char> result;
    string_type sTmpEnc( encoding);
    std::transform( sTmpEnc.begin(), sTmpEnc.end(), sTmpEnc.begin(), _totupper);
	MsxmlTreeOperations::SaveToBinary(result, (MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint, encoding, _tcscmp(sTmpEnc.c_str(), _T("UTF-16BE")) == 0, _tcscmp(sTmpEnc.c_str(), _T("UTF-16")) == 0);
	return result;
}

std::vector<unsigned char> Cindoorgmlcore::SaveToBinary(bool prettyPrint, const string_type& encoding, bool bBigEndian, bool bBOM)
{
	std::vector<unsigned char> result;
	MsxmlTreeOperations::SaveToBinary(result, (MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint, encoding, bBigEndian, bBOM);
	return result;
}



ClangType::ClangType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ClangType::ClangType(ClangType const& other)
: TypeBase(other.GetNode())
{
}


ClangType2::ClangType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ClangType2::ClangType2(ClangType2 const& other)
: TypeBase(other.GetNode())
{
}


CspaceType::CspaceType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CspaceType::CspaceType(CspaceType const& other)
: TypeBase(other.GetNode())
{
}


CBooleanType::CBooleanType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CbooleanType(node)
, nilReason(*this)	// "@nilReason"
{
}

CBooleanType::CBooleanType(CBooleanType const& other)
: ::indoorgmlcore::xs::CbooleanType(other.GetNode())
, nilReason(*this)	// "@nilReason"
{
}

void CBooleanType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("boolean"), _T("http://www.w3.org/2001/XMLSchema"));
}

CCategoryType::CCategoryType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CCodeType(node)
, nilReason(*this)	// "@nilReason"
{
}

CCategoryType::CCategoryType(CCategoryType const& other)
: ::indoorgmlcore::gml::CCodeType(other.GetNode())
, nilReason(*this)	// "@nilReason"
{
}

void CCategoryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("string"), _T("http://www.w3.org/2001/XMLSchema"));
}

CCountType::CCountType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::xs::CintegerType(node)
, nilReason(*this)	// "@nilReason"
{
}

CCountType::CCountType(CCountType const& other)
: ::indoorgmlcore::xs::CintegerType(other.GetNode())
, nilReason(*this)	// "@nilReason"
{
}

void CCountType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("integer"), _T("http://www.w3.org/2001/XMLSchema"));
}

CQuantityType::CQuantityType(MSXML2::IXMLDOMNodePtr const& node)
: ::indoorgmlcore::gml::CMeasureType(node)
, nilReason(*this)	// "@nilReason"
{
}

CQuantityType::CQuantityType(CQuantityType const& other)
: ::indoorgmlcore::gml::CMeasureType(other.GetNode())
, nilReason(*this)	// "@nilReason"
{
}

void CQuantityType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("double"), _T("http://www.w3.org/2001/XMLSchema"));
}

CSecondDefiningParameterType::CSecondDefiningParameterType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, inverseFlattening(*this)	// "inverseFlattening"
, semiMinorAxis(*this)	// "semiMinorAxis"
, isSphere(*this)	// "isSphere"
{
}

CSecondDefiningParameterType::CSecondDefiningParameterType(CSecondDefiningParameterType const& other)
: ElementType(other.GetNode())
, inverseFlattening(*this)	// "inverseFlattening"
, semiMinorAxis(*this)	// "semiMinorAxis"
, isSphere(*this)	// "isSphere"
{
}


CcoordinateOperationAccuracyType::CcoordinateOperationAccuracyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}

CcoordinateOperationAccuracyType::CcoordinateOperationAccuracyType(CcoordinateOperationAccuracyType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, DQ_AbsoluteExternalPositionalAccuracy(*this)	// "DQ_AbsoluteExternalPositionalAccuracy"
, DQ_GriddedDataPositionalAccuracy(*this)	// "DQ_GriddedDataPositionalAccuracy"
, DQ_RelativeInternalPositionalAccuracy(*this)	// "DQ_RelativeInternalPositionalAccuracy"
{
}


CdomainOfValidityType::CdomainOfValidityType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EX_Extent(*this)	// "EX_Extent"
{
}

CdomainOfValidityType::CdomainOfValidityType(CdomainOfValidityType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, EX_Extent(*this)	// "EX_Extent"
{
}


CformulaCitationType::CformulaCitationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CI_Citation(*this)	// "CI_Citation"
{
}

CformulaCitationType::CformulaCitationType(CformulaCitationType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, nilReason(*this)	// "@nilReason"
, remoteSchema(*this)	// "@remoteSchema"
, CI_Citation(*this)	// "CI_Citation"
{
}


CsecondDefiningParameterType2::CsecondDefiningParameterType2(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, SecondDefiningParameter(*this)	// "SecondDefiningParameter"
{
}

CsecondDefiningParameterType2::CsecondDefiningParameterType2(CsecondDefiningParameterType2 const& other)
: ElementType(other.GetNode())
, SecondDefiningParameter(*this)	// "SecondDefiningParameter"
{
}


CtypeOfTopoExpressionCodeTypeType::CtypeOfTopoExpressionCodeTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CtypeOfTopoExpressionCodeTypeType::CtypeOfTopoExpressionCodeTypeType(CtypeOfTopoExpressionCodeTypeType const& other)
: ElementType(other.GetNode())
{
}

void CtypeOfTopoExpressionCodeTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("typeOfTopoExpressionCodeType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

CSpaceLayerClassTypeTypeType::CSpaceLayerClassTypeTypeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CSpaceLayerClassTypeTypeType::CSpaceLayerClassTypeTypeType(CSpaceLayerClassTypeTypeType const& other)
: ElementType(other.GetNode())
{
}

void CSpaceLayerClassTypeTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpaceLayerClassTypeType"), _T("http://www.opengis.net/indoorgml/1.0/core"));
}

namespace xlink
{	

CactuateType::CactuateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CactuateType::CactuateType(CactuateType const& other)
: TypeBase(other.GetNode())
{
}


CarcType::CarcType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, from(*this)	// "@from"
, to(*this)	// "@to"
{
}

CarcType::CarcType(CarcType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
, from(*this)	// "@from"
, to(*this)	// "@to"
{
}

void CarcType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("arcType"), _T("http://www.w3.org/1999/xlink"));
}

CarcroleType::CarcroleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CarcroleType::CarcroleType(CarcroleType const& other)
: TypeBase(other.GetNode())
{
}


Cextended::Cextended(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, role(*this)	// "@role"
, title(*this)	// "@title"
{
}

Cextended::Cextended(Cextended const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, role(*this)	// "@role"
, title(*this)	// "@title"
{
}

void Cextended::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("extended"), _T("http://www.w3.org/1999/xlink"));
}

CfromType::CfromType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CfromType::CfromType(CfromType const& other)
: TypeBase(other.GetNode())
{
}


ChrefType::ChrefType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ChrefType::ChrefType(ChrefType const& other)
: TypeBase(other.GetNode())
{
}


ClabelType::ClabelType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ClabelType::ClabelType(ClabelType const& other)
: TypeBase(other.GetNode())
{
}


ClocatorType::ClocatorType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, title(*this)	// "@title"
, label(*this)	// "@label"
{
}

ClocatorType::ClocatorType(ClocatorType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, title(*this)	// "@title"
, label(*this)	// "@label"
{
}

void ClocatorType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("locatorType"), _T("http://www.w3.org/1999/xlink"));
}

CresourceType::CresourceType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, role(*this)	// "@role"
, title(*this)	// "@title"
, label(*this)	// "@label"
{
}

CresourceType::CresourceType(CresourceType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, role(*this)	// "@role"
, title(*this)	// "@title"
, label(*this)	// "@label"
{
}

void CresourceType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("resourceType"), _T("http://www.w3.org/1999/xlink"));
}

CroleType::CroleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CroleType::CroleType(CroleType const& other)
: TypeBase(other.GetNode())
{
}


CshowType::CshowType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CshowType::CshowType(CshowType const& other)
: TypeBase(other.GetNode())
{
}


Csimple::Csimple(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
{
}

Csimple::Csimple(Csimple const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, href(*this)	// "@href"
, role(*this)	// "@role"
, arcrole(*this)	// "@arcrole"
, title(*this)	// "@title"
, show(*this)	// "@show"
, actuate(*this)	// "@actuate"
{
}

void Csimple::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("simple"), _T("http://www.w3.org/1999/xlink"));
}

CtitleAttrType::CtitleAttrType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtitleAttrType::CtitleAttrType(CtitleAttrType const& other)
: TypeBase(other.GetNode())
{
}


CtitleEltType::CtitleEltType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
, type(*this)	// "@type"
, lang(*this)	// "@lang"
{
}

CtitleEltType::CtitleEltType(CtitleEltType const& other)
: ElementType(other.GetNode())
, type(*this)	// "@type"
, lang(*this)	// "@lang"
{
}

void CtitleEltType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("titleEltType"), _T("http://www.w3.org/1999/xlink"));
}

CtoType::CtoType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtoType::CtoType(CtoType const& other)
: TypeBase(other.GetNode())
{
}


CtypeType::CtypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtypeType::CtypeType(CtypeType const& other)
: TypeBase(other.GetNode())
{
}


} // namespace xlink


namespace xs
{	

CENTITIES::CENTITIES(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CENTITIES::CENTITIES(CENTITIES const& other)
: TypeBase(other.GetNode())
{
}


CENTITY::CENTITY(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CENTITY::CENTITY(CENTITY const& other)
: TypeBase(other.GetNode())
{
}


CID::CID(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CID::CID(CID const& other)
: TypeBase(other.GetNode())
{
}


CIDREF::CIDREF(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CIDREF::CIDREF(CIDREF const& other)
: TypeBase(other.GetNode())
{
}


CIDREFS::CIDREFS(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CIDREFS::CIDREFS(CIDREFS const& other)
: TypeBase(other.GetNode())
{
}


CNCName::CNCName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNCName::CNCName(CNCName const& other)
: TypeBase(other.GetNode())
{
}


CNMTOKEN::CNMTOKEN(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNMTOKEN::CNMTOKEN(CNMTOKEN const& other)
: TypeBase(other.GetNode())
{
}


CNMTOKENS::CNMTOKENS(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNMTOKENS::CNMTOKENS(CNMTOKENS const& other)
: TypeBase(other.GetNode())
{
}


CNOTATION::CNOTATION(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNOTATION::CNOTATION(CNOTATION const& other)
: TypeBase(other.GetNode())
{
}


CName::CName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CName::CName(CName const& other)
: TypeBase(other.GetNode())
{
}


CQName::CQName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CQName::CQName(CQName const& other)
: TypeBase(other.GetNode())
{
}


CanySimpleType::CanySimpleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CanySimpleType::CanySimpleType(CanySimpleType const& other)
: TypeBase(other.GetNode())
{
}


CanyType::CanyType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CanyType::CanyType(CanyType const& other)
: ElementType(other.GetNode())
{
}

void CanyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("anyType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CanyURI::CanyURI(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CanyURI::CanyURI(CanyURI const& other)
: TypeBase(other.GetNode())
{
}


Cbase64Binary::Cbase64Binary(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cbase64Binary::Cbase64Binary(Cbase64Binary const& other)
: TypeBase(other.GetNode())
{
}


Cboolean::Cboolean(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cboolean::Cboolean(Cboolean const& other)
: TypeBase(other.GetNode())
{
}


Cbyte::Cbyte(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cbyte::Cbyte(Cbyte const& other)
: TypeBase(other.GetNode())
{
}


Cdate::Cdate(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdate::Cdate(Cdate const& other)
: TypeBase(other.GetNode())
{
}


CdateTime::CdateTime(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdateTime::CdateTime(CdateTime const& other)
: TypeBase(other.GetNode())
{
}


Cdecimal::Cdecimal(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdecimal::Cdecimal(Cdecimal const& other)
: TypeBase(other.GetNode())
{
}


Cdouble::Cdouble(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdouble::Cdouble(Cdouble const& other)
: TypeBase(other.GetNode())
{
}


Cduration::Cduration(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cduration::Cduration(Cduration const& other)
: TypeBase(other.GetNode())
{
}


Cfloat::Cfloat(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cfloat::Cfloat(Cfloat const& other)
: TypeBase(other.GetNode())
{
}


CgDay::CgDay(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgDay::CgDay(CgDay const& other)
: TypeBase(other.GetNode())
{
}


CgMonth::CgMonth(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgMonth::CgMonth(CgMonth const& other)
: TypeBase(other.GetNode())
{
}


CgMonthDay::CgMonthDay(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgMonthDay::CgMonthDay(CgMonthDay const& other)
: TypeBase(other.GetNode())
{
}


CgYear::CgYear(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgYear::CgYear(CgYear const& other)
: TypeBase(other.GetNode())
{
}


CgYearMonth::CgYearMonth(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgYearMonth::CgYearMonth(CgYearMonth const& other)
: TypeBase(other.GetNode())
{
}


ChexBinary::ChexBinary(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ChexBinary::ChexBinary(ChexBinary const& other)
: TypeBase(other.GetNode())
{
}


Cint::Cint(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cint::Cint(Cint const& other)
: TypeBase(other.GetNode())
{
}


Cinteger::Cinteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cinteger::Cinteger(Cinteger const& other)
: TypeBase(other.GetNode())
{
}


Clanguage::Clanguage(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Clanguage::Clanguage(Clanguage const& other)
: TypeBase(other.GetNode())
{
}


Clong::Clong(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Clong::Clong(Clong const& other)
: TypeBase(other.GetNode())
{
}


CnegativeInteger::CnegativeInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnegativeInteger::CnegativeInteger(CnegativeInteger const& other)
: TypeBase(other.GetNode())
{
}


CnonNegativeInteger::CnonNegativeInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnonNegativeInteger::CnonNegativeInteger(CnonNegativeInteger const& other)
: TypeBase(other.GetNode())
{
}


CnonPositiveInteger::CnonPositiveInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnonPositiveInteger::CnonPositiveInteger(CnonPositiveInteger const& other)
: TypeBase(other.GetNode())
{
}


CnormalizedString::CnormalizedString(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnormalizedString::CnormalizedString(CnormalizedString const& other)
: TypeBase(other.GetNode())
{
}


CpositiveInteger::CpositiveInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CpositiveInteger::CpositiveInteger(CpositiveInteger const& other)
: TypeBase(other.GetNode())
{
}


Cshort::Cshort(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cshort::Cshort(Cshort const& other)
: TypeBase(other.GetNode())
{
}


Cstring::Cstring(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cstring::Cstring(Cstring const& other)
: TypeBase(other.GetNode())
{
}


Ctime::Ctime(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Ctime::Ctime(Ctime const& other)
: TypeBase(other.GetNode())
{
}


Ctoken::Ctoken(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Ctoken::Ctoken(Ctoken const& other)
: TypeBase(other.GetNode())
{
}


CunsignedByte::CunsignedByte(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedByte::CunsignedByte(CunsignedByte const& other)
: TypeBase(other.GetNode())
{
}


CunsignedInt::CunsignedInt(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedInt::CunsignedInt(CunsignedInt const& other)
: TypeBase(other.GetNode())
{
}


CunsignedLong::CunsignedLong(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedLong::CunsignedLong(CunsignedLong const& other)
: TypeBase(other.GetNode())
{
}


CunsignedShort::CunsignedShort(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedShort::CunsignedShort(CunsignedShort const& other)
: TypeBase(other.GetNode())
{
}


CbooleanType::CbooleanType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CbooleanType::CbooleanType(CbooleanType const& other)
: ElementType(other.GetNode())
{
}

void CbooleanType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("boolean"), _T("http://www.w3.org/2001/XMLSchema"));
}

CstringType::CstringType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CstringType::CstringType(CstringType const& other)
: ElementType(other.GetNode())
{
}

void CstringType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("string"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdateTimeType::CdateTimeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdateTimeType::CdateTimeType(CdateTimeType const& other)
: ElementType(other.GetNode())
{
}

void CdateTimeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("dateTime"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdecimalType::CdecimalType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdecimalType::CdecimalType(CdecimalType const& other)
: ElementType(other.GetNode())
{
}

void CdecimalType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("decimal"), _T("http://www.w3.org/2001/XMLSchema"));
}

CintegerType::CintegerType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CintegerType::CintegerType(CintegerType const& other)
: ElementType(other.GetNode())
{
}

void CintegerType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("integer"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdoubleType::CdoubleType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdoubleType::CdoubleType(CdoubleType const& other)
: ElementType(other.GetNode())
{
}

void CdoubleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("double"), _T("http://www.w3.org/2001/XMLSchema"));
}

CanyURIType::CanyURIType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CanyURIType::CanyURIType(CanyURIType const& other)
: ElementType(other.GetNode())
{
}

void CanyURIType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("anyURI"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdurationType::CdurationType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdurationType::CdurationType(CdurationType const& other)
: ElementType(other.GetNode())
{
}

void CdurationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("duration"), _T("http://www.w3.org/2001/XMLSchema"));
}

CpositiveIntegerType::CpositiveIntegerType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CpositiveIntegerType::CpositiveIntegerType(CpositiveIntegerType const& other)
: ElementType(other.GetNode())
{
}

void CpositiveIntegerType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("positiveInteger"), _T("http://www.w3.org/2001/XMLSchema"));
}

CnonNegativeIntegerType::CnonNegativeIntegerType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CnonNegativeIntegerType::CnonNegativeIntegerType(CnonNegativeIntegerType const& other)
: ElementType(other.GetNode())
{
}

void CnonNegativeIntegerType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("nonNegativeInteger"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdateType::CdateType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CdateType::CdateType(CdateType const& other)
: ElementType(other.GetNode())
{
}

void CdateType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("date"), _T("http://www.w3.org/2001/XMLSchema"));
}

CtimeType::CtimeType(MSXML2::IXMLDOMNodePtr const& node)
: ElementType(node)
{
}

CtimeType::CtimeType(CtimeType const& other)
: ElementType(other.GetNode())
{
}

void CtimeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("time"), _T("http://www.w3.org/2001/XMLSchema"));
}

} // namespace xs


namespace xml
{	

} // namespace xml


namespace gco
{	

void CBinary_Type::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CCodeListValue_Type::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CRecordType_Type::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CUnlimitedInteger_Type::operator=(const unsigned __int64& value) { 
	CnonNegativeIntegerType::operator=(value);
}

void CDate_TypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gco_altova_CDate_TypeType_altova_unnamed, value);
}

CDate_TypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gco_altova_CDate_TypeType_altova_unnamed);
}

} // namespace gco


namespace gmd
{	

void CLocalisedCharacterString_Type::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

int CMD_ObligationCode_TypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_ObligationCode_TypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_gmd_altova_CMD_ObligationCode_Type].Facets + 1, 3);
}

void CMD_ObligationCode_TypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_gmd_altova_CMD_ObligationCode_TypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_gmd_altova_CMD_ObligationCode_Type].Facets + 1, 3) );
}

void CMD_ObligationCode_TypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gmd_altova_CMD_ObligationCode_TypeType_altova_unnamed, value);
}

CMD_ObligationCode_TypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_ObligationCode_TypeType_altova_unnamed);
}

int CMD_PixelOrientationCode_TypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_PixelOrientationCode_TypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_gmd_altova_CMD_PixelOrientationCode_Type].Facets + 1, 5);
}

void CMD_PixelOrientationCode_TypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_gmd_altova_CMD_PixelOrientationCode_TypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_gmd_altova_CMD_PixelOrientationCode_Type].Facets + 1, 5) );
}

void CMD_PixelOrientationCode_TypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gmd_altova_CMD_PixelOrientationCode_TypeType_altova_unnamed, value);
}

CMD_PixelOrientationCode_TypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_PixelOrientationCode_TypeType_altova_unnamed);
}

int CMD_TopicCategoryCode_TypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_TopicCategoryCode_TypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_gmd_altova_CMD_TopicCategoryCode_Type].Facets + 1, 19);
}

void CMD_TopicCategoryCode_TypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_gmd_altova_CMD_TopicCategoryCode_TypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_gmd_altova_CMD_TopicCategoryCode_Type].Facets + 1, 19) );
}

void CMD_TopicCategoryCode_TypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gmd_altova_CMD_TopicCategoryCode_TypeType_altova_unnamed, value);
}

CMD_TopicCategoryCode_TypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gmd_altova_CMD_TopicCategoryCode_TypeType_altova_unnamed);
}

} // namespace gmd


namespace gsr
{	

} // namespace gsr


namespace gss
{	

} // namespace gss


namespace gts
{	

} // namespace gts


namespace gml
{	

void CAbstractMetaDataType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CAbstractMetaDataType_altova_unnamed, value);
}

CAbstractMetaDataType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CAbstractMetaDataType_altova_unnamed);
}

void CAngleType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CAreaType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CCategoryExtentType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CCategoryExtentType_altova_unnamed, value);
}

CCategoryExtentType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CCategoryExtentType_altova_unnamed);
}

void CCodeListType::operator=(const string_type& value) { 
	CNameListType::operator=(value);
}

void CCodeOrNilReasonListType::operator=(const string_type& value) { 
	CNameOrNilReasonListType::operator=(value);
}

void CCodeType::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CCodeWithAuthorityType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CCodeWithAuthorityType_altova_unnamed, value);
}

CCodeWithAuthorityType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CCodeWithAuthorityType_altova_unnamed);
}

void CCoordinatesType::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CDegreesType::operator=(const unsigned __int64& value) { 
	CDegreeValueTypeType::operator=(value);
}

void CDirectPositionListType::operator=(const string_type& value) { 
	CdoubleListType::operator=(value);
}

void CDirectPositionType::operator=(const string_type& value) { 
	CdoubleListType::operator=(value);
}

void CGenericMetaDataType::operator=(const string_type& value) { 
	CAbstractMetaDataType::operator=(value);
}

void CGridLengthType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CLengthType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CMeasureListType::operator=(const string_type& value) { 
	CdoubleListType::operator=(value);
}

void CMeasureOrNilReasonListType::operator=(const string_type& value) { 
	CdoubleOrNilReasonListType::operator=(value);
}

void CMeasureType::operator=(const double& value) { 
	CdoubleType::operator=(value);
}

void CQuantityExtentType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CQuantityExtentType_altova_unnamed, value);
}

CQuantityExtentType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CQuantityExtentType_altova_unnamed);
}

void CScaleType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CSequenceRuleType::operator=(const string_type& value) { 
	CSequenceRuleEnumerationType::operator=(value);
}

void CSpeedType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CStringOrRefType::operator=(const string_type& value) { 
	CstringType::operator=(value);
}

void CTimeIntervalLengthType::operator=(const double& value) { 
	CdecimalType::operator=(value);
}

void CTimePositionType::operator=(const string_type& value) { 
	CTimePositionUnionType::operator=(value);
}

void CTimeType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CVectorType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CVectorType_altova_unnamed, value);
}

CVectorType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CVectorType_altova_unnamed);
}

void CVolumeType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CbooleanOrNilReasonListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CbooleanOrNilReasonListType_altova_unnamed, value);
}

CbooleanOrNilReasonListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CbooleanOrNilReasonListType_altova_unnamed);
}

void CCountExtentTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CCountExtentTypeType_altova_unnamed, value);
}

CCountExtentTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CCountExtentTypeType_altova_unnamed);
}

void CintegerOrNilReasonListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CintegerOrNilReasonListType_altova_unnamed, value);
}

CintegerOrNilReasonListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CintegerOrNilReasonListType_altova_unnamed);
}

void CNilReasonTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CNilReasonTypeType_altova_unnamed, value);
}

CNilReasonTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CNilReasonTypeType_altova_unnamed);
}

void CDecimalMinutesTypeType::operator=(const double& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CDecimalMinutesTypeType_altova_unnamed, value);
}

CDecimalMinutesTypeType::operator double() {
	return CastAs<double >::Do(GetNode(), members + _altova_mi_gml_altova_CDecimalMinutesTypeType_altova_unnamed);
}

void CdoubleOrNilReasonListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CdoubleOrNilReasonListType_altova_unnamed, value);
}

CdoubleOrNilReasonListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CdoubleOrNilReasonListType_altova_unnamed);
}

void CintegerListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CintegerListType_altova_unnamed, value);
}

CintegerListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CintegerListType_altova_unnamed);
}

void CArcMinutesTypeType::operator=(const unsigned __int64& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CArcMinutesTypeType_altova_unnamed, value);
}

CArcMinutesTypeType::operator unsigned __int64() {
	return CastAs<unsigned __int64 >::Do(GetNode(), members + _altova_mi_gml_altova_CArcMinutesTypeType_altova_unnamed);
}

void CArcSecondsTypeType::operator=(const double& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CArcSecondsTypeType_altova_unnamed, value);
}

CArcSecondsTypeType::operator double() {
	return CastAs<double >::Do(GetNode(), members + _altova_mi_gml_altova_CArcSecondsTypeType_altova_unnamed);
}

void CNameOrNilReasonListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CNameOrNilReasonListType_altova_unnamed, value);
}

CNameOrNilReasonListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CNameOrNilReasonListType_altova_unnamed);
}

void CNameListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CNameListType_altova_unnamed, value);
}

CNameListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CNameListType_altova_unnamed);
}

void CDegreeValueTypeType::operator=(const unsigned __int64& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CDegreeValueTypeType_altova_unnamed, value);
}

CDegreeValueTypeType::operator unsigned __int64() {
	return CastAs<unsigned __int64 >::Do(GetNode(), members + _altova_mi_gml_altova_CDegreeValueTypeType_altova_unnamed);
}

void CdoubleListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CdoubleListType_altova_unnamed, value);
}

CdoubleListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CdoubleListType_altova_unnamed);
}

int CCompassPointEnumerationType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_gml_altova_CCompassPointEnumerationType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_gml_altova_CCompassPointEnumeration].Facets + 1, 16);
}

void CCompassPointEnumerationType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_gml_altova_CCompassPointEnumerationType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_gml_altova_CCompassPointEnumeration].Facets + 1, 16) );
}

void CCompassPointEnumerationType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CCompassPointEnumerationType_altova_unnamed, value);
}

CCompassPointEnumerationType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CCompassPointEnumerationType_altova_unnamed);
}

void CNCNameListType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CNCNameListType_altova_unnamed, value);
}

CNCNameListType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CNCNameListType_altova_unnamed);
}

int CSequenceRuleEnumerationType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_gml_altova_CSequenceRuleEnumerationType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_gml_altova_CSequenceRuleEnumeration].Facets + 1, 6);
}

void CSequenceRuleEnumerationType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_gml_altova_CSequenceRuleEnumerationType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_gml_altova_CSequenceRuleEnumeration].Facets + 1, 6) );
}

void CSequenceRuleEnumerationType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CSequenceRuleEnumerationType_altova_unnamed, value);
}

CSequenceRuleEnumerationType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CSequenceRuleEnumerationType_altova_unnamed);
}

void CCalDateType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CCalDateType_altova_unnamed, value);
}

CCalDateType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CCalDateType_altova_unnamed);
}

void CTimePositionUnionType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_gml_altova_CTimePositionUnionType_altova_unnamed, value);
}

CTimePositionUnionType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_gml_altova_CTimePositionUnionType_altova_unnamed);
}

} // namespace gml


void CBooleanType::operator=(const bool& value) { 
	CbooleanType::operator=(value);
}

void CCategoryType::operator=(const string_type& value) { 
	CCodeType::operator=(value);
}

void CCountType::operator=(const __int64& value) { 
	CintegerType::operator=(value);
}

void CQuantityType::operator=(const double& value) { 
	CMeasureType::operator=(value);
}

void CtypeOfTopoExpressionCodeTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CtypeOfTopoExpressionCodeTypeType_altova_unnamed, value);
}

CtypeOfTopoExpressionCodeTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CtypeOfTopoExpressionCodeTypeType_altova_unnamed);
}

int CSpaceLayerClassTypeTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CSpaceLayerClassTypeTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CSpaceLayerClassTypeType].Facets + 1, 5);
}

void CSpaceLayerClassTypeTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CSpaceLayerClassTypeTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CSpaceLayerClassTypeType].Facets + 1, 5) );
}

void CSpaceLayerClassTypeTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CSpaceLayerClassTypeTypeType_altova_unnamed, value);
}

CSpaceLayerClassTypeTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CSpaceLayerClassTypeTypeType_altova_unnamed);
}

namespace xlink
{	

void CresourceType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xlink_altova_CresourceType_altova_unnamed, value);
}

CresourceType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xlink_altova_CresourceType_altova_unnamed);
}

void Csimple::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xlink_altova_Csimple_altova_unnamed, value);
}

Csimple::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xlink_altova_Csimple_altova_unnamed);
}

void CtitleEltType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xlink_altova_CtitleEltType_altova_unnamed, value);
}

CtitleEltType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xlink_altova_CtitleEltType_altova_unnamed);
}

} // namespace xlink


namespace xs
{	

void CanyType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CanyType_altova_unnamed, value);
}

CanyType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xs_altova_CanyType_altova_unnamed);
}

void CbooleanType::operator=(const bool& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CbooleanType_altova_unnamed, value);
}

CbooleanType::operator bool() {
	return CastAs<bool >::Do(GetNode(), members + _altova_mi_xs_altova_CbooleanType_altova_unnamed);
}

void CstringType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CstringType_altova_unnamed, value);
}

CstringType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xs_altova_CstringType_altova_unnamed);
}

void CdateTimeType::operator=(const altova::DateTime& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CdateTimeType_altova_unnamed, value);
}

CdateTimeType::operator altova::DateTime() {
	return CastAs<altova::DateTime >::Do(GetNode(), members + _altova_mi_xs_altova_CdateTimeType_altova_unnamed);
}

void CdecimalType::operator=(const double& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CdecimalType_altova_unnamed, value);
}

CdecimalType::operator double() {
	return CastAs<double >::Do(GetNode(), members + _altova_mi_xs_altova_CdecimalType_altova_unnamed);
}

void CintegerType::operator=(const __int64& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CintegerType_altova_unnamed, value);
}

CintegerType::operator __int64() {
	return CastAs<__int64 >::Do(GetNode(), members + _altova_mi_xs_altova_CintegerType_altova_unnamed);
}

void CdoubleType::operator=(const double& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CdoubleType_altova_unnamed, value);
}

CdoubleType::operator double() {
	return CastAs<double >::Do(GetNode(), members + _altova_mi_xs_altova_CdoubleType_altova_unnamed);
}

void CanyURIType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CanyURIType_altova_unnamed, value);
}

CanyURIType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xs_altova_CanyURIType_altova_unnamed);
}

void CdurationType::operator=(const altova::Duration& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CdurationType_altova_unnamed, value);
}

CdurationType::operator altova::Duration() {
	return CastAs<altova::Duration >::Do(GetNode(), members + _altova_mi_xs_altova_CdurationType_altova_unnamed);
}

void CpositiveIntegerType::operator=(const unsigned __int64& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CpositiveIntegerType_altova_unnamed, value);
}

CpositiveIntegerType::operator unsigned __int64() {
	return CastAs<unsigned __int64 >::Do(GetNode(), members + _altova_mi_xs_altova_CpositiveIntegerType_altova_unnamed);
}

void CnonNegativeIntegerType::operator=(const unsigned __int64& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CnonNegativeIntegerType_altova_unnamed, value);
}

CnonNegativeIntegerType::operator unsigned __int64() {
	return CastAs<unsigned __int64 >::Do(GetNode(), members + _altova_mi_xs_altova_CnonNegativeIntegerType_altova_unnamed);
}

void CdateType::operator=(const altova::DateTime& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CdateType_altova_unnamed, value);
}

CdateType::operator altova::DateTime() {
	return CastAs<altova::DateTime >::Do(GetNode(), members + _altova_mi_xs_altova_CdateType_altova_unnamed);
}

void CtimeType::operator=(const altova::DateTime& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CtimeType_altova_unnamed, value);
}

CtimeType::operator altova::DateTime() {
	return CastAs<altova::DateTime >::Do(GetNode(), members + _altova_mi_xs_altova_CtimeType_altova_unnamed);
}

} // namespace xs


namespace xml
{	

} // namespace xml


}
